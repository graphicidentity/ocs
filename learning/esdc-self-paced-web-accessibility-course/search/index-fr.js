const indexJSON = [,{
 categories: 'module1',
 content: "  Introduction : Lignes directrices sur l’accessibilité Le World Wide Web Consortium (W3C) élabore des normes d’accessibilité du Web dans le cadre de l’Initiative sur l’accessibilité des sites Web : Les règles d’accessibilité pour les contenus Web (WCAG) Les règles d’accessibilité pour les outils d’édition (ATAG) traitent des outils de rédaction ; Les applications Internet riches et accessibles (IAW-ARIA) traitent des applications Web, du contenu dynamique et des commandes évoluées de l’interface utilisateur. ",
 href: '../module1/accessibility-guidelines-fr.html#introduction'  ,
 title: "Lignes directrices sur l’accessibilité" ,
 heading: " Introduction : Lignes directrices sur l’accessibilité"
},{
 categories: 'module1',
 content: "  Les règles d’accessibilité pour les contenus Web (WCAG) Les règles pour l’accessibilité des contenus Web (WCAG) est un document normatif technique qui explique comment rendre le contenu Web plus accessible aux personnes vivant avec un handicap. Le « contenu » Web désigne généralement l’information contenue dans une page Web ou une application Web, y compris : l’information naturelle comme le texte, les images et les sons le code ou la majoration qui définit la structure, la présentation, etc. Les WCAG traitent des obstacles auxquels font face un large éventail de personnes handicapées, y compris celles qui ont des déficiences visuelles, auditives, physiques, cognitives et neurologiques. Ces lignes directrices traitent également de l’accessibilité du contenu Web qui est affiché sur les ordinateurs de bureau, les ordinateurs portatifs, les tablettes et les appareils mobiles. De plus, ces lignes directrices rendront le contenu Web plus accessible à tous les utilisateurs en général. Versions Mises en œuvre pour la première fois en tant que version WCAG 1.0 en 1999. La norme WCAG 2.0 a été publiée en 2008. La norme WCAG 2.1 actuelle a été publiée en 2018. La norme WCAG 2.2 devrait être achevée et publiée en 2021. Tous les critères des versions 2.0 et 2.1 sont inclus dans la version 2.2. La norme WCAG 2.2 comporte 9 critères supplémentaires. La version préliminaire de la norme WCAG 3.0 a été publiée pour la première fois en janvier 2021. Elle fait état d’un nouveau modèle de conformité : bronze, argent et or. Différents niveaux de lecture de la norme WCAG 2.1 Les quatre principes de base pour l’accessibilité du Web, qui sont : perceptible, utilisable, compréhensible et robuste. Chaque principe a des lignes directrices. Les 13 lignes directrices garantissent que le contenu est directement accessible au plus grand nombre de personnes possible et qu’il peut être présenté de nouveau sous différentes formes. Les critères de réussite décrivent ce qui doit être réalisé pour se conformer aux DACW. Ils sont rédigés sous forme d’énoncés vérifiables (vrai ou faux) qui ne sont pas propres à la technologie. Tous les critères de réussite sont des aspects d’accès importants pour les personnes en situation de handicap. Il y a 50 critères de réussite de niveau A et de niveau AA dans les WCAG 2.1. Cible du niveau de conformité aux WCAG d’EDSC EDSC vise à atteindre le niveau de conformité AA des WCAG 2.1 pour les sites Web, les applications Web, les applications et les logiciels commerciaux utilisés à l’interne. WCAG 2.1 en un coup d’œil Cette section présente un résumé reformulé des WCAG 2.1. Perceptible Proposer des textes alternatifs à tout contenu non textuel. Proposer des versions de remplacement aux médias temporels. Créer un contenu qui puisse être présenté de différentes manières sans perte d’informations ni de structure. Faciliter la perception visuelle et auditive du contenu par l’utilisateur. Utilisable Rendre toutes les fonctionnalités accessibles au clavier. Laisser à l’utilisateur suffisamment de temps pour lire et utiliser le contenu. Ne pas utiliser de contenu susceptible de provoquer des crises d’épilepsie ou des réactions physiques. Aider l’utilisateur à naviguer et à trouver le contenu. Faciliter l’utilisation d’entrées autres que le clavier. Compréhensible Rendre le contenu textuel lisible et compréhensible. Faire en sorte que les pages apparaissent et fonctionnent de manière prévisible. Aider l’utilisateur à éviter et à corriger les erreurs de saisie. Robuste Optimiser la compatibilité avec les outils actuels et le futur des utilisateurs. L’information présentée dans cette section provient du document de l’Initiative d’accessibilité du Web (IAT) : WCAG 2.1 en un coup d’œil – Shawn Lawton Henry and Wayne Dick, eds. Copyright © 2018 W3C® (MIT, ERCIM, Keio). Statut : Mise à jour le 5 juin 2018. ",
 href: '../module1/accessibility-guidelines-fr.html#wcag'  ,
 title: "Lignes directrices sur l’accessibilité" ,
 heading: " Les règles d’accessibilité pour les contenus Web (WCAG)"
},{
 categories: 'module1',
 content: "  Règles d’accessibilité pour les outils d’édition (ATAG) Qu’est-ce que les règles ATAG? Les Règles d’accessibilité pour les outils d’édition (ATAG) 2,0 ont été recommandées par le W3C le 24 septembre 2015 et font maintenant partie de l’initiative d’accessibilité au Web du World Wide Web Consortium (IAW-W3C). Les outils d’édition peuvent aider les développeurs et les utilisateurs à créer du contenu Web accessible au moyen de normes de conception appropriées. En quoi consistent les outils d’édition? Les outils d’édition sont des logiciels et des services utilisés pour créer du contenu Web ; il s’agit notamment : D’outils logiciels pour la gestion du site Web, comme les plateformes des systèmes de gestion du contenu (SGC) ; D’outils conçus pour produire du contenu Web (p. ex., éditeurs HTML et XML « Ce que vous voyez est ce que vous obtenez » » [WYSIWYG]); Des sites Web qui permettent aux utilisateurs d’ajouter du contenu, comme des blogues et des wikis ; D’outils permettant de convertir des documents en formats Web (p. ex., traitement de texte). Liens entre les ATAG et les WCAG Les développeurs Web utilisent habituellement des outils d’édition et d’évaluation pour créer du contenu Web. Les gens utilisent des navigateurs Web, des lecteurs de médias, des technologies d’assistance ou d’autres « agents utilisateurs » pour accéder au contenu et interagir avec celui-ci. ATAG 2.0 en un coup d’œil Les ATAG 2.0 sont divisées en deux parties. La partie A présente l’accessibilité des interfaces utilisateurs de l’outil d’édition aux auteurs ayant un handicap. La partie B présente le soutien des outils d’édition pour la création de contenu Web p pour rendre le contenu plus accessible aux utilisateurs ayant un handicap. Partie A) rendre accessible l’interface utilisateur de l’outil d’édition Permets de s’assurer que les fonctionnalités Web et non Web sont accessibles. Les vues d’éditions sont perceptibles en mettant le contenu valide à la disposition des auteurs. Permets de s’assurer que les vues d’édition sont utilisables, comme l’accès par clavier, aux fonctions d’édition, fournit une capacité de recherche textuelle du contenu, aide les auteurs à éviter tout contenu clignotant, etc. Permets de s’assurer que les vues d’édition sont compréhensibles en documentant l’interface utilisateur, y compris toutes les fonctions d’accessibilité, et d’aider les auteurs à éviter et à corriger les erreurs. Partie B) Appuyer la production d’un contenu accessible Permets de s’assurer que le contenu automatiquement spécifié est accessible et préservé. Permets de s’assurer que le contenu est accessible en guidant et en aidant les auteurs à produire et à gérer du contenu et des modèles accessibles. Permets de s’assurer que les auteurs reçoivent du soutien pour améliorer l’accessibilité du contenu existant en vérifiant et en corrigeant les problèmes d’accessibilité. Permets de s’assurer que les outils d’édition favorisent la documentation appropriée et intègrent des caractéristiques à la production d’un contenu accessible. L’information présentée dans cette section provient du document de l’Initiative d’accessibilité du Web (IAT) : ATAG en un coup d’œil. Shawn Lawton Henry and Wayne Dick, eds. Copyright © 2021 W3C ® (MIT, ERCIM, Keio, Beihang). Statut : Mise à jour le 1er juillet 2020. Publié pour la première fois en juillet 2005. ",
 href: '../module1/accessibility-guidelines-fr.html#atag'  ,
 title: "Lignes directrices sur l’accessibilité" ,
 heading: " Règles d’accessibilité pour les outils d’édition (ATAG)"
},{
 categories: 'module1',
 content: "  Les applications Internet riches et accessibles (IAW-ARIA) IAW-ARIA, la suite d'applications Internet riches et accessibles, définit une façon de rendre le contenu et les applications Web plus accessibles aux personnes handicapées. La suite aide notamment les utilisateurs de lecteurs d’écran et de clavier grâce à un contenu dynamique et des commandes avancées d’interface utilisateur développées avec HTML, JavaScript et des technologies connexes. IAW-ARIA fournit un cadre pour l’ajout d’attributs permettant d’identifier des caractéristiques de l’interaction entre les utilisateurs, la façon dont ils interagissent entre eux et leur état actuel. Grâce à IAW-ARIA, les développeurs peuvent identifier différentes zones de la page pour permettre aux utilisateurs du lecteur d’écran de se déplacer facilement d’une zone à l’autre. Ils peuvent également créer des widgets tels que des boutons, des listes déroulantes, des carrousels, des fonctions de calendrier, des onglets, des curseurs, des divulgations (afficher/masquer) et autres. La spécification technique IAW-ARIA 1.2 présente des caractéristiques permettant de définir les éléments d’interface utilisateur accessible, d’améliorer l’accessibilité, l’interopérabilité du contenu et des applications Web. La spécification technique IAW-ARIA est une référence occasionnelle pour quelque chose comme la définition d’un attribut ARIA. Elle est principalement axée sur les exécutants des agents utilisateurs. Les Pratiques de rédaction ARIA recommandent des approches pour aider les développeurs d’applications Web à rendre accessibles les widgets, la navigation et les comportements à l’aide d’attributs IAW-ARIA (rôles, états et propriétés, décrits plus loin dans le cours). Les pratiques d’édition IAW-ARIA sont un manuel pratique couramment cité qui présente des modèles de conception détaillés pour les widgets, y compris l’interaction et le comportement attendus au clavier, ainsi que des exemples de travail avec HTML, CSS et JavaScript complets. Widgets équivalents à la Boîte à outils de l’expérience Web (BOEW) La Boîte à outils pour l’accessibilité du Web (BOEW) est un cadre initial primé composé de gabarits souples et thématiques et de composantes réutilisables qui sont accessibles, faciles à utiliser, interopérables, conviviales et multilingues. La BOEW met en œuvre des widgets qui correspondent principalement aux tendances décrites dans les pratiques d’édition IAW-ARIA. Vérifiez toujours la présence d’un widget dans la BOEW avant d’en créer un. Boîte à outils de l’expérience Web (BOEW) – Exemples pratiques – Boîte à outils de l’expérience Web (wet-boew.github.io) Certains widgets communs à la BOEW et aux pratiques d’édition IAW-ARIA Pratiques d’édition ARIA dans le cadre de l’IAW BOEW Accordion (Accordéon) Basculement – accordéon Carousel (Carrousel) Interface à onglets – Carrousel Dialog (Dialogue) Lightbox Disclosure: Show/Hide (Divulgation: afficher/masquer) Basculement – Groupé Menu Menu Tabs (Onglets) Interface à onglets ",
 href: '../module1/accessibility-guidelines-fr.html#wai-aria'  ,
 title: "Lignes directrices sur l’accessibilité" ,
 heading: " Les applications Internet riches et accessibles (IAW-ARIA)"
},{
 categories: 'module1',
 content: "  Loi canadienne sur l’accessibilité (LCA) La Loi canadienne sur l’accessibilité est entrée en vigueur le 11 juillet 2019. L’objectif consiste à cerner, à éliminer et à prévenir les obstacles dans 7 domaines clés : Conception et prestation de services Environnement bâti Emploi Technologies de l’information et des communications Communications Transport Approvisionnement Les objectifs de la LCA comprennent la réalisation d’un Canada exempt d’obstacles, un changement de culture, l’élaboration de normes, des mesures proactives de conformité et d’application de la loi, la surveillance et la supervision. La LCA s’applique aux entités sous la réglementation fédérale, y compris les ministères et les organismes du gouvernement du Canada, aux sociétés d’État, au Parlement et au secteur privé sous réglementation fédérale. Les exigences englobent la publication de plans d’accessibilité, de processus de rétroaction et de rapports d’étape. Les normes d’accessibilité Canada (NAC) et l’Organisation canadienne d’élaboration de normes d’accessibilité (OCENA) formeront des comités techniques chargés d’élaborer des normes d’accessibilité dans les 7 domaines clés. Ces comités comprendront des experts, des personnes handicapées et des représentants de l’industrie. Les normes d’accessibilité seront affichées en ligne aux fins de commentaires du public. Les normes finales seront soumises au ministre pour qu’il les adopte dans les règlements. ",
 href: '../module1/laws-and-government-standards-fr.html#aca'  ,
 title: "Lois et normes gouvernementales – Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Loi canadienne sur l’accessibilité (LCA)"
},{
 categories: 'module1',
 content: "  Norme sur l’accessibilité des sites Web du gouvernement du Canada La Norme sur l’accessibilité des sites Web du gouvernement du Canada a été élaborée pour assurer l’application uniforme d’un haut niveau d’accessibilité des sites Web à l’échelle des sites et applications Web accessibles au public du gouvernement du Canada. La norme sur l’accessibilité des sites Web du gouvernement du Canada sera bientôt obsolète. Elle sera remplacée par le Standard d’Accessibilité pour les TIC. Le nouveau standard constate que les sites qui font face au public et à l’interne doivent respecter la norme EN 301 549, le standard Européen pour l’Accessibilité numérique. La norme EN 301 549 est mise à jour pour intégrer les Directives pour l’Accessibilité du Contenu Web (DACW) 2,1 (niveau AA) pour le contenu web, les documents électroniques, et puis les logiciels qui ne sont pas basés sur les navigateurs web. La Ligne directrice sur l’utilisabilité de la technologie de l’information (TI) par tous exige aussi que le contenu web conforme aux normes EN 301 549 et puis WCAG 2,1 niveau AA. Le Bureau de l’accessibilité des TI d’EDSC dirige le Projet de conformité en matière d’accessibilité (PCA) pour assurer la conformité des applications utilisées à l’interne. Le niveau de conformité cible est également le niveau AA des DACW 2.1. ",
 href: '../module1/laws-and-government-standards-fr.html#gov'  ,
 title: "Lois et normes gouvernementales – Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Norme sur l’accessibilité des sites Web du gouvernement du Canada"
},{
 categories: 'module1',
 content: "  Cécité Le W3C définit la cécité comme une « perte de vision importante incorrigible aux deux yeux ». Les personnes atteintes de cécité : utilisent un logiciel de lecture d’écran pour convertir le texte en parole ou en braille ; naviguent dans le concept à l’aide du clavier ; écoutent la description auditive de la vidéo ou lisent la transcription ; se fient à des structures de page HTML codées convenablement (comme des listes, des en-têtes et des tableaux) et à des commandes (comme des liens, des boutons et des commandes de formulaire) pour lire et naviguer dans le concept et exploiter ses fonctions. Vidéo : Comment les aveugles utilisent l'internet Transcription - Vidéo : Comment les aveugles utilisent l'internet Musique en fond L’OBS, Comment les aveugles utilisent l’internet? Musique en fond Alex Bernier, Directeur technique de l’association “BrailleNet” : Je vais chercher Météo Paris 13eme dans Google. Le lecteur d’écran lit les informations de la page web. Alex: Comme le site est bien structuré, je peux naviguer de titre en titre pour choisir la, pour visualiser les différents jours. Alex: Il va faire entre 15 dégrées et 25 dégrées. Qu’on aura des éclaircies et du vent de nord-est. LA “PLAGE BRAILLE” REMPLACE L’ÉCRAN Alex: Une « plage braille » c’est un dispositif qui est constitué de points, de picots plastiques qui montent et qui descendent. Ça se connecte à un ordinateur, un téléphone portable, ou à une tablette. C’est l’équivalent de l’écran pour une personne aveugle. Ça peut être couplé avec un logiciel de synthèse vocale. LE LOGICIEL DE SYNTHÈSE VOCALE – LIT LE TEXTE À L’ÉCRAN Le lecteur d’écran lit les informations de la page web. Alex: Donc, là, le lecteur d’écran prononce tout ce qui affiche à l’écran. Le lecteur d’écran lit les informations de la page web. Alex: Où est le mec, par exemple? Le lecteur d’écran lit les informations de la page web. Alex: La voix parle relativement vite, même ça peut être encore plus rapide. C’est pour naviguer sur l’internet aussi rapidement que n’importe qui d’autres. Alex: Il arrive souvent qu’on s’arrache les cheveux pour faire des choses que d’autres personnes valides vont faire très simplement comme acheter des places de concerts ou acheter un livre. Il y a des difficultés récurrentes qui sont par exemple les images non-écrites. LES IMAGES – SANS DESCRIPTIONS RESTENT INVISIBLES Alex: Les images, elles ne sont pas lisibles en braille, donc on doit proposer ce qu’on appelle une alternative à l’image. Un autre problème récurrent, ce sont souvent avec les boutiques en ligne, parfois, on n’est pas capable de sélectionner le mode de paiement, parce que la formation est présentée sous forme de pictogrammes qui ne sont pas décrits. NAVIGATION – SANS SOURIS Alex: Là, vous avez vu que je n’ai pas du tout utiliser la souris pour naviguer, et donc, sur certains sites, ils arrivent que le bouton permettant de valider un panier, ou de lancer le paiement, ne soit qu’utilisable à la souris. Donc comme on navigue exclusivement au clavier, et mais c’est, c’est inaccessible, on ne peut pas se servir du site. Le lecteur d’écran se rend sur Twitter. Il lit la recherche et quelques tweets. Alex: Alors, Il y a des solutions techniques, il y a des normes et des recommandations. Et des normes qui existent aujourd’hui pour mettre en œuvre l’accessibilité techniquement. Ça n’avance pas autant que ça pourrait, et que la technique permettrait d’avancer. C’est notamment en France, le manque d’incitation pour les propriétaires de sites, ils ne sont pas assez soutenus quand ils font un site accessible. SEULS 4% DES SITES PUBLICS SONT ACCESSIBLES Alex: Et c’est aussi le manque de sanctions, ils ne se passent pas grand-chose quand un site est inaccessible. et les utilisateurs ont très peu de recours pour se plaindre, lorsqu’ils ne peuvent pas utiliser un site. L’OBS, Interview: Amandine Schmitt, Images: Elena Brunet, Musique de fond Source: L'OBS [L’Obs]. (2015, July 30). Comment les aveugles utilisent internet [Video]. YouTube. Concept visant la cécité Fournir des textes alternatifs pour les images. Fournir des transcriptions descriptives ou une audio description pour la vidéo. Ne pas utiliser la couleur comme seul moyen visuel pour transmettre de l’information. S’assurer que toutes les fonctions sont utilisables à l’aide d’un clavier. Baliser le contenu avec une structure et une sémantique appropriée (en-têtes, repères, tableaux, listes, etc.). Fournir le nom, le rôle et la valeur des commandes personnalisés. Fournir les utilisateurs la possibilité d’arrêter, de mettre en pause et d’ajuster le volume du contenu audio (indépendamment du volume du système). ",
 href: '../module1/types-of-disabilities-fr.html#blind'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Cécité"
},{
 categories: 'module1',
 content: "  Malvoyance Le W3C définit la malvoyance comme suit : « faible acuité (vision qui n’est pas tranchée), vision tunnel (vue seulement au milieu du champ visuel), perte du champ central (vue des bords du champ visuel uniquement) et vision trouble ». La malvoyance englobe les personnes atteintes de cataractes, de rétinopathie diabétique, de glaucome, d’hémianopsie, de dégénérescence maculaire, de décollement rétinien, etc. La perte de vision peut prendre plusieurs formes et être légère ou plutôt extrême. Par exemple, partons du principe que cette image correspond à une vision normale : Certaines personnes présentent une hypersensibilité aux reflets : Certaines personnes peuvent être daltoniennes : Certaines personnes peuvent voir une image complète, mais cette image peut être floue ou brouillée : D’autres personnes pourraient voir le centre de l’image, symptôme souvent appelé « vision en tunnel » : D’autres personnes pourraient voir les bords de l’image qui troublent la « vision périphérique » : Un faible contraste crée des obstacles à l’interaction, car les utilisateurs peuvent ne pas être en mesure de déterminer leur emplacement sur une page, l’état des liens et des commandes, de lire du texte ou de déterminer le contenu des images. Les personnes malvoyantes peuvent agrandir du texte ou changer les polices de caractères, les couleurs et l’espacement pour rendre le contenu plus exploitable en fonction de leurs besoins. Les personnes dont le champ de vision est restreint peuvent ne pas agrandir le texte, mais bénéficier d’un concept réactif (pour réduire l’affichage), d’un regroupement de renseignements connexes et d’un positionnement étroit des étiquettes et des commandes. Vidéo : Démonstration de la technologie d'assistance: Logiciel Zoom Text Transcription - Vidéo : Logiciel Zoom Text Musique de fond Narratrice: Zoom Text Express est un logiciel d’agrandissement. Narratrice: Le zoom peut concerner soit l’écran entier, soit une petite fenêtre, soit une grande fenêtre. Il peut être agrandi jusqu’à deux fois. Démonstration de l’utilisation de la grande fenêtre avec de la musique de fond Démonstration de l’utilisation de la petite fenêtre avec de la musique de fond Narratrice: Les contrastes peuvent être modifiés ainsi que la couleur du pointeur et du curseur. Démonstration de l’utilisation du changement du pointeur et du curseur avec de la musique de fond Musique de fond Source: Elsa CRIAS [Elsa CRIAS]. (2014, November 12). Logiciel Zoom Text [Video]. YouTube. Concept visant la malvoyance Assurer un contraste suffisant entre le texte et la couleur de fond. S’assurer que la cible et l’état de survol des liens, des boutons et des autres commandes sont bien visibles. Établir une distinction visuelle claire entre le contenu et les commandes (p. ex., entre le texte et les boutons, les liens, etc.). Placer les étiquettes près de leurs commandes. Utiliser éventuellement la couleur pour aider les utilisateurs à distinguer les différentes zones de la page. ",
 href: '../module1/types-of-disabilities-fr.html#low-vision'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Malvoyance"
},{
 categories: 'module1',
 content: "  Daltonisme Le W3C définit le daltonisme comme « la difficulté à faire la distinction entre les couleurs, comme entre le rouge et le vert ou entre le jaune et le bleu, et parfois l’incapacité à percevoir une couleur ». Les obstacles pour ces utilisateurs se manifestent partout où seule la couleur véhicule un sens. Par exemple, un formulaire indiquant des champs obligatoires avec une étiquette rouge sans astérisque ou un lien en bleu dépourvu de toute autre amélioration visuelle (soulignement, contraste de 3:1 avec un texte voisin, bordure, etc.). Dans la simulation de daltonisme ci-dessous, les colonnes rouge et verte de l’histogramme sont difficiles à discerner. La solution consiste ici à ajouter un motif de fond, mais les barres pourraient aussi être étiquetées avec du texte visible. Simulation de daltonisme associé au rouge-vert Image originale : L'exemple commence L'exemple finit Simulation de protanopie (difficulté à percevoir la couleur rouge) : L'exemple commence L'exemple finit Bon exemple type : Utilisation d’un motif de fond Dans cet exemple, des motifs de fond sont utilisés pour identifier les trois catégories x, y et z. La couleur ne véhicule plus uniquement le sens. L'exemple commence L'exemple finit Concept visant le daltonisme Assurer un contraste suffisant entre le texte et la couleur de fond. Ne pas utiliser la couleur comme seul moyen visuel pour transmettre de l’information (p. ex., associer une étiquette textuelle ou introduire un motif de fond en plus de la couleur). S’assurer qu’il est possible de discerner les liens visuellement par rapport au texte voisin avec plus de couleur. ",
 href: '../module1/types-of-disabilities-fr.html#colour-blind'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Daltonisme"
},{
 categories: 'module1',
 content: "  Déficience auditive W3C définit une déficience auditive comme étant une perte d’audition légère ou modérée dans une des oreilles ou dans les deux (« déficience auditive ») ou une perte auditive importante et non corrigible dans les deux oreilles (« surdité »). Les personnes ayant une déficience auditive ne peuvent pas entendre l’audio, préfèrent le contenu audio sous une autre forme ou accompagné de sous-titres. La majeure partie du Web est en format visuel ou texte. Il est essentiel de rendre le contenu audio accessible aux utilisateurs ayant une déficience auditive. Concept visant la déficience auditive Prévoir des sous-titres pour le contenu audio-vidéo. Fournir une transcription du contenu audio-vidéo. Fournir une transcription du contenu audio seulement. Fournir les utilisateurs la possibilité d’arrêter, de mettre en pause et d’ajuster le volume du contenu audio (indépendamment du volume du système). ",
 href: '../module1/types-of-disabilities-fr.html#deaf'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Déficience auditive"
},{
 categories: 'module1',
 content: "  Surdité et cécité Pour lire, les personnes sourdes et aveugles utilisent un lecteur d’écran doté d’un afficheur braille dynamique, qu’ils manipulent avec leurs doigts. Les personnes sourdes et aveugles ne peuvent accéder au contenu multimédia (audio seulement, vidéo seulement et vidéo avec audio) qu’au moyen de la transcription associée. Ils ne peuvent pas entendre le son, ni voir la vidéo ou lire les sous-titres. Les fichiers audios nécessitent une transcription de base du contenu audio, et les fichiers vidéo nécessitent une transcription descriptive où l’information audio et visuelle essentielle est communiquée. Concept visant la surdité et la cécité Certaines considérations s’appliquent aux utilisateurs aveugles et sourds, bien que les sous-titres vidéo ne soient pas accessibles au braille dans la plupart des technologies d’assistance. Fournir des transcriptions de base de fichiers audio et des transcriptions descriptives de fichiers vidéo (transcriptions qui comprennent toute l’information audio et visuelle essentielle). Convertisseur braille Le convertisseur Braille se situe habituellement directement sous le clavier. Les lecteurs d’écran interceptent le contenu de la page et envoient les caractères au convertisseur Braille. ",
 href: '../module1/types-of-disabilities-fr.html#deaf-blindness'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Surdité et cécité"
},{
 categories: 'module1',
 content: "  Handicaps moteurs Les handicaps moteurs peuvent faire référence à un large éventail de déficiences physiques. L’utilisation d’une souris n’est souvent pas une option envisageable. Il se peut que les utilisateurs ne soient pas capables temporairement d’utiliser une seule main en raison d’une blessure, d’une difficulté à utiliser ou à contrôler leurs mains, d’un contrôle moteur limité ou inexistant de leurs membres ou d’une main ou d’un membre manquant. Les personnes ayant une déficience motrice utilisent souvent d’autres claviers ou dispositifs de saisie qui agissent comme des émulateurs de clavier. Les émulateurs de clavier comprennent un logiciel de reconnaissance de la parole, des dispositifs de commande au souffle, des claviers à l’écran, des logiciels de balayage et d’autres technologies d’assistance. Il est important de s’assurer que toutes les fonctionnalités du contenu sont utilisables au moyen d’une interface clavier. Vidéo : Contacteur au souffle Transcription - Vidéo : Contacteur au souffle Narrateur: Bonjour, alors, nous avons testé le contracteur au souffle et ce dispositif, on va le brancher dans le Bluetooth switch qui lui sera connecté via Bluetooth à un iPad. Donc, on va le tester dans différentes situations. Narrateur: Alors, pour la navigation, soit je souffle pour aller d’un élément à l’autre, soit j’aspire pour sélectionner les éléments. Comme ceci! Démonstration du contracteur au souffle Le narrateur se rend sur l’application Astuces sur l'iPad. Il ouvre l’application Notes et montre comment utiliser le clavier. Narrateur: Dans un traitement de texte Le narrateur souffle pour se déplacer sur le clavier et il aspire lorsqu’il clique sur une lettre. Narrateur: Sur cette application musicale Le narrateur est dans une application de musique et il navigue dans l’application avec le contracteur. On change d’application pour Safari. Il est sur une page de journal. Narrateur: Pour une capture d’écran, sur l’internet, Le narrateur navigue sur la tablette pour aller prendre une capture d’écran. Source: Muraille Pierre [Muraille Pierre]. (2015, September 8). Contacteur au souffle [Video]. YouTube. Concept visant les handicaps moteurs S’assurer que toutes les fonctions sont disponibles au moyen de la souris et du clavier pour les utilisateurs qui pourraient ne pas être en mesure d’utiliser la souris. Permettre aux utilisateurs de modifier ou de désactiver les raccourcis à touche unique. Pour ceux qui utilisent un logiciel de saisie vocale : Fournir un lien visible et du texte du bouton. S’assurer que le texte de l’étiquette visible correspond à l’étiquette ARIA ou en soit un élément, le cas échéant Prévoir un temps de réponse minimal de 20 secondes avant l’expiration du délai. S’assurer que le contenu fonctionne à la fois en orientation horizontale et verticale et ne pas se fier aux techniques de « balayage » ou « faire glisser ». ",
 href: '../module1/types-of-disabilities-fr.html#motor-disabilities'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Handicaps moteurs"
},{
 categories: 'module1',
 content: "  Troubles de la parole Les personnes ayant des troubles de la parole ont de la difficulté à produire des sons vocaux et à utiliser les muscles de leur bouche. Concept visant les troubles de la parole S’assurer qu’une solution de rechange aux services vocaux est fournie sous la forme de clavardage, de formulaires, de courriels, etc.. Si la page « Nous contacter » comporte un numéro de téléphone, fournir également un moyen de contact textuel (courriel ou formulaire « pour nous joindre » accessible). S’assurer que toute fonction de recherche vocale comporte une option de recherche textuelle. ",
 href: '../module1/types-of-disabilities-fr.html#speech-disabilities'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Troubles de la parole"
},{
 categories: 'module1',
 content: "  Troubles cognitifs, d’apprentissage et neurologiques Les invalidités cognitives représentent, et de loin, le type d’incapacité le plus courant. Selon le W3C-IAW, les troubles cognitifs, d’apprentissage et neurologiques affectent n’importe quelle partie du système nerveux et influent sur la façon dont les gens entendent, bougent, voient, parlent et comprennent l’information. Les troubles cognitifs, d’apprentissage et neurologiques n’affectent pas nécessairement l’intelligence d’une personne. Exemples de déficiences cognitives, d’apprentissage et neurologiques Trouble Déficitaire de l’attention Avec Hyperactivité (TDAH) Il s’agit d’une difficulté à se concentrer sur une seule tâche, à se concentrer pendant de plus longues périodes ou capacité à être facilement distrait. Trouble du Spectre Autistique (TSA) (comprend l’« autisme », le « syndrome d’Asperger » et le « Trouble Envahissant du Développement » [TED]) Il inclut les déficiences des capacités de communication et d’interaction sociales, et parfois des habitudes et des intérêts restreints. Déficiences intellectuelles (parfois appelées « troubles d’apprentissage » en Europe et dans d’autres pays, et « troubles du développement » dans d’autres régions) Elles incluent les déficiences de l’intelligence, un apprentissage plus lent ou la difficulté à comprendre des concepts complexes. Le syndrome de Down est l’une des nombreuses causes de déficience intellectuelle. Troubles d’apprentissage Il s’agit d’un terme fonctionnel plutôt que d’un problème de santé, et n’est pas défini de manière homogène. En Europe et dans certains autres pays, il s’agit de déficiences intellectuelles, tandis qu’en Australie, au Canada, aux États-Unis et dans d’autres pays, il s’agit de déficiences perceptuelles. Troubles de santé mentale Ils comprennent l’anxiété, le délire, la dépression, la paranoïa, la schizophrénie et de nombreux autres troubles. Ces états peuvent entraîner des difficultés à se concentrer sur l’information, à traiter l’information ou à la comprendre. En particulier, les médicaments prescrits pour ces troubles peuvent avoir des effets secondaires comme une vision trouble, un tremblement des mains et d’autres déficiences. Troubles de la mémoire Mémoire à court terme limitée ; mémoire à long terme manquante ou capacité limitée à se souvenir du langage. La démence est l’une des nombreuses causes de troubles de la mémoire. Sclérose en plaques Elle cause des lésions aux cellules nerveuses du cerveau et de la moelle épinière et peut affecter les capacités auditives, cognitives, physiques ou visuelles, en particulier pendant les poussées. Neurodiversité Il s’agit d’un terme sociétal plutôt que médical qui décrit la diversité naturelle du fonctionnement neurocognitif, comme le sexe, l’ethnicité, l’orientation sexuelle et le handicap. Troubles perceptuels (parfois appelés « troubles d’apprentissage » en Australie, au Canada, aux États-Unis et dans d’autres pays) Difficulté à traiter de l’information auditive, tactile, visuelle ou sensorielle. Cela peut avoir un impact sur la lecture (dyslexie), l’écriture (dysgraphie), le traitement des chiffres (dyscalculie) ou l’orientation spatiale et temporelle. Troubles convulsifs Ils comprennent différents types d’épilepsie et de migraines, qui peuvent survenir en réaction au clignotement visuel ou à des signaux audios à certaines fréquences ou tendances. Exemples d’obstacles pour les personnes ayant des troubles cognitifs, d’apprentissage et neurologiques Mécanismes de navigation complexes et mises en page difficiles à comprendre et à utiliser. Phrases complexes difficiles à lire et mots inhabituels difficiles à comprendre. Longs passages de texte sans images, graphiques ou autres illustrations pour mettre en évidence le contexte. Contenu en mouvement, clignotant ou scintillant et audio de fond qui ne peut pas être désactivé. Navigateurs Web et lecteurs de médias qui ne fournissent pas de mécanismes pour supprimer les animations et l’audio. Concepts de pages visuelles qui ne peuvent pas être adaptées au moyen de commandes de navigateur Web ou de feuilles de style personnalisées. Concept visant les troubles cognitifs, d’apprentissage et neurologiques Les personnes ayant des troubles cognitifs, d’apprentissage et neurologiques comptent souvent sur : Un contenu clairement structuré qui facilite l’aperçu et l’orientation. L’étiquetage uniforme des formulaires, des boutons et des autres parties du contenu. Les cibles de lien prévisibles, la fonctionnalité et l’interaction globale. Différentes façons de naviguer sur les sites Web, comme le menu hiérarchique et la recherche. Les options de suppression du contenu clignotant, scintillant, étincelant et d’autre contenu distrayant. Texte plus simple complété par des images, des graphiques et d’autres illustrations. Le guide de rédaction du contenu Canada.ca exige que les sites qui font face au public aient un contenu qui est au niveau de lecture grade 8, et puis les sites qui font face a l’interne un niveau grade 10. Un outil nommé le Flesch-Kincaid Grade Level test, disponible en anglais exclusivement à l’intérieur de Microsoft Word sous les options d’orthographie et grammaire. L’outil de la mesure de lisibilité www.scolarius.com offre une métrique semblable pour le texte français; une mesure entre 50-89 correspond a le niveau primaire d’éducation, entre 90 et 119 au niveau secondaire, et puis entre 150 a 189 au niveau universitaire. Convulsions Des lumières qui clignotent rapidement ou des effets stroboscopiques dans la vidéo, les graphiques ou l’animation peuvent causer des crises photos épileptiques chez les utilisateurs atteints d’épilepsie photosensible. Ces crises, aussi appelées convulsions, sont des perturbations électriques soudaines et non contrôlées du cerveau qui peuvent causer des préjudices physiques. Les feux clignotants peuvent déclencher une crise si : Des lumières clignotent plus de 3 fois par seconde. Le contenu du clignotant est assez grand. Les DACW fournissent une formule complexe ici, mais la règle générale est qu’un contenu clignotant dépassant 21 824 pixels carrés pose problème. Le contenu clignotant présente un contraste élevé. Les DACW constituent une autre formule complexe ici, mais il est recommandé d’évaluer le contenu clignotant à l’aide d’un outil comme le Photosensitive Epilepsy Analysis Tool (PEAT). Comme les utilisateurs peuvent agrandir la page et agrandir la zone clignotante, il est plus sécuritaire de limiter le clignotement de n’importe quelle taille de contenu à un maximum de trois clignotements par période de 1 seconde. Concept visant les troubles convulsifs Ne pas inclure de séquences lumineuses clignotantes de 3 fois ou plus par seconde dans les vidéos, les animations ou les transitions. Si vous ne pouvez pas modifier la source, vous ne devriez pas l’utiliser. ",
 href: '../module1/types-of-disabilities-fr.html#disabilities'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Troubles cognitifs, d’apprentissage et neurologiques"
},{
 categories: 'module1',
 content: "  Déficience de lecture Difficulté à lire Certaines personnes ayant des troubles cognitifs et dyslexiques ont des difficultés à lire. Pour les personnes dyslexiques, l’orthographe ou la lecture des mots peuvent être sujettes à des erreurs parce que le codage visuel du texte est difficile. Simulation de dyslexie Voici la simulation d’une expérience de lecture dyslexique, où les lettres semblent bouger et changer de place. Simulation de dyslexie Le Bureau de l’accessibilité des TI (BATI) demeure un fournisseur de technologies d’adaptation et un défenseur de l’inclusion des personnes handicapées en milieu de travail. Nous sommes des chefs de file reconnus, déterminés à exécuter notre mandat en matière d’accessibilité, et nous continuons d’offrir un soutien aux employés handicapés. Conformément à la Loi canadienne sur l’accessibilité et en collaboration avec nos partenaires des organismes centraux, nous recommandons des normes, lignes directrices et pratiques exemplaires reconnues à l’échelle internationale. Concept visant les déficiences de lecture Ne pas communiquer uniquement au moyen d’un texte. Compléter le texte avec des images informatives, des vidéos et des enregistrements audios. La plupart des renseignements contenus dans cet article proviennent du document de l’Initiative d’accessibilité du Web (IAT) : Capacités et obstacles variés (en anglais seulement). Shadi Abou-Zahra, éd. Copyright © 2017 W3C® (MIT, ERCIM, Keio). Statut : Mise à jour le 15 mai 2017. ",
 href: '../module1/types-of-disabilities-fr.html#reading-disabilities'  ,
 title: "Types de handicaps - Module 1 - Principes fondamentaux de l'accessilité" ,
 heading: " Déficience de lecture"
},{
 categories: 'module10',
 content: "  Saisie avec la souris Lorsque la réception puis la suppression du survol du curseur ou de la cible du clavier déclenchent un contenu supplémentaire pour le rendre visible puis masqué, ce contenu supplémentaire est : Rejetable Survolable Persistant Le contenu pouvant être déclenché par le survol du curseur devrait également pouvoir être déclenché par le positionnement de la cible du clavier. Pour toute fonctionnalité qui se commande par pointage unique, au moins un des énoncés suivants est vrai : Pas d’événement de pression Abandon ou annulation Annulation sur relâchement Obligation Utiliser le comportement par défaut des commandes (p. ex., événement onclick ou mouseup) et éviter d’annuler ce comportement par un déclencheur explicite par événement de pression. ",
 href: '../module10/best-practice-mod-10-fr.html#best-practice-mouse-input'  ,
 title: "Pratique exemplaire - Module 10 - Méthodes de saisie de données" ,
 heading: " Saisie avec la souris"
},{
 categories: 'module10',
 content: "  Saisie avec clavier Cible et ordre de cible Assurer un ordre de tabulation significatif en positionnant le contenu ciblable dans la même séquence que le code sous-jacent. S’assurer que l’ordre de navigation au clavier est logique et intuitif. Habituellement, il faut pour cela s’assurer que la navigation suit le flux visuel de la page, de gauche à droite et de haut en bas. Il passe successivement par la bannière, la navigation principale, la navigation et les commandes des pages, puis le pied de page d’une page type. Éviter d’utiliser des valeurs tabindex supérieures à 0. Indicateur visuel de la cible Toujours éviter les styles qui éliminent ou limitent la visibilité des indicateurs de cible du clavier. Utiliser CSS pour concevoir un indicateur de cible très visible avec un fort contraste. Les liens doivent avoir un état ciblé visible. Fonctionnalité du clavier S’assurer que tout le contenu de la page puisse se commander à partir du clavier. Dans la mesure du possible, utiliser des liens et des commandes de formulaire HTML natifs plutôt que des éléments personnalisés. Utiliser l’événement onclick des ancrages et des boutons. Jumeler les gestionnaires d’événement souris et les gestionnaires d’événement clavier. Piège de clavier S’assurer que l’utilisateur puisse entrer et sortir des éléments interactifs en utilisant uniquement le clavier. Gestion de cible avec contenu injecté de JavaScript Chaque fois qu’une fenêtre contextuelle apparaît sur la page en réponse à une action de l’utilisateur ou l’invocation d’une commande, s’assurer que l’utilisateur retourner au point de départ de l’interaction. ",
 href: '../module10/best-practice-mod-10-fr.html#best-practice-keyboard-input'  ,
 title: "Pratique exemplaire - Module 10 - Méthodes de saisie de données" ,
 heading: " Saisie avec clavier"
},{
 categories: 'module10',
 content: "  Saisie tactile Toutes les fonctionnalités doivent être accessibles au moyen d’un dispositif de pointage (p. ex., souris, doigt sur un écran tactile, stylet électronique, pointeur laser). Toutes les fonctionnalités peuvent être commandées par toucher ou clic simple, par double toucher, par double-clic, par pression longue ou par clic maintenu. Coder des gestionnaires d’événement JavaScript qui se déclenchent à la fois en réaction aux clics de clavier et de souris. Une interface accessible par souris est généralement accessible au toucher. La taille de la cible devrait faire au moins 44px sur 44px (niveau AAA, facultatif). ",
 href: '../module10/best-practice-mod-10-fr.html#best-practice-touch-input'  ,
 title: "Pratique exemplaire - Module 10 - Méthodes de saisie de données" ,
 heading: " Saisie tactile"
},{
 categories: 'module10',
 content: "  Saisie vocale Lorsqu’une commande a un nom accessible défini au moyen d’une étiquette ARIA et d’une étiquette visible, le texte de l’étiquette visible doit faire partie de l’étiquette ARIA ou y correspondre. ",
 href: '../module10/best-practice-mod-10-fr.html#best-practice-voice-input'  ,
 title: "Pratique exemplaire - Module 10 - Méthodes de saisie de données" ,
 heading: " Saisie vocale"
},{
 categories: 'module10',
 content: "  Commande par le mouvement Si des fonctions sont déclenchées par le mouvement (par exemple, par des secousses), il faut faire en sorte qu’elles se commandent également par des éléments d’interfaces utilisateurs classiques. S’assurer que l’utilisateur puisse désactiver la commande par le mouvement. ",
 href: '../module10/best-practice-mod-10-fr.html#best-practice-motion-actuation'  ,
 title: "Pratique exemplaire - Module 10 - Méthodes de saisie de données" ,
 heading: " Commande par le mouvement"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.13 : Contenu au survol ou au focus (en anglais) 2.1.1 : Clavier 2.1.2 : Pas de piège au clavier 2.5.1 : Gestes de commande du curseur (en anglais) 2.5.2 : Annulation du curseur (en anglais) 2.5.4 : Activation par le mouvement (en anglais) 2.5.5 : Taille de la cible (en anglais) (Niveau AAA) ",
 href: '../module10/introduction-fr.html#resources1'  ,
 title: "Introduction - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module10',
 content: "  Aperçu : Saisie avec clavier De nombreux types de technologies d’aide permettent de reproduire les fonctions d’un clavier, notamment les logiciels de reconnaissance vocale, les logiciels de commande au souffle et les claviers virtuels à l’écran, pour ne citer que ces exemples. En adoptant une conception de clavier accessible, vous assurez sa compatibilité avec un large éventail de technologies d’aide et de groupes d’utilisateurs. L’accessibilité du clavier recoupe les sujets suivants : Ciblage clavier Voir le module 3 > Navigation > Cible et ordre de cible > Quelle est la cible? Ordre de cible Voir le module 3 > Navigation > Cible et ordre de cible > Ordre de cible Indicateur visuel de la cible Voir module 3 > Liens > Indicateur visuel de la cible Fonctionnalité du clavier Pièges de clavier ",
 href: '../module10/keyboard-input-fr.html#keyboard-input-overview'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Aperçu : Saisie avec clavier"
},{
 categories: 'module10',
 content: "  Fonctionnalité du clavier S’assurer que tout le contenu de la page peut être utilisé au moyen d’un clavier. La plupart des actions exécutées avec une souris ou un autre dispositif de pointage peuvent aussi être exécutées à partir du clavier (p. ex., cliquer, sélectionner, déplacer, dimensionner). Exemples de fonctionnalités : Utiliser des contrôles physiques tels que des liens, des menus, des boutons et des contrôles de formulaires (cases à cocher, boutons radio, saisie de texte, etc.). Utiliser des fonctions telles que le glisser-déposer, sélectionner du texte, le redimensionnement des zones ou l'affichage de menus contextuels. Exécuter des tâches telles que l'ajout ou le retrait d'un article dans un panier d'achat ou le lancement d'une session de chat avec un représentant commercial. L'exception de toute action qui dépend de la trajectoire du mouvement de l'utilisateur (par exemple, un dessin à main levée tel qu'une signature). Ces actions ne peuvent pas être effectuées à partir du clavier. L’utilisateur du clavier appuie normalement sur la touche de tabulation pour passer d’un élément interactif à l’autre – liens, boutons, champs texte, etc. Quand l’utilisateur accède à un élément avec la touche de tabulation, cet élément est « ciblé » et devient manipulable avec le clavier. D’autres touches, principalement les touches fléchées, déplacent la cible à l’intérieur des éléments complexes, ou groupes, composés de plusieurs sous-éléments actifs. D'autres touches, principalement les touches fléchées, permettent de déplacer le centre d'intérêt à l'intérieur des composants qui comprennent plusieurs éléments pouvant être mis au point. Par exemple, après avoir appuyé sur la touche Tab pour déplacer le focus sur un bouton radio d'un groupe, l'appui sur les touches fléchées déplace le focus parmi les boutons radio du groupe, et l'appui sur la touche Tab déplace le focus hors du groupe radio vers l'élément suivant dans la séquence de tabulation. Le chemin que suit le curseur quand l’utilisateur appuie sur la touche de tabulation est appelé la séquence de tabulation ou la boucle de tabulation. Autres commandes clavier importantes : CTRL-L positionne la cible sur-le-champ d’adresse du navigateur. CTRL-W ferme un onglet CTRL-T ouvre un nouvel onglet La barre d'espacement fait défiler vers le bas un écran à la fois (Shift-Barre d'espacement fait défiler vers le haut). La barre d’espacement sélectionne les cases d’option et les cases à cocher La touche Entrée active un lien ou envoie un formulaire La barre d’espacement ou la touche Entrée active un bouton Utilisation des liens et commandes HTML natifs Dans la mesure du possible, utilisez des liens HTML et des contrôles de formulaires natifs plutôt que des éléments personnalisés. Les agents utilisateur fournissent le fonctionnement du clavier des liens HTML, des contrôles de formulaires, et les mappent à une API d'accessibilité. Les technologies d'assistance utilisent l'API d'accessibilité pour extraire et présenter des informations utiles, telles que le rôle, le nom, l'état et la valeur. Commandes et liens HTML standard : Plusieurs types; voir le module 6 : Formulaires > Validation des types de saisie communs). Utiliser l’événement onclick des ancrages et des boutons Pour s’assurer que les utilisateurs du clavier puissent invoquer un script, utiliser des liens et des boutons HTML natifs avec l’événement onclick. L’événement onclick des deux éléments est indépendant du dispositif de saisie : il est lié à un clic de souris, à la touche Entrée et à la barre d’espacement. HTML Début du code Do stuff function doStuff () { alert('Button clicked'); } Fin du code Un bouton d’envoi situé à l’intérieur d’un formulaire ne nécessite pas de gestionnaire d’événement. Dans les deux cas suivants, la sélection du bouton d’envoi transmet le formulaire parent sans nécessiter le traitement séparé de l’événement onclick. Ici, la valeur onsubmit du formulaire déclenche la validation. HTML Début du code […] Or: Post your reply Fin du code Jumeler les gestionnaires d’événement souris et les gestionnaires d’événement clavier L’utilisation à la fois des événements clavier et des événements souris permet de rendre le contenu exploitable par un large éventail de dispositifs de saisie. Le tableau suivant suggère les gestionnaires d’événement souris à jumeler aux gestionnaires d’événement clavier : Correspondance des gestionnaires d’événement Utiliser … … avec mousedown keydown mouseup keyup click keypress mouseover focus mouseout blur Lorsqu’ils utilisent un bouton ou un lien HTML natif, les agents utilisateurs traitent l’événement click, qu’il a été activé avec la souris ou le clavier. Il n’est pas nécessaire de reproduire cet événement quand on ajoute des gestionnaires à des éléments HTML ciblables. Toutefois, à défaut de bouton ou de lien natif, il faut ajouter un événement keypress. Comme le gestionnaire d’événement keypress réagit à n’importe quelle touche du clavier, il devrait d’abord vérifier si l’utilisateur a appuyé sur la touche Entrée avant de traiter l’événement. Autrement, il sera déclenché par n’importe quelle touche, même la touche de tabulation qui aurait été utilisée pour sortir de la commande. En cas d’utilisation de l’attribut ARIA role='button' au lieu des éléments natifs ou , il faudra à la fois rendre l’élément ciblable et définir les gestionnaires d’événement pour le clic et les touches Entrée et barre d’espacement. Bon example : Jumelage des événements souris et clavier Dans cet exemple de lien d’image, l’image change lorsque l’utilisateur positionne le pointeur sur elle. Pour offrir aux utilisateurs du clavier une expérience similaire, l’image change également quand l’utilisateur l’atteint avec la touche de tabulation. L'exemple commence L'exemple finit HTML Début du code <a href='menu.php' onmouseover='swapImageOn('menu')' onfocus='swapImageOn('menu')' onmouseout='swapImageOff('menu')' onblur='swapImageOff('menu')'> Javascript Code begins function swapImageOn(id){ document.getElementById(id).src='images/menu_on.png' } function swapImageOff(id){ document.getElementById(id).src='images/menu_off.png' } Fin du code Mauvais exemple : Lien dépendant de la souris Dans cet exemple, un lien d’image personnalisé réagit uniquement au clic de la souris et n’est pas activable par le clavier. Il n’y a pas de gestionnaire d’événement équivalent pour la touche Entrée. L’événement onclick ne répond qu’aux saisies clavier appliquées à un bouton ou un lien HTML natif, et il s’agit d’un élément . Le lien de l’image n’a pas d’attribut tabindex='0', ce qui l’empêche d’être ciblé avec le clavier. Enfin, le lien de l’image ne comporte pas l’attribut role='link', qui indique sa nature de lien à la technologie d’aide. L'exemple commence L'exemple finit HTML Début du code > Fin du code CSS Début du code .img-link:hover { cursor: pointer; } Fin du code Bon example : Gestionnaires d’événement souris et clavier sur un bouton personnalisé Dans cet exemple, un bouton personnalisé construit à partir d’un élément possède la sémantique et la fonctionnalité d’accessibilité nécessaires : Un attribut tabindex='0' pour pouvoir être ciblé avec le clavier. Un attribut role='button' pour indiquer sa fonction à la technologie d’aide. Un indicateur visuel de ciblage clavier et de survol par la souris au moyen du CSS. Un gestionnaire d’événement onclick pour l’activation par la souris. Un gestionnaire d’événement OnKeyDown pour l’activation par le clavier. La fonction s’arrête si la touche actionnée n’est pas la barre d’espacement ou la touche Entrée. Le JavaScript ajoute des noms à une liste sous le formulaire. L'exemple commence Ajouter un nom Ajouter nom L'exemple finit HTML Début du code Ajouter un nom Ajouter nom Fin du code Voir le JavaScript Début du code function handleCommand(event) { // Gère à la fois les clics de souris et le clavier // Activer avec Entrée ou Espace // Les pressions sur les touches autres que Entrée et Espace mettent fin au script if (event instanceof KeyboardEvent && event.key !== 'Enter' && event.key !== ' ') { return; } // Obtenez la nouvelle valeur du nom de l'élément d'entrée let newNameInput = document.getElementById('newName'); let name = newNameInput.value; // Effacer le champ de texte newNameInput.value = ''; // Donner le focus au champ de texte pour permettre la saisie d'un nom supplémentaire newNameInput.focus(); // N'ajoutez pas d'entrées vides à la liste if(name.length > 0) { listItem = document.createElement('li'); listItem.appendChild(document.createTextNode(name)); // Add the new name to the list let list = document.getElementById('nameList'); list.appendChild(listItem); } } Fin du code Voir le CSS Début du code [role='button'] { padding: 0.25em 0.5em; background-color: #CCCCCC; color: black; margin-left: 5px; outline: 2px solid white; } #newName:focus, #newName:hover { background-color: rgb(186, 228, 253); } [role='button']:focus, [role='button']:hover { outline: 2px dotted rgb(81, 81, 250); } Fin du code ",
 href: '../module10/keyboard-input-fr.html#keyboard-functionality'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Fonctionnalité du clavier"
},{
 categories: 'module10',
 content: "  Piège de clavier Un piège à clavier se produit lorsqu'un utilisateur peut naviguer dans un composant ou un élément d'une page Web mais ne peut pas en sortir. Un exemple simple est une fenêtre pop-up (fenêtre modale ou lightbox) qui ne se ferme pas lorsque l'utilisateur appuie sur la touche Esc et dont le bouton de fermeture ne répond pas au clavier. Assurez-vous que l'utilisateur peut entrer et sortir des éléments interactifs en utilisant uniquement le clavier. Mauvais exemple : JavaScript focus() piège l’utilisateur du clavier Cet exemple illustre les dangers du piège à clavier que représente l'utilisation de la méthode JavaScript focus(). Le champ de saisie du formulaire utilise ici l'événement onblur, qui est déclenché lorsque le focus quitte l'élément. Lorsque l'utilisateur du clavier appuie sur la touche Tab pour déplacer le focus du champ de saisie, l'événement onblur se déclenche et remet le focus sur le champ de saisie, piégeant ainsi l'utilisateur. HTML Début du code Last name Fin du code Mauvais exemple : JavaScript keydown() et event.preventDefault() piègent l’utilisateur du clavier Cet exemple illustre les dangers du piège à clavier que représente un événement keypress JavaScript. La fonction JavaScript ne fait aucun effort pour détecter quelle touche a été enfoncée (elle devrait identifier la touche Entrée), elle se déclenche donc lorsque n'importe quelle touche est enfoncée. En outre, l'action par défaut associée à toute pression sur une touche est empêchée par event.preventDefault(). Par conséquent, lorsqu'un utilisateur tente de déplacer le focus du lien en appuyant sur la touche Tab, l'événement keydown se déclenche, l'action par défaut de la touche Tab (déplacement du focus vers l'élément suivant sur lequel le focus est possible) est empêchée, le focus reste sur le lien et une nouvelle fenêtre s'ouvre. L'utilisateur du clavier est pris au piège. Même le fait d'appuyer sur les touches Ctrl + Alt + Suppr dans Windows pour faire apparaître le gestionnaire de tâches échouera, car d'autres fenêtres seront simplement lancées en réponse à l'événement de frappe. L'ordinateur de l'utilisateur est détourné et, à moins qu'un collègue ou un ami ne puisse déplacer le focus de l'élément avec une souris, l'utilisateur est obligé de redémarrer l'ordinateur. HTML Début du code Une page Fin du code JavaScript Début du code $(document).ready(function(){ $('span.trap').keydown(function(event){ event.preventDefault(); var href = $(this).attr('data-href'); var text = $(this).text(); window.open(href, text); }); }); Fin du code ",
 href: '../module10/keyboard-input-fr.html#keyboard-trap'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Piège de clavier"
},{
 categories: 'module10',
 content: "  Gestion de cible avec contenu injecté de JavaScript Le contenu ajouté à une page avec JavaScript peut se trouver à l’un des deux endroits suivants : Le contenu ajouté suit le déclencheur dans le DOM. Dans ce cas, il n'est pas nécessaire de gérer le focus. Lorsqu'il est activé, le contrôle déclencheur conserve le focus, et le contenu ajouté est le suivant dans l'ordre de lecture du lecteur d'écran et dans l'ordre des tabulations. Le contenu ajouté peut être positionné de manière absolue par le biais de CSS pour se trouver ailleurs sur la page. Le contenu ajouté ne suit pas le déclencheur dans le DOM. Dans ce cas, la cible doit être déplacée vers le contenu ajouté en utilisant la méthode JavaScript focus(). La cible doit avoir l’attribut tabindex='-1'. De plus, la cible doit avoir un contenu textuel ou un texte déterminé par programmation au moyen d’une étiquette, sinon un utilisateur de lecteur d’écran n’entendra rien à son arrivée. Si le contenu ajouté peut être réduit ou désactivé, la cible revient sur la commande de déclenchement (ou à un autre emplacement logique, selon le contexte). Éviter de perdre la cible ou de la réinitialiser au haut de la page. Il y a des exceptions si vous mettez en œuvres certains modèles de composants graphiques décrits dans les Pratiques de rédaction ARIA (en anglais). Les auteurs de contenu doivent gérer le focus dans les rôles de conteneur suivants. combo box grid listbox menu menubar radio group tabs tree view treegrid La gestion de la cible dans ces composants graphiques « composites » est une question distincte abordée dans le module 12. Bon example : Gestion de la cible dans une application Web monopage Dans cet exemple, une application Web monopage utilise JavaScript pour charger un article complet à l’intérieur de l’élément main, sans chargement de la page. Les liens dans le menu de navigation déclenchent le chargement du contenu. Cet exemple ne comporte que quelques éléments de menu, mais les sites ont souvent des menus bien plus longs. Le déplacement de la cible est vite à un utilisateur de clavier la tâche fastidieuse de parcourir un menu avec la touche de tabulation pour accéder au contenu principal d’une application d’une seule page. L’en-tête de chaque page comporte l’attribut tabindex='-1' qui permet le ciblage par les scripts. JavaScript identifie l’en-tête au moyen d’un sélecteur de requête et pose la cible sur lui. Le script met également à jour l’élément de la page pour qu’il corresponde au texte de l’en-tête. La première utilisation de JavaScript devrait être déclenchée par le menu et non par le chargement de la page. L’interaction initiale d’un utilisateur de lecteur d’écran avec la page devrait commencer par le haut, comme d’habitude. HTML Début du code Accueil Politiques Pratiques // injecté: Politiques // reste du contenu injecté ... Fin du code JavaScript Début du code // Cela est appelé chaque fois que du nouveau contenu est chargé : function onNewPage() { var heading = document.querySelector('h1'); heading.focus(); // Mettre à jour le titre de la page document.title = heading.textContent; } Fin du code Bon example : Cible déplacée du déclencheur à une boîte de dialogue Dans cet exemple, le fait d'appuyer sur le bouton de transcription de l'Ableplayer : lance un widget de dialogue ARIA contenant la transcription, et déplace le focus sur le premier bouton de la boîte de dialogue, celui des préférences de l'utilisateur. : JavaScript Début du code this.$transcriptArea.find('button').first().focus(); Fin du code L'exemple commence Exemple externe : Able Player Video Demo #3 L'exemple finit Bon exemple : Cible gérée sur une boîte de dialogue au moyen d’une interaction au clavier Dans cet exemple, quand l’utilisateur clique sur le bouton d’envoi, une fenêtre contextuelle s’ouvre et la cible est posée sur le premier élément actif de la fenêtre contextuelle. Quand l’utilisateur clique sur le bouton de fermeture de la fenêtre contextuelle, la cible retourne au bouton déclencheur. L'exemple commence Soumettre Votre formulaire a été soumis Fermer L'exemple finit Voir le HTML Début du code Modal Popup Example Submit Votre formulaire a été soumis. Fermer Fin du code Voir le CSS Début du code /* Le modal (arrière-plan) */ .modal { display: none; /* Masqué par défaut */ position: fixed; /* Rester en place */ z-index: 1; /* S'asseoir sur le dessus */ padding-top: 100px; /* Emplacement de la boîte */ left: 0; top: 0; width: 100%; /* Pleine largeur */ height: 100%; /* Pleine hauteur */ } /* Contenu modal */ .modal-content { background-color: #fefefe; margin: auto; padding: 20px; border: 1px solid #888; width: 25%; height:25%; } .submit { background-color:#e60914; border:0; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.2); color:#fff; font-size: 15px; padding: 10px 25px; } .submit:hover, .submit:focus { color: #000; text-decoration: none; cursor: pointer; } Fin du code Voir le JavaScript Début du code // Obtenir le modal var modal = document.getElementById('myModal'); // Obtenez le bouton qui ouvre le modal var btnSubmit = document.getElementById('myBtn'); // Obtenez le bouton qui ferme le modal var btnClose = document.getElementsByClassName('btn-close')[0]; // Lorsque l'utilisateur clique sur le bouton, ouvrez le modal. btnSubmit.onclick = function() { modal.style.display = 'block'; } } //prevent tabbing to the page btnClose.addEventListener('keydown', event => { if (event.shiftKey || event.keyCode === 9) { btnClose.focus(); event.preventDefault(); false; } }); // Lorsque l'utilisateur clique sur le bouton de fermeture, fermez le modal btnClose.onclick = function() { modal.style.display = 'none'; } // Lorsque l'utilisateur clique n'importe où en dehors de la modale, le fermer window.onclick = function(event) { if (event.target == modal) { modal.style.display = 'none'; } document.addEventListener('keyup', function (event) { if ( event.keyCode == 27 ) { //keycode 27 is escape modal.style.display = 'none'; btnSubmit.focus(); } }) } Fin du code ",
 href: '../module10/keyboard-input-fr.html#focus-management-with-javascript-injected-content'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Gestion de cible avec contenu injecté de JavaScript"
},{
 categories: 'module10',
 content: "  Gestion de cible avec contenu injecté de JavaScript Le contenu ajouté à une page avec JavaScript peut se trouver à l’un des deux endroits suivants : Le contenu ajouté suit le déclencheur dans le DOM. Dans ce cas, il n'est pas nécessaire de gérer le focus. Lorsqu'il est activé, le contrôle déclencheur conserve le focus, et le contenu ajouté est le suivant dans l'ordre de lecture du lecteur d'écran et dans l'ordre des tabulations. Le contenu ajouté peut être positionné de manière absolue par le biais de CSS pour se trouver ailleurs sur la page. Le contenu ajouté ne suit pas le déclencheur dans le DOM. Dans ce cas, la cible doit être déplacée vers le contenu ajouté en utilisant la méthode JavaScript focus(). La cible doit avoir l’attribut tabindex='-1'. De plus, la cible doit avoir un contenu textuel ou un texte déterminé par programmation au moyen d’une étiquette, sinon un utilisateur de lecteur d’écran n’entendra rien à son arrivée. Si le contenu ajouté peut être réduit ou désactivé, la cible revient sur la commande de déclenchement (ou à un autre emplacement logique, selon le contexte). Éviter de perdre la cible ou de la réinitialiser au haut de la page. Il y a des exceptions si vous mettez en œuvres certains modèles de composants graphiques décrits dans les Pratiques de rédaction ARIA (en anglais). Les auteurs de contenu doivent gérer le focus dans les rôles de conteneur suivants. combo box grid listbox menu menubar radio group tabs tree view treegrid La gestion de la cible dans ces composants graphiques « composites » est une question distincte abordée dans le module 12. Bon example : Gestion de la cible dans une application Web monopage Dans cet exemple, une application Web monopage utilise JavaScript pour charger un article complet à l’intérieur de l’élément main, sans chargement de la page. Les liens dans le menu de navigation déclenchent le chargement du contenu. Cet exemple ne comporte que quelques éléments de menu, mais les sites ont souvent des menus bien plus longs. Le déplacement de la cible est vite à un utilisateur de clavier la tâche fastidieuse de parcourir un menu avec la touche de tabulation pour accéder au contenu principal d’une application d’une seule page. L’en-tête de chaque page comporte l’attribut tabindex='-1' qui permet le ciblage par les scripts. JavaScript identifie l’en-tête au moyen d’un sélecteur de requête et pose la cible sur lui. Le script met également à jour l’élément de la page pour qu’il corresponde au texte de l’en-tête. La première utilisation de JavaScript devrait être déclenchée par le menu et non par le chargement de la page. L’interaction initiale d’un utilisateur de lecteur d’écran avec la page devrait commencer par le haut, comme d’habitude. HTML Début du code Accueil Politiques Pratiques // injecté: Politiques // reste du contenu injecté ... Fin du code JavaScript Début du code // Cela est appelé chaque fois que du nouveau contenu est chargé : function onNewPage() { var heading = document.querySelector('h1'); heading.focus(); // Mettre à jour le titre de la page document.title = heading.textContent; } Fin du code Bon example : Cible déplacée du déclencheur à une boîte de dialogue Dans cet exemple, le fait d'appuyer sur le bouton de transcription de l'Ableplayer : lance un widget de dialogue ARIA contenant la transcription, et déplace le focus sur le premier bouton de la boîte de dialogue, celui des préférences de l'utilisateur. : JavaScript Début du code this.$transcriptArea.find('button').first().focus(); Fin du code L'exemple commence Exemple externe : Able Player Video Demo #3 L'exemple finit Bon exemple : Cible gérée sur une boîte de dialogue au moyen d’une interaction au clavier Dans cet exemple, quand l’utilisateur clique sur le bouton d’envoi, une fenêtre contextuelle s’ouvre et la cible est posée sur le premier élément actif de la fenêtre contextuelle. Quand l’utilisateur clique sur le bouton de fermeture de la fenêtre contextuelle, la cible retourne au bouton déclencheur. L'exemple commence Soumettre Votre formulaire a été soumis Fermer L'exemple finit Voir le HTML Début du code Modal Popup Example Submit Votre formulaire a été soumis. Fermer Fin du code Voir le CSS Début du code /* Le modal (arrière-plan) */ .modal { display: none; /* Masqué par défaut */ position: fixed; /* Rester en place */ z-index: 1; /* S'asseoir sur le dessus */ padding-top: 100px; /* Emplacement de la boîte */ left: 0; top: 0; width: 100%; /* Pleine largeur */ height: 100%; /* Pleine hauteur */ } /* Contenu modal */ .modal-content { background-color: #fefefe; margin: auto; padding: 20px; border: 1px solid #888; width: 25%; height:25%; } .submit { background-color:#e60914; border:0; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.2); color:#fff; font-size: 15px; padding: 10px 25px; } .submit:hover, .submit:focus { color: #000; text-decoration: none; cursor: pointer; } Fin du code Voir le JavaScript Début du code // Obtenir le modal var modal = document.getElementById('myModal'); // Obtenez le bouton qui ouvre le modal var btnSubmit = document.getElementById('myBtn'); // Obtenez le bouton qui ferme le modal var btnClose = document.getElementsByClassName('btn-close')[0]; // Lorsque l'utilisateur clique sur le bouton, ouvrez le modal. btnSubmit.onclick = function() { modal.style.display = 'block'; } } //prevent tabbing to the page btnClose.addEventListener('keydown', event => { if (event.shiftKey || event.keyCode === 9) { btnClose.focus(); event.preventDefault(); false; } }); // Lorsque l'utilisateur clique sur le bouton de fermeture, fermez le modal btnClose.onclick = function() { modal.style.display = 'none'; } // Lorsque l'utilisateur clique n'importe où en dehors de la modale, le fermer window.onclick = function(event) { if (event.target == modal) { modal.style.display = 'none'; } document.addEventListener('keyup', function (event) { if ( event.keyCode == 27 ) { //keycode 27 is escape modal.style.display = 'none'; btnSubmit.focus(); } }) } Fin du code ",
 href: '../module10/keyboard-input-fr.html#modal-title'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Votre formulaire a été soumis"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.1.1 : Clavier 2.1.2 : Pas de piège au clavier Techniques G202 : Garantir le contrôle par le clavier pour toutes les fonctionnalités (en anglais) G90 : Fournir des événements déclenchés au clavier (en anglais) G21 : S'assurer que l'utilisateur n'est pas piégé dans le contenu (en anglais) H91 : Utiliser des éléments de formulaire et des liens HTML (en anglais) SCR20 : Utiliser à la fois des fonctions au clavier et spécifiques à d'autres périphériques (en anglais) SCR29 : Ajouter des actions au clavier accessibles à des éléments HTML statiques (en anglais) SCR35 : Rendre les actions au clavier accessibles en utilisant l'événement onclick sur les liens et les boutons (en anglais) Échecs F54 : Échec du critère de succès 2.1.1 consistant à utiliser seulement des événements au pointeur (y compris par geste) pour une fonction (en anglais) F42 : Échec du critère de succès 1.3.1 et 2.1.1 consistant à utiliser des événements de scripts pour émuler des liens d'une manière qui n'est pas déterminable par un programme informatique (en anglais) ",
 href: '../module10/keyboard-input-fr.html#keyboard-input-wcag'  ,
 title: "Saisie avec clavier - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.5.4 : Activation par le mouvement (en anglais) Techniques G213 : Fournir des commandes conventionnelles et un réglage d’application pour une entrée activée par le mouvement (en anglais) Échecs F106 : Échec en raison de l’incapacité de désactiver l’activation du mouvement (en anglais) ",
 href: '../module10/motion-actuation-fr.html#motion-actuation-wcag'  ,
 title: "Commande par le mouvement - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module10',
 content: "  Aperçu : Saisie avec la souris Il faut s’assurer que toutes les fonctions sont accessibles au moyen d’un dispositif de pointage (p. ex., souris, doigt sur un écran tactile, stylet électronique, pointeur laser). Cette section couvre deux critères de réussite de la saisie avec la souris : Contenu sur le survol ou cible Annulation du pointeur ",
 href: '../module10/mouse-input-fr.html#saisie-avec-la-souris-aperçu'  ,
 title: "Saisie avec la souris - Module 10 - Méthodes de saisie de données" ,
 heading: " Aperçu : Saisie avec la souris"
},{
 categories: 'module10',
 content: "  Contenu sur survol ou cible Le contenu supplémentaire qui apparaît quand l’utilisateur passe le pointeur ou la cible du clavier sur l’élément déclencheur (p. ex. infobulles, fenêtres contextuelles) cause souvent des problèmes d’accessibilité. L’utilisateur n’avait peut-être pas l’intention de déclencher l’interaction ou peut ne pas s’apercevoir que du nouveau contenu est apparu. Cette action peut également nuire à l’utilisateur dans la tâche qu’il cherche à effectuer. Les aides de lecture pour malvoyants utilisant un fort grossissement ne laissent voir qu’une petite partie de l’écran à la fois. Le contenu d’une infobulle peut être rogné par la zone de lecture, ce qui oblige l’utilisateur à déplacer son pointeur pour lire le contenu supplémentaire. Dans le cas où il faut placer le pointeur ou la cible du clavier sur une zone sensible pour ouvrir un contenu supplémentaire, puis l’enlever pour le faire disparaître, les règles suivantes sont vraies : Possibilité de rejet Un mécanisme (habituellement la touche Esc/Échap) permet de rejeter le contenu supplémentaire sans déplacer le curseur ou la cible du clavier, sauf si le contenu supplémentaire communique une erreur de saisie ou ne cache pas ou ne remplace pas un autre contenu. Possibilité de survol Si le survol du pointeur peut déclencher le contenu supplémentaire, il est ensuite possible de déplacer le pointeur sur le contenu supplémentaire sans le faire disparaître. Persistance Le contenu supplémentaire demeure visible jusqu’à ce que le pointeur ou la cible sorte de la zone sensible, que l’utilisateur le rejette ou qu’il ne soit plus pertinent. Le contenu pouvant être déclenché par le survol du pointeur devrait également pouvoir être déclenché par le positionnement de la cible du clavier. Cette exigence s’applique au contenu qui apparaît en plus de l’élément déclencheur lui-même. Elle ne s’applique pas à un élément non visible, tel qu’un lien de retour à la page d’accueil qui est rendu visible par la cible du clavier (sans autre contenu que le déclencheur devenu visible). Bon exemple : Contenu de lien survolé ou ciblé Quand le pointeur survole – ou le clavier cible – un lien, un aperçu du contenu lié s’affiche juste au-dessus ou en dessous. Le dispositif de pointage peut quitter la zone sensible du lien et parcourir le contenu supplémentaire sans que la fenêtre contextuelle ne se ferme. Dans cet exemple, ce résultat est obtenu en emboîtant l’infobulle dans l’élément déclencheur. La touche Esc/Échap ferme le contenu supplémentaire. L'exemple commence C'est un lien déclencheur Et ce texte donne un contexte supplémentaire à propos du lien déclencheur. L'exemple finit C'est un lien déclencheur et ce texte donne un contexte supplémentaire à propos du lien déclencheur. HTML Début du code C'est un lien déclencheur. Et ce texte donne un contexte supplémentaire à propos du lien déclencheur. Fin du code Voir le CSS Début du code [role='tooltip'] { display: none; padding: 0.5em; background:white; color: black; border:solid black 2px; width:10em; } .a-and-tooltip { position: relative; } [role='tooltip'] { position: absolute; left:0; top:1em; } Fin du code Voir le JavaScript Début du code // déclencheur et popup dans le même lien var parent = document.getElementById('parent'); parent.onmouseover = function() { document.getElementById('popup').style.display = 'block'; } parent.onmouseout = function() { document.getElementById('popup').style.display = 'none'; } parent.onfocus = function() { document.getElementById('popup').style.display = 'block'; } parent.onblur = function() { document.getElementById('popup').style.display = 'none'; } // cacher lorsque l'on appuie sur ESC document.addEventListener('keydown', (e) => { if ((e.keyCode || e.which) === 27) document.getElementById('popup').style.display = 'none'; }); Fin du code Cet exemple provient du guide technique SCR39 du DACW 2.1 : Rendre possible le survol, le rejet et la persistance de l’affichage contextuel ouvert par survol ou ciblage clavier (en anglais seulement). Initiative pour l’accessibilité du Web W3C Extrait le 17 décembre 2021. ",
 href: '../module10/mouse-input-fr.html#contenu-sur-survol-ou-cible'  ,
 title: "Saisie avec la souris - Module 10 - Méthodes de saisie de données" ,
 heading: " Contenu sur survol ou cible"
},{
 categories: 'module10',
 content: "  Annulation du pointage Cette exigence vise à aider l’utilisateur à éviter les erreurs de pointage. Il peut arriver que l’utilisateur déclenche accidentellement des événements par commande tactile ou avec la souris et obtienne des résultats indésirables. Il est important de permettre à l’utilisateur d’annuler un pointage indésirable. Un pointeur simple est une entrée de pointeur qui fonctionne avec un seul point de contact avec l'écran. Il peut s'agir d'une simple tape ou d'un clic, d'une double tape ou d'un clic, d'une pression longue ou d'un geste basé sur la trajectoire. Pour toute fonctionnalité qui se commande par pointage unique, au moins un des énoncés suivants est vrai : Pas d’événement de pression L’événement de pression (sur le bouton de sélection du dispositif de pointage) n’est pas utilisé pour exécuter une partie de la fonction. Abandon ou annulation L’exécution de la fonction se fait à l’événement de relâchement de la sélection, et un mécanisme est prévu pour abandonner la fonction avant exécution ou pour l’annuler après exécution. Annulation sur relâchement L’événement de relâchement du bouton de sélection annule tout résultat de l’événement de pression. Obligation L’exécution de la fonction est obligatoire en réponse à l’événement de pression. The easiest way to meet this requirement is to use the default behaviour of controls and not override that behaviour with an explicit down-event trigger. The up-event (e.g. onclick or mouseup event) is the default behaviour for most controls in any programming or markup language. Le moyen le plus simple de répondre à cette exigence est d'utiliser le comportement par défaut des contrôles et de ne pas remplacer ce comportement par un déclencheur explicite d'événement descendant. L'événement de relâchement (par exemple, l'événement onclick ou mouseup) est le comportement par défaut de la plupart des contrôles dans tout langage de programmation ou de balisage. Examples Pas d’événement de pression Utiliser un événement onclick natif en JavaScript. Utiliser un bouton ou lien natif en HTML, iOS ou Android. Abandon ou annulation Rendre possible l’annulation des actions glisser-déposer. Par exemple, lorsque l’utilisateur utilise l’action glisser-déposer pour déplacer un objet vers une cible de dépôt, il peut annuler l’action après avoir saisi l’objet en le relâchant à l’extérieur de la cible de dépôt. Une autre possibilité est qu’on peut ajouter une commande d’annulation ou un dialogue demandant la confirmation de l’action après que le dépôt de l’objet sur la cible. Annulation sur relâchement Voici différents contextes dans lequel on utilise les actions de type 'appuyer et maintenir': Lorsqu'une fenêtre contextuelle apparaît (ou qu'une vidéo est diffusée); Lorsque l'utilisateur appuie sur un objet (événement descendant), mais que la fenêtre contextuelle (ou la vidéo) disparaît lorsque l'utilisateur relâche le pointeur (événement ascendant). Essential Clavier virtuel – le comportement attendu consiste à faire apparaître des lettres et des chiffres quand l’utilisateur appuie sur la touche (activité de pression). Clavier virtuel à l’écran. ",
 href: '../module10/mouse-input-fr.html#pointer-cancellation'  ,
 title: "Saisie avec la souris - Module 10 - Méthodes de saisie de données" ,
 heading: " Annulation du pointage"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.13 : Contenu au survol ou au focus (en anglais) 2.5.2 : Annulation de l’action du pointeur (en anglais) Techniques SCR39 : Rendre possible le survol, le rejet et la persistance de l’affichage contextuel ouvert par survol ou ciblage clavier (en anglais) G210 : S’assurer que les actions glisser-déposer peuvent être annulées (en anglais) G212 : Utiliser des contrôles natifs pour s’assurer que la fonctionnalité est activée lors de l’événement en cours (en anglais) ",
 href: '../module10/mouse-input-fr.html#mouse-input-wcag'  ,
 title: "Saisie avec la souris - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module10',
 content: "  Toutes les fonctionnalités sont accessibles au moyen d’un dispositif de pointage Toutes les fonctionnalités doivent être accessibles au moyen d’un dispositif de pointage (p. ex., souris, doigt sur un écran tactile, stylet électronique, pointeur laser). Codez les gestionnaires d'événements JavaScript qui se déclenchent à la fois sur le clavier et sur le clic de la souris. En général, si les commandes sont accessibles par événement clic, elles sont également accessibles par toucher. Ce ne sont pas tous les appareils tactiles ne prennent pas en charge les opérations de glisser-déposer et les gestes définit par un script. Les scripts ne fonctionneront pas du tout si l'utilisateur utilise un lecteur d'écran sur un périphérique tactile. Le lecteur d'écran lui-même utilise les gestes pour fonctionner et consomme tous les gestes avant qu'ils n'atteignent le contenu écrit. Considérez que le glisser-déposer et les gestes scriptés comme des améliorations facultatives qui complètent la principale fonctionnalité de clic. Certains utilisateurs peuvent ne pas être capables d’effectuer des gestes-trajectoires ou multipoints avec un dispositif de pointage. Par exemple, il ne peuvent pas faire des gestes-trajectoires, de balayage ou le glissement d’un curseur. Si on prend par exemple, les gestes multipoints, on compte le zoom par pincement à deux doigts, une touche fractionnée où un doigt repose sur un point précis l’écran et une autre tape un autre point, ou un toucher ou glissement à deux ou trois doigts. Il faut s’assurer que le contenu est utilisable sans gestes multipoints ou gestes-trajectoires. Les gestes sont utilisables dans la mesure où la fonctionnalité se commande également par dispositif de pointage. Ceci peut être un toucher, un clic, un double-clic, un double toucher, une pression longue ou un clic maintenu. Exemples Toutes les fonctionnalités peuvent être commandées par toucher ou clic simple, par double toucher, par double-clic, par pression longue ou par clic maintenu. Un curseur permet de régler une valeur sur une plage par un geste-trajectoire simple, c’est-à-dire la sélection et le glissement d’un curseur à la position désirée avant de relâcher le doigt ou le bouton de la souris. Aux deux extrémités du curseur se trouvent des boutons redondants pour diminuer ou augmenter la valeur du curseur. Une application Web prend en charge la fonction glisser-déplacer pour réordonner des éléments sur une liste. À la fin de chaque élément de liste, paire redondante de boutons à icône permettent de déplacer l’élément vers le haut ou vers le bas de la liste pour réordonner ses éléments. Un site Web comprend une vue en plan qui prend en charge le geste de pincement multipoint (deux doigts) pour faire un zoom grossissant et le geste de glissement pour déplacer la zone visible. Les commandes de l’interface utilisateur offrent une fonction de zoom redondante commandée avec les boutons [+] et [– ] et un déplacement dans les quatre directions au moyen des touches fléchées. ",
 href: '../module10/touch-input-fr.html#toutes-les-fonctionnalités'  ,
 title: "Saisie avec un dispositif de pointage - Module 10 - Méthodes de saisie de données" ,
 heading: " Toutes les fonctionnalités sont accessibles au moyen d’un dispositif de pointage"
},{
 categories: 'module10',
 content: "  Taille de la cible (niveau AAA, facultatif) La cible du pointeur (souris, stylet, toucher, etc.) doit être suffisamment grande pour permettre une activation facile, même si l’utilisateur utilise un écran tactile portatif de petite taille ou s’il a une dextérité réduite, des tremblements, une faible vision ou de gros doigts. La taille de la cible devrait faire au moins 44px sur 44px. Il existe quelques exclusions : Élément équivalent La cible est également disponible à partir d’un lien ou d’une commande sur la même page, qui mesure au moins 44 pixels CSS. Intégration La cible se trouve dans une phrase ou un bloc de texte. Contrôle par agent utilisateur La taille de la cible est déterminée par l’agent utilisateur et n’est pas modifiée par l’auteur. Caractère essentiel Une présentation particulière de la cible est essentielle à l’information transmise. La taille de la cible est un paramètre de niveau AAA du WCAG 2.1, donc d’application facultative pour le gouvernement du Canada. Il est inclus ici parce qu’il est facile à mettre en œuvre, selon la conception. ",
 href: '../module10/touch-input-fr.html#taille-de-la-cible'  ,
 title: "Saisie avec un dispositif de pointage - Module 10 - Méthodes de saisie de données" ,
 heading: " Taille de la cible (niveau AAA, facultatif)"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.5.1 : Gestes pour le contrôle du pointeur (en anglais) 2.5.5 : Taille de la cible (en anglais) (Niveau AAA) Techniques G215 : Fournir des contrôles pour obtenir le même résultat que les gestes basés sur la trajectoire ou les gestes multipoints (en anglais) G216 : Fournir une activation à point unique pour un curseur de commande (en anglais) Échecs F105 : Échec du critère de succès 2.5.1 en raison de l’activation d’une fonctionnalité par le biais d’une gestuelle basée sur le chemin sans solution de rechange avec curseur simple (en anglais) ",
 href: '../module10/touch-input-fr.html#touch-input-wcag'  ,
 title: "Saisie avec un dispositif de pointage - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module10',
 content: "  Aperçu: Saisie vocale La saisie vocale, aussi appelée la reconnaissance vocale , traduit le langage parlé en texte et en commandes informatiques. Elle est d’une grande utilité pour les personnes qui ont du mal à utiliser leurs mains pour actionner une souris ou un clavier, notamment les personnes souffrant de légers microtraumatismes répétés, les personnes ayant une dextérité réduite ou des limitations musculaires telles que tremblements, mauvaise coordination ou paralysie, les personnes souffrant d’arthrite et les personnes à qui il manque des membres. La saisie vocale permet aux utilisateurs de dicter du texte dans n'importe quelle application, comme Microsoft Word, les courriers électroniques, les formulaires Web, etc. Plutôt que de taper, les utilisateurs parlent dans un microphone et les mots apparaissent à l'endroit où se trouve le clavier. Lorsqu'ils naviguent sur des pages Web en utilisant la saisie vocale, les utilisateurs peuvent activer des liens et des boutons, remplir des formulaires, copier et coller du texte, faire défiler l'écran et exécuter d'autres fonctions. Le contenu doit être correctementconçu et codé pour être contrôlé par la parole. En général, les pages qui permettent l’interaction au clavier et l’utilisation d’un lecteur d’écran sont également accessibles par saisie vocale. Voici les difficultés que les utilisateurs peuvent rencontrer lorsqu’ils utilisent un logiciel de reconnaissance vocale sur le Web : Absence de contrôle par le clavier pour toutes les fonctionnalités (par exemple, un carrousel qui se déplace sans bouton de pause, un bouton personnalisé qui n'a pas d'événement clavier). Indicateurs de ciblage invisibles sur des éléments interactifs Ordre visuel et ordre de tabulation non concordants Image liée avec texte visible et texte de substitution non concordants Texte de lien identique à plusieurs endroits (p. ex., « Lire la suite... »), mais menant à des cibles différentes Lien visible ou texte du bouton manquant sur son étiquette ARIA (voir Étiquette dans le nom, ci-dessous) Formulaires de commande sans étiquettes associées par programmation Menus uniquement affichables par survol Cibles à cliquer de petite taille Commandes cliquables qui ne donnent pas l’impression de l’être ",
 href: '../module10/voice-input-fr.html#overview'  ,
 title: "Saisie vocale - Module 10 - Méthodes de saisie de données" ,
 heading: " Aperçu: Saisie vocale"
},{
 categories: 'module10',
 content: "  Étiquette dans le nom Comme expliqué dans la description de Dragon Naturally Speaking ci-dessous, les utilisateurs activent les liens et les boutons en les nommant. Lorsqu'un contrôle possède un nom accessible et invisble défini par une étiquette ARIA ainsi qu'une étiquette visible, le texte de l'étiquette visible doit faire partie de l'étiquette ARIA ou y correspondre. L'étiquette ARIA a préséance sur tout texte visible. Si aucune partie de l'étiquette visible ne fait partie du nom accessible, l'utilisateur ne pourra pas cibler le contrôle par son nom. ",
 href: '../module10/voice-input-fr.html#label-in-name'  ,
 title: "Saisie vocale - Module 10 - Méthodes de saisie de données" ,
 heading: " Étiquette dans le nom"
},{
 categories: 'module10',
 content: "  Dragon Naturally Speaking Naturally Speaking (Dragon) est le logiciel de saisie vocale le plus utilisé sur le marché. Exemple de commandes Dragon Les commandes Dragon sont nombreuses et permettent à l’utilisateur de contrôler toute l’interface informatique. Un sous-ensemble concerne l’accessibilité. Pour déplacer la cible d’une zone sensible à la suivante, l’utilisateur dit « touche de tabulation ». Pour activer une commande, l’utilisateur dit « Cliquer sur » suivi du nom de la commande. L’utilisateur peut accéder à l’une ou l’autre des commandes suivantes en dictant leur nom : Links Buttons Checkboxes Images (actionable) Radio buttons Text fields List boxes Dragon cliquera sur le contrôle dès qu'il aura trouvé une correspondance unique, de sorte que les utilisateurs n'ont souvent pas besoin de prononcer le nom en entier. L’utilisateur peut également numéroter toutes les commandes et choisir un numéro : L’utilisateur dit l’un des énoncés suivants : Show links or Click links Click button Click checkbox Click image Click radio button Click text field Click list box Les numéros apparaissent à côté des commandes du type demandé. S’il n’y en a qu’une seule, le logiciel clique directement sur elle. L’utilisateur dit 'Choose [number]' pour choisir parmi les commandes numérotées. D’autres commandes courantes permettent à l’utilisateur de faire défiler la page, de la recharger, de parcourir l’historique du navigateur, d’annuler le texte entré dans les champs de saisie, etc. Damier de souris Dragon Le damier de souris de Dragon Naturally Speaking permet à l’utilisateur de placer le pointeur de la souris sur une zone précise. Les utilisateurs invoquent le damier de souris en disant 'Mouse Grid', ce qui affiche une grille transparente de trois par trois sur l'écran, les sections étant numérotées de un à neuf. Avec le damier de souris à l'écran, l'utilisateur prononce le numéro sur lequel il veut se concentrer. Une nouvelle grille trois par trois apparaît à cet endroit, avec le pointeur de la souris au centre. L’utilisateur peut répéter le processus autant de fois que nécessaire. Une fois que le pointeur se trouve enfin sur la commande souhaitée, l’utilisateur dit « cliquer ». Cette section est adaptée de l’article le damier de souris dans la documentation d’aide de Nuance Naturally Dragon Speaking. ",
 href: '../module10/voice-input-fr.html#dragon-naturally-speaking'  ,
 title: "Saisie vocale - Module 10 - Méthodes de saisie de données" ,
 heading: " Dragon Naturally Speaking"
},{
 categories: 'module10',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.5.3 : Étiquette dans le nom (en anglais) Techniques G208 : Inclure le texte de l’étiquette visible dans le nom accessible (en anglais) G211 : Faire correspondre le nom accessible avec l’étiquette visible (en anglais) Échecs F96 : Échec en raison du nom accessible qui ne contient pas le texte visible de l’étiquette (en anglais) ",
 href: '../module10/voice-input-fr.html#voice-input-wcag'  ,
 title: "Saisie vocale - Module 10 - Méthodes de saisie de données" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module11',
 content: "  Aperçu : Zones live ARIA Les zones live ARIA, développées afin de rendre les contenus dynamiques accessibles aux lecteurs d’écran, sont des zones d’une page Web qui annoncent les mises à jour dynamiques de leur contenu lorsque le focus de l’utilisateur et celui du système sont différents. Exemples de cas d’utilisation de zones live : L’utilisateur reçoit un avis sur Facebook/Twitter Augmentations de prix sur un afficheur boursier Réception d’un nouveau message de clavardage Actualisation d’une barre de progression Erreur de validation d’un formulaire Actualisation du total dans un panier d’achat Une section sur les scores sportifs est actualisée périodiquement pour refléter les statistiques d’un match Un compte à rebours visible est actualisé une fois par minute L’utilisateur clique sur le bouton de carrousel « Suivant » pour passer à une autre diapositive (le contenu de la diapositive est annoncé) L’utilisateur trie le contenu d’un tableau par nom, ce qui déclenche l’annonce « Trié alphabétiquement par nom » Dans cette situation, le texte actualisé pourrait être masqué puisque les utilisateurs voyants n’ont pas besoin de la notification. La norme WAI-ARIA offre quatre attributs qui permettent à l’auteur d’identifier les zones live et leurs propriétés : aria-live, aria-relevant, aria-atomic et aria-busy. WAI-ARIA offre également cinq rôles spécialisés pour certains types de zones live. ",
 href: '../module11/aria-live-fr.html#overview'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " Aperçu : Zones live ARIA"
},{
 categories: 'module11',
 content: "  aria-live Une zone live est désignée par un attribut aria-live associé à un élément conteneur, p. ex. ou . Les navigateurs et l’API d’accessibilité surveillent le conteneur pour détecter tout texte injecté par script. Dès que du texte est injecté dans la zone live, le lecteur d’écran l’annonce. La zone live doit être vide au moment du chargement de la page, ou lorsqu’elle est ajoutée pour la première fois au DOM. Il est préférable d’ajouter une zone live au moment du chargement de la page, mais si vous ajoutez la zone au DOM de façon dynamique, il est préférable d’attendre au moins 2 secondes pour que l’API d’accessibilité puisse l’identifier avant d’injecter du texte. L’attribut aria-live accepte trois valeurs possibles : assertive, polite ou off. aria-live='assertive' Une annonce assertive interrompt tout ce que lecteur d’écran lit. Utilisez des annonces assertive seulement lorsque l’utilisateur doit être avisé immédiatement. aria-live='polite' Une annonce polie est retardée jusqu’à ce que le lecteur d’écran termine sa phrase actuelle ou jusqu’à ce que l’utilisateur arrête de taper. Vous utiliserez la valeur polie la plupart du temps. aria-live='off' Indique au lecteur d’écran de suspendre temporairement les interruptions aria-live. Le Widget de carrousel utilise aria-live='off' associé au conteneur de diapositive lorsque les diapositives avancent automatiquement, et aria-live='polite' lorsque l’utilisateur fait progresser manuellement les diapositives. Ainsi, un diaporama automatique ne pourra pas submerger l’utilisateur d’un lecteur d’écran qui essaie de lire la page, et il sera plus facile de lire un diaporama manuel. Bon exemple : Attribut aria-live Ici, un élément fournit un conteneur pour une zone live, identifié avec l’attribut aria-live='polite'. L’élément est vide au moment du chargement de la page. HTML Début du code Fin du code Lorsque l’utilisateur clique sur un bouton de tri dans l’en-tête d’une colonne de tableau, JavaScript remplit l’élément avec du texte. Le lecteur d’écran annonce « Trié alphabétiquement par nom ». HTML Début du code Trié alphabétiquement par nom Fin du code Comme le résultat du tri est apparent pour les utilisateurs visuels, la région en direct est masquée visuellement avec la classe CSS WET .wb-inv. CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code ",
 href: '../module11/aria-live-fr.html#live'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " aria-live"
},{
 categories: 'module11',
 content: "  aria-live Une zone live est désignée par un attribut aria-live associé à un élément conteneur, p. ex. ou . Les navigateurs et l’API d’accessibilité surveillent le conteneur pour détecter tout texte injecté par script. Dès que du texte est injecté dans la zone live, le lecteur d’écran l’annonce. La zone live doit être vide au moment du chargement de la page, ou lorsqu’elle est ajoutée pour la première fois au DOM. Il est préférable d’ajouter une zone live au moment du chargement de la page, mais si vous ajoutez la zone au DOM de façon dynamique, il est préférable d’attendre au moins 2 secondes pour que l’API d’accessibilité puisse l’identifier avant d’injecter du texte. L’attribut aria-live accepte trois valeurs possibles : assertive, polite ou off. aria-live='assertive' Une annonce assertive interrompt tout ce que lecteur d’écran lit. Utilisez des annonces assertive seulement lorsque l’utilisateur doit être avisé immédiatement. aria-live='polite' Une annonce polie est retardée jusqu’à ce que le lecteur d’écran termine sa phrase actuelle ou jusqu’à ce que l’utilisateur arrête de taper. Vous utiliserez la valeur polie la plupart du temps. aria-live='off' Indique au lecteur d’écran de suspendre temporairement les interruptions aria-live. Le Widget de carrousel utilise aria-live='off' associé au conteneur de diapositive lorsque les diapositives avancent automatiquement, et aria-live='polite' lorsque l’utilisateur fait progresser manuellement les diapositives. Ainsi, un diaporama automatique ne pourra pas submerger l’utilisateur d’un lecteur d’écran qui essaie de lire la page, et il sera plus facile de lire un diaporama manuel. Bon exemple : Attribut aria-live Ici, un élément fournit un conteneur pour une zone live, identifié avec l’attribut aria-live='polite'. L’élément est vide au moment du chargement de la page. HTML Début du code Fin du code Lorsque l’utilisateur clique sur un bouton de tri dans l’en-tête d’une colonne de tableau, JavaScript remplit l’élément avec du texte. Le lecteur d’écran annonce « Trié alphabétiquement par nom ». HTML Début du code Trié alphabétiquement par nom Fin du code Comme le résultat du tri est apparent pour les utilisateurs visuels, la région en direct est masquée visuellement avec la classe CSS WET .wb-inv. CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code ",
 href: '../module11/aria-live-fr.html#good-example-aria-live'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: "  Bon exemple : Attribut aria-live "
},{
 categories: 'module11',
 content: "  aria-atomic Utilisez l’attribut aria-atomic pour préciser si toute la zone live doit être annoncé, ou seulement le texte qui a changé. aria-atomic='false' Lorsqu’une zone live est actualisée, seul le texte actualisé est annoncé. Utilisez cette valeur lorsque le texte actualisé fait du sens par lui-même. Il s’agit de la valeur par défaut. aria-atomic='true' Lorsqu’une zone live est actualisée, toute la zone est annoncée. Utilisez cette valeur lorsque le texte statique voisin dans la zone live fournit le contexte nécessaire pour donner un sens au texte actualisé. Bon exemple : aria-atomic false ou true Dans ces exemples, le prix total actualisé au cours d’un processus d’achat est annoncé lorsque l’utilisateur ajoute un produit. Dans ce premier exemple, l’attribut aria-atomic n’est pas utilisé, de sorte que la valeur par défaut s’applique, c’est-à-dire « false ». Seul le contenu dynamique est annoncé, c’est-à-dire le prix. Si le contenu dynamique n’est pas significatif en soi, il peut facilement confondre les utilisateurs. Dans ce cas, le contenu dynamique à lui seul est vague: « 84,52 $ ». HTML Début du code Prix total : 84,52 $ Fin du code Dans ce deuxième exemple, l’attribut aria-atomique est fixé à « true ». Tout le contenu de la zone live est annoncé, fournissant le contexte nécessaire pour donner un sens au contenu dynamique : « Prix total : 84,52 $ ». HTML Début du code Prix total : 84,52 $ Fin du code ",
 href: '../module11/aria-live-fr.html#atomic'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " aria-atomic"
},{
 categories: 'module11',
 content: "  aria-relevant L’attribut aria-relevant spécifie quels types de changement apportés à une zone live doivent être annoncés. aria-relevant='all' Tous les changements sont annoncés. À utiliser avec prudence, car ce paramètre peut être verbeux. aria-relevant='additions' Les insertions de nœuds dans la zone live sont annoncées. aria-relevant='removals' Les suppressions de nœuds dans la zone live sont annoncées. À réserver pour des changements importants, comme un collègue qui quitte une salle de clavardage. aria-relevant='text' Les modifications au contenu textuel (y compris les équivalents textuels, comme alt text) dans la zone live sont annoncées. Une zone live a une valeur aria-relevant implicite « additions » et « text », donc l’attribut n’est pas nécessaire si la conception suppose le comportement normal, c’est-à-dire l’annonce de contenu ajouté. Utilisez seulement l’attribut aria-relevant si vous devez communiquer la suppression de contenu d’une zone live. ",
 href: '../module11/aria-live-fr.html#relevant'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " aria-relevant"
},{
 categories: 'module11',
 content: "  aria-busy Utilisez l’attribut aria-busy pour aviser la technologie d’assistance qu’elle devrait ignorer temporairement les changements apportés à un élément lorsque des éléments sont en cours de chargement. Configurez aria-busy='true' initialement et, une fois tous les éléments chargés, effacez l’attribut ou configurez-le à aria-busy='false'. ",
 href: '../module11/aria-live-fr.html#busy'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " aria-busy"
},{
 categories: 'module11',
 content: "  Types particuliers de zone live role='alert' Utilisez le rôle ARIA alert pour annoncer des informations importantes et généralement urgentes qui nécessitent l’attention immédiate de l’utilisateur. Configurer role='alert' équivaut à configurer aria-live='assertive' et aria-atomic='true'. La seule différence réside dans le fait que certains lecteurs d’écran commencent l’annonce en disant « Alerte », pour indiquer à l’utilisateur qu’il s’agit d’une information urgente. Bon exemple : Utilisation de role='alert' Dans cet exemple, un élément utilise l'attribut role='alert' et la déclaration CSS display: none. Suppression de la declaration CSS display: none déclenche l’annonce de la zone live. Exposer ce texte caché précédemment équivaut à injecter du texte. L’alerte initiale comporte le nom de classe CSS hidden, ce qui masque le texte de l’alerte avec display: none HTML Début du code Mettre à jour le profil Votre profil a été mis à jour. Fin du code CSS Début du code .hidden { display: none; } Fin du code L’alerte est déclenchée en supprimant le nom de classe CSS hidden : HTML Début du code Mettre à jour le profil Votre profil a été mis à jour. Fin du code role='status' Utilisez le rôle ARIA status pour annoncer à l’utilisateur des informations moins urgentes qu’une alerte. Configurer role='status' équivaut à configurer aria-live='polite' et aria-atomic='true'. Si un élément de la page contrôle ce qui est affiché dans l’état, attribuez à l’élément de contrôle l’attribut aria-controls='IDREF' en pointant vers la valeur d’attribut id de l’élément avec role='status'. Bon exemple : Utilisation de role='status' Dans cet exemple, un paragraphe comportant l'attribut role='status' affiche le nombre d’articles dans un panier d’achat. Puisque role='status' par défaut utilise aria-atomic='true', l’ensemble du contenu du paragraphe est annoncé. Lorsque le nombre d’articles est actualisé, l’annonce de la zone live est activée. Les lecteurs d’écran déclarent le texte visuellement caché 'Panier d'achat', le nombre d’articles actualisé et le mot « articles ». L'attribut title du contenant l'icône fournit une étiquette visuelle aux utilisateurs de la souris. Comme la prise en charge de l'attribut title n'est pas uniforme d'un lecteur d'écran à l'autre, l'élément est masqué pour tous les lecteurs d'écran (à l'aide de l'attribut aria-hidden='true') et le texte visuellement masqué, plus fiable, est utilisé pour étiqueter l'icône (à l'aide de la classe CSS WET .wb-inv). L’attribut aria-controls='IDREF' est associé au bouton et reçoit la valeur d’attribut id de l’élément qui utilise l'attribut role='status'. L'exemple commence Panier d’achat 0 articles Ajouter au panier L'exemple finit HTML Début du code Panier d’achat 0 articles Ajouter au panier Fin du code Voir le JavaScript Début du code let counter = 0; function buy() { counter += 1; document.getElementById('cart-count').innerHTML = counter; } Fin du code Voir le CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } .glyphicon { position: relative; top: 2px; display: inline-block; font-family: 'Glyphicons Halflings'; font-style: normal; font-weight: 400; line-height: 1; -webkit-font-smoothing: antialiased; } .glyphicon-shopping-cart:before { content: '\e116'; } Fin du code role='timer' Utilisez le rôle ARIA timer pour identifier un compteur numérique indiquant le temps écoulé depuis un point de départ ou le temps restant avant un point de fin. Le rôle comporte la valeur implicite aria-live='off' pour éviter que des annonces trop fréquentes submergent l’utilisateur du lecteur d’écran. Toutefois, vous pouvez annoncer le délai à intervalles réguliers en utilisant JavaScript pour définir brièvement les attributs aria-live='assertive' et role='alert' de manière à ignorer aria-live='off' et role='timer'. Bon exemple : Compte à rebours annoncé à intervalles réguliers Dans cet exemple, un compte à rebours utilise role='timer', et est donc silencieux pour les lecteurs d’écran en raison de son paramètre implicite aria-live='off'. HTML Début du code Il reste 45 secondes! Fin du code Toutefois, à des intervalles de 15 secondes, JavaScript ajoute brièvement l’attribut aria-live ='assertive' et remplace le rôle timer par role='alert'. Les lecteurs d’écran annoncent l’alerte initiale, « Il reste 60 secondes! », puis le temps restant toutes les 15 secondes : « Il reste 45 secondes! », etc. HTML Début du code Il reste 45 secondes! Fin du code En fait, un intervalle de 15 secondes entre les annonces est trop courte en pratique et nous l’utilisons ici simplement pour illustrer la technique. Une minute est un intervalle plus pratique. Faites l’essai en visitant la démonstration (S'ouvre dans un nouvel onglet) avec un lecteur d’écran. Voir le JavaScript Début du code function decrement() { var numElement = document.getElementById('number'); var newNumber = parseInt(numElement.textContent - 1); if (newNumber > -1) { numElement.textContent = newNumber; } if ((newNumber % 15)===0 || newNumber == 0) { setAlert(); } } function setAlert() { var liveRegion = document.getElementById('countdown'); liveRegion.setAttribute('aria-live', 'assertive'); liveRegion.setAttribute('role', 'alert'); setTimeout(function() { liveRegion.removeAttribute('aria-live'); liveRegion.setAttribute('role', 'timer'); }, 999); } window.setInterval(function() { decrement(); }, 1000); window.addEventListener('load', function () { setAlert(); //alerte à 60 secondes (ou au début) }); Fin du code role='marquee' Utilisez le rôle ARIA marquee pour définir une zone comme un type de zone live comportant des annonces non essentielles qui changent fréquemment. Par exemple, le contenu d’un afficheur boursier et les bannières publicitaires fréquemment actualisées. Les éléments comportant le rôle marquee ont une valeur aria-live='off' implicite. Comme pour le rôle timer, le contenu change trop fréquemment pour être annoncé par les lecteurs d’écran. Les utilisateurs de lecteur d’écran peuvent néanmoins naviguer jusqu’à la zone pour lire le texte. Une zone marquee doit avoir un nom accessible. Si une étiquette visible est présente, utilisez aria-labelledby; sinon, utilisez aria-label. role='log' Utilisez le rôle ARIA log pour faire le suivi des actualisations séquentielles, comme un journal de clavardage, un historique des messages, un journal de jeu ou un journal d’erreurs. Les nouvelles informations sont ajoutées à la fin et, facultativement, les informations plus anciennes sont supprimées du début. Les actualisations de la zone live sont annoncées lorsque l’utilisateur est inactif. La zone live définie par role='log' comporte des valeurs implicites d’attribut aria-live='polite' et aria-atomic='true'. ",
 href: '../module11/aria-live-fr.html#special-types'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " Types particuliers de zone live"
},{
 categories: 'module11',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.3.1 : Identification des erreurs 4.1.3 : Messages d’état (en anglais) Techniques ARIA19 : Utiliser ARIA role=alert ou des régions réelles pour identifier des erreurs (en anglais) ARIA22 : Utiliser role='status' pour présenter les messages d’état de l’instance (en anglais) ARIA23 : Utiliser role=log pour identifier des mises à jour séquentielles de l’information (en anglais) WAI-ARIA 1.1 aria-live (Propriété) aria-atomic (État) aria-relevant (Propriété) aria-busy (Propriété) alert (Rôle) status (Rôle) timer (Rôle) marquee (Rôle) log (Rôle) ",
 href: '../module11/aria-live-fr.html#resources'  ,
 title: " Zones live ARIA - Module 11 – Zones live ARIA et limites de temps " ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module11',
 content: "  Zones live ARIA Identifiez une zone live avec un attribut aria-live associé à un élément conteneur. La zone live doit être vide au moment du chargement de la page ou au moment de son ajout initial au DOM. Utilisez aria-live='polite' pour la plupart des annonces. Utilisez aria-live='assertive' lorsque l’utilisateur a besoin d’une rétroaction immédiate. Utilisez l’attribut aria-atomic pour préciser si toute la zone live doit être annoncé, ou seulement le texte qui a changé. Utilisez aria-atomic='false' pour annoncer seulement le texte actualisé. Utilisez aria-atomic='true' pour annoncer le texte statique et actualisé. Utilisez l’attribut aria-relevant seulement si la suppression du contenu d’une zone live doit être annoncée. Utilisez l’attribut aria-busy='true' pour aviser la technologie d’assistance qu’elle doit ignorer temporairement les changements apportés à un élément lorsque des éléments sont en cours de chargement. Une fois tous les éléments chargés, effacez l’attribut ou configurez-le à aria-busy='false'. Utilisez un type spécial de rôle de zone live, le cas échéant : Utilisez role='alert' pour annoncer des informations importantes et généralement urgentes qui nécessitent l’attention immédiate de l’utilisateur. Utilisez role='status' pour annoncer à l’utilisateur une information moins urgente qu’une alerte. Utilisez role='timer' pour identifier un compteur numérique indiquant le temps écoulé depuis un point de départ ou le temps restant avant un point de fin. Utilisez role='marquee' pour définir une zone comme un type de zone live comportant des annonces non essentielles qui changent fréquemment. Utilisez role='log' pour faire le suivi des actualisations séquentielles, par exemple un journal de clavardage, un historique des messages, un journal de jeu ou un journal des erreurs. ",
 href: '../module11/best-practice-mod-11-fr.html#aria-regions'  ,
 title: "Pratique exemplaire - Module 11 – Zones live ARIA et limites de temps" ,
 heading: " Zones live ARIA"
},{
 categories: 'module11',
 content: "  Limites de temps Toute conception comportant une limite de temps doit offrir à l’utilisateur l’une de ces options : Désactiver la limite de temps avant qu’elle soit activée. Ajuster la limite de temps avant qu’elle soit activée à une durée d’au moins dix fois la valeur par défaut. Prolonger la limite de temps. L’utilisateur doit être averti au moins 20 secondes avant l’expiration du délai. Lorsque la session est expirée, présentez des messages d’avertissement dans une boîte de dialogue contextuelle avec des options permettant à l’utilisateur de prolonger ou de terminer la session. Pour les minuteries comportant des échéances fixes, offrez un compte à rebours avec annonces ARIA live à des intervalles appropriés. Lorsqu’une page est rafraîchie ou rechargée, le système doit demander la permission de l’utilisateur. Il faut avertir l’utilisateur que du contenu plus récent est disponible et à lui offrir des options pour actualiser le contenu ou poursuivre avec l’ancien contenu. ",
 href: '../module11/best-practice-mod-11-fr.html#time-limits'  ,
 title: "Pratique exemplaire - Module 11 – Zones live ARIA et limites de temps" ,
 heading: " Limites de temps"
},{
 categories: 'module11',
 content: "  Aperçu : Limites de temps Les limites de temps constituent un obstacle potentiel pour les personnes qui ont des handicaps tels que la cécité, la malvoyance, un trouble de dextérité ou une limitation cognitive. Ces utilisateurs peuvent avoir besoin de plus de temps pour lire le contenu ou exécuter une tâche, par exemple remplir un formulaire en ligne. Les directives WCAG exigent que tout contenu comportant des limites de temps offre l’une des fonctionnalités suivantes : Désactiver L’utilisateur peut désactiver la limite de temps avant qu’elle soit activée. Ajuster L’utilisateur peut ajuster la limite de temps avant qu’elle soit activée à une durée d’au moins dix fois la valeur par défaut. Prolonger L’utilisateur est averti avant l’expiration du délai et dispose d’au moins 20 secondes pour prolonger la limite de temps. Tout processus qui survient sans activation par l’utilisateur après un délai défini ou périodiquement est considéré comme une limite de temps. Cela comprend l’actualisation partielle ou complète d’un contenu (comme un rafraîchissement de page), des changements apportés au contenu et l’expiration d’un délai permettant à un utilisateur de réagir à une demande d’action. Il peut également s’agir de contenu qui est actualisé trop rapidement pour que l’utilisateur puisse le lire ou le comprendre – tout contenu animé, mobile ou défilant. Exemples : Un formulaire comportant une limite de temps offre une commande qui permet à l’utilisateur de désactiver cette fonction ou de prolonger le délai jusqu’à dix fois la valeur par défaut. Après une période d’inactivité de l’utilisateur, un script côté client demande à l’utilisateur s’il a besoin de plus de temps. Si le script n’obtient pas de réponse dans les 20 secondes, le délai expire. Un site affichant une bannière rotative offre une commande qui permet à l’utilisateur de prolonger le délai entre les actualisations jusqu’à dix fois le délai par défaut. Un site affichant une bannière rotative offre un bouton pause. Une page affichant du texte animé en défilement constant qui apparaît et disparaît à l’écran offre un bouton pause. Pour les sessions comportant un délai d’expiration, présentez des messages d’avertissement dans une boîte de dialogue contextuelle avec des options permettant à l’utilisateur de prolonger ou de terminer la session. ( ARIA Dialog pattern et WET Expiration de la session sont décrits dans le module 12.) Pour les minuteries comportant des échéances fixes, offrez un compte à rebours avec annonces ARIA live à des intervalles appropriés. Voir l’exemple dans la section précédente, Bon exemple : Compte àrebours annoncé à intervalles réguliers Lorsqu’une page est rafraîchie ou rechargée, le système doit demander la permission de l’utilisateur. Le rafraîchissement/rechargement automatique des pages peut causer des difficultés pour les personnes ayant des déficiences motrices, malvoyantes, aveugles et ayant certaines limitations cognitives. Les utilisateurs de lecteur d’écran pourraient ne pas avoir suffisamment de temps pour trouver leur place avant que la page ne se rafraîchisse. La bonne pratique consiste plutôt à avertir l’utilisateur que du contenu plus récent est disponible et à lui offrir des options pour actualiser le contenu ou poursuivre avec l’ancien contenu. Si l’actualisation du contenu est urgente, utilisez une boîte de dialogue contextuelle et déplacez le focus de l’utilisateur vers celle-ci; ou encore, utilisez une alerte visuelle ARIA live region avec role='alert'. ",
 href: '../module11/time-limits-fr.html#overview'  ,
 title: "Limites de temps - Module 11 – Zones live ARIA et limites de temps" ,
 heading: " Aperçu : Limites de temps"
},{
 categories: 'module11',
 content: "  Bon exemple : Expiration de session Dans cet exemple, après 15 secondes d’inactivité, JavaScript est activé et déplace le focus de l’utilisateur vers une boîte de dialogue contextuelle qui utilise l’attribut role='alertdialog'. L’utilisateur peut choisir de continuer ou de terminer la session. Si l’utilisateur clique sur Continuer la session, JavaScript réinitialise le compteur de 15 secondes. Si l’utilisateur clique sur Terminer la session, JavaScript quitte la page. Ouvrez l’exemple d’expiration de session (s'ouvre dans un nouvel onglet). Voir le CSS Début du code #modalOverlay { width:100%; height:100%; top: 50%; left: 50%; position: absolute; } [role=alertdialog] { position: relative; width: 80%; margin-left: -40%; height: 400px; margin-top: -200px; padding: 5px; border: thin #000 solid; background-color:#fff; } Fin du code Voir le Javascript Pour contourner un bogue de focus dans VoiceOver, JavaScript masque l’élément avec aria-hidden='true' et le code CSS display: none, puis une milliseconde plus tard, le script l’annule. Début du code startTimeout(); function startTimeout(){ setTimeout(function(){ $('main').attr('aria-hidden','true').css('display','none'); setTimeout(function(){ $('main').attr('aria-hidden','true').css('display','inherit'); }, 1); $('body').attr('style','background-color:gray;'); $('a').attr('tabindex','-1'); $('a').attr('style','cursor:default;'); $('button').attr('disabled','true'); var modalOverlay = $('').attr({id:'modalOverlay'}); $(modalOverlay).appendTo('body'); var dialog = $('').attr({role:'alertdialog', 'aria-labelledby':'alertHeading', 'aria-describedby':'alertText'}); $(dialog).html(' Expiration de session! En l’absence d’activité, votre session expirera dans 2 minutes. Si vous avez besoin de plus de temps, veuillez cliquer sur « Continuer la session ». Pour laisser expirer la session, veuillez cliquer sur « Terminer la session ». Continue Session Terminer la session ').appendTo('#modalOverlay'); $('#continue').focus(); $('#continue').click(function(e) { $('main').attr('aria-hidden','false'); $('body, a').removeAttr('style'); $('a').removeAttr('tabindex'); $('button').removeAttr('disabled'); $(modalOverlay).remove(); $(dialog).remove(); startTimeout(); }); }, 15000); } Fin du code Référence : Paul J Adam, Session timeout alertdialog ",
 href: '../module11/time-limits-fr.html#good-session-timeout'  ,
 title: "Limites de temps - Module 11 – Zones live ARIA et limites de temps" ,
 heading: "  Bon exemple : Expiration de session"
},{
 categories: 'module11',
 content: "  Mauvais exemple : Expiration de session sans option de prolongation L’expiration d’une session sans avertissement approprié peut mener à de la frustration et à une perte de travail. Cet exemple montre un message d’avertissement à l’utilisateur sans possibilité de continuer à prolonger la session. De plus, le compte à rebours ne comporte pas de région ARIA en direct. L'exemple commence L'exemple finit HTML Début du code Vous serez automatiquement déconnecté dans 19 secondes. Fin du code CSS Début du code #timeOut { background-color: rgb(247, 231, 14); } Fin du code Voir le JavaScript Début du code var IdlelTimeOut = 20; //10 seconds var idleSecondsTimer = null; var idleSecondsCounter = 0; document.onclick = function () { idleSecondsCounter = 0; }; document.onmousemove = function () { idleSecondsCounter = 0; }; document.onkeypress = function () { idleSecondsCounter = 0; }; idleSecondsTimer = window.setInterval(CheckIdleTime, 2000); function CheckIdleTime() { idleSecondsCounter++; var oPanel = document.getElementById('timeOut'); if (oPanel) { oPanel.innerHTML = (IdleTimeOut - idleSecondsCounter); } if (idleSecondsCounter >= IdealTimeOut) { window.clearInterval(idleSecondsTimer); alert('Votre session est expirée. Veuillez ouvrir une nouvelle session.'); window.location = 'https://bati-itao.github.io/'; } } Fin du code ",
 href: '../module11/time-limits-fr.html#bad-no-extend'  ,
 title: "Limites de temps - Module 11 – Zones live ARIA et limites de temps" ,
 heading: "  Mauvais exemple : Expiration de session sans option de prolongation"
},{
 categories: 'module11',
 content: "  Mauvais exemple : JavaScript rafraîchit automatiquement une page HTML Début du code function AutoRefresh( t ) { setTimeout('location.reload(true);', t); } Cette page sera rafraîchie toutes les 5 secondes. Fin du code ",
 href: '../module11/time-limits-fr.html#bad-js-refresh'  ,
 title: "Limites de temps - Module 11 – Zones live ARIA et limites de temps" ,
 heading: "  Mauvais exemple : JavaScript rafraîchit automatiquement une page"
},{
 categories: 'module11',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.2.1 : Réglage du délai Techniques Situation A : S’il y a des limites de temps associées à une session G133 : Proposer une case à cocher sur la première page d'un formulaire multipages permettant à l'utilisateur de demander une limite du temps de session plus longue ou un temps de session sans limite (en anglais) G198 : Fournir à l'utilisateur une façon de désactiver la limite de temps (en anglais) Situation B : Si une limite de temps est contrôlée par un script sur la page G198 : Fournir à l'utilisateur une façon de désactiver la limite de temps (en anglais) G180 : Fournir à l'utilisateur une façon de fixer la limite de temps à 10 fois la durée par défaut (en anglais) SCR16 : Fournir un script qui avertit l'utilisateur que le délai va expirer (en anglais) ET SCR1 : Permettre à l'utilisateur de prolonger le délai par défaut (en anglais) Situation C : Si la lecture est limitée dans le temps G4 : Permettre de mettre le contenu en pause et de redémarrer là où il a été mis en pause (en anglais) G198 : Fournir à l'utilisateur une façon de désactiver la limite de temps (en anglais) SCR33 : Utiliser un script pour faire défiler le contenu et fournir un mécanisme pour le mettre en pause (en anglais) SCR36 : Fournir un mécanisme permettant à l'utilisateur d'afficher le texte en mouvement, défilant ou mis à jour automatiquement dans une fenêtre ou une zone statique (en anglais) ",
 href: '../module11/time-limits-fr.html#time-limits-wcag'  ,
 title: "Limites de temps - Module 11 – Zones live ARIA et limites de temps" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module2',
 content: "  Points de repère Identifier les points de repère sur la page: Utiliser des éléments de section HTML5 équivalents (préférable). Utiliser des attributs de rôle de point de repère ARIA s’il est impossible d’utiliser des éléments de section HTML5. S’assurer que tout le contenu de la page se trouve dans une région de point de repère. S’assurer de la présence d’un seul cas de: role='banner' ou (lorsque est un enfant de ). Un n’est pas considéré comme une bannière lorsqu’il s’agit de l’enfant de , , , ou . S’assurer que (quand il s’agit de la bannière), , sont des enfants directs de . Limiter l’utilisation de aux navigations primaires et secondaires. Utiliser l’attribut aria-label pour différencier plusieurs éléments (différents). Utiliser l’attribut aria-labelledby pour étiqueter une région qui commence par un élément d’en-tête. Fournir des étiquettes courtes et descriptives. Le rôle du point de repère est énoncé par un lecteur d’écran avec le nom, le cas échéant. Ne pas utiliser le rôle de point de repère (p. ex., « navigation ») dans le nom; par exemple, l’étiquette est « site » et non « navigation du site » pour un point de repère de navigation. Utiliser role='search' plutôt que role='form' lorsque le formulaire est utilisé pour la fonction de recherche. ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-landmarks'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " Points de repère"
},{
 categories: 'module2',
 content: "  En-têtes Fournir des en-têtes pour chaque page. Utiliser les éléments - pour tous les en-têtes. Ne pas utiliser d’éléments d’en-tête pour du texte qui n’est pas un en-tête. Utilisez plutôt CSS pour modifier la taille ou les styles de police de caractère. S’assurer que les en-têtes sont concis et significatifs (ils décrivent le sujet ou le but). S’assurer que les en-têtes suivent une séquence hiérarchique sans sauter aucun niveau. Fournir un en-tête& h1 qui décrit le contenu de la page. ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-headings'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " En-têtes"
},{
 categories: 'module2',
 content: "  Structure du contenu S’assurer qu’un élément est utilisé dans une page Web pour la composition autonome. Pour le regroupement thématique du contenu, s’assurer que l’élément est utilisé. Uutiliser l’élément paragraphe () pour les paragraphes. Utilisation de citations : Pour les citations plus longues et plus complexes, utiliser l’élément . Pour les citations courtes, qui sont habituellement intégrées à une autre phrase, utiliser l’élément de citation incluse par référence . Pour indiquer que le contenu a une grande importance ou urgence, utiliser l’élément . Pour les mots pour lesquels il faut souligner l’importance par rapport au texte environnant, utiliser l’élément . Quand vous utilisez une abréviation pour la première fois sur une page, indiquez ce que signifie le terme complet entre parenthèses, ou alors inscrivez le terme complet suivi de l’abréviation entre parenthèses. Assurez-vous que chaque page Web définit son sujet ou son objectif dans un titre descriptif. Définir le titre dans un élément dans le HTML élément. Vous pouvez également indiquer le plus grand recueil de pages Web après la description de la page. Lorsque vous formulez des instructions sur l’endroit où trouver ou sur la manière d’utiliser du contenu, évitez les descriptions qui reposent exclusivement sur la capacité de voir ou d’entendre. Inclure une étiquette textuelle dans les instructions et au niveau de l’élément présentant un intérêt. ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-content-structure'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " Structure du contenu"
},{
 categories: 'module2',
 content: "  Langue Ajouter un attribut lang à l’élément pour définir la langue par défaut pour toute la page. Pour l’anglais : . Pour le français : . Pour les autres langues, choisir le code de langue approprié à partir de la norme ISO-639. Utiliser le code de langue le plus court. Vous pouvez ajouter une étiquette secondaire de région si vous avez besoin d'indiquer qu'il s'agit de la langue telle qu'elle est parlée quelque part dans une région particulière ; par exemple, lang='fr-CA' indique le français tel qu'il est parlé au Canada. Insérez un attribut lang partout où la langue par défaut change. En XHTML, utiliser l’attribut lang et l’attribut xml:lang. ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-language'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " Langue"
},{
 categories: 'module2',
 content: "  Listes HTML fournit trois structures de liste, chacune comportant une sémantique spécifique : Utiliser des listes non ordonnées () lorsque l’ordre des éléments n’est pas pertinent. Chaque élément de liste () dans une liste non ordonnée est marqué d’une puce. Utiliser les listes ordonnées () pour des renseignements séquentiels, lorsque l’ordre des éléments est pertinent. Chaque élément de liste () est numéroté par le navigateur. Utiliser les listes de descriptions () pour regrouper les termes associés () et leurs descriptions (). ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-lists'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " Listes"
},{
 categories: 'module2',
 content: "  iFrames Si l’iFrame est composé d’images décoratives ou de JavaScript, masquez-le des lecteurs d’écran en réglant l’attribut aria-hidden='true' sur l’élément iframe. Si l’iFrame contient du contenu destiné à l’utilisateur : Attribuer à l’élément iframe une valeur d’attribut de title descriptif. S’assurer que la valeur de l’attribut de title iFrame est unique dans tous les iFrames de la page. ",
 href: '../module2/best-practice-mod-2-fr.html#best-practice-iframes'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " iFrames"
},{
 categories: 'module2',
 content: "  Analyse syntaxique et validité Les éléments ont des balises de début et de fin complètes. Les éléments sont imbriqués selon leurs spécifications. Les éléments ne contiennent pas d’attributs en double. Tous les identificateurs sont uniques. ",
 href: '../module2/best-practice-mod-2-fr.html#parsing-validity'  ,
 title: "Pratiques exemplaires – Module 2 - Structure et sémantique des pages" ,
 heading: " Analyse syntaxique et validité"
},{
 categories: 'module2',
 content: "  Aperçu – Structure du contenu Pour comprendre un document, tout le monde a besoin de comprendre sa structure. Les utilisateurs du lecteur d’écran doivent élaborer un modèle mental de la page et dépendent des auteurs de contenu qui : identifient, avec le balisage approprié, les titres, les menus, les bannières, les paragraphes, les listes, les citations, le code, les tableaux et les autres fonctions; et, au moment de rédiger des instructions permettant de comprendre et d’utiliser le contenu, identifier les éléments par leur nom visible. ",
 href: '../module2/content-structure-fr.html#content-structure'  ,
 title: "Structure du contenu – Module 2 - Structure et sémantique des pages" ,
 heading: " Aperçu – Structure du contenu"
},{
 categories: 'module2',
 content: "  Structures de page communes Définir les éléments de base de votre structure de page avec l’élément HTML approprié au travail, c’est-à-dire en utilisant un balisage sémantique. Il s’agit d’une liste partielle d’éléments HTML sémantiques qui définissent la structure. D’autres éléments, comme les listes, liens, tableaux, formulaires et images, sont décrits ailleurs dans le présent cours. Articles L’élément HTML5 représente une composition complète ou autonome dans une page Web. Parmi les exemples d’articles figurent un objet sur un site de magasinage ou un article sur un site de nouvelles. HTML Début du code Dentifrice classique Dentifrice extrême Fins de code Sections L’élément HTML5 marque une région générale d’une page Web ou d’un article. Il est utilisé pour le regroupement thématique du contenu et devrait s’ouvrir avec un en-tête. Si un élément est nommé (utilisant aria-label, aria-labelledby ou un title attribut), il sera designé comme point de repère. HTML Début du code Chapitre 2 Fins de code Paragraphes Utilisez l’élément paragraphe () pour marquer les paragraphes du texte, comme celui-ci. Le style uniforme des paragraphes améliore la lisibilité du texte. Il donne également plus de contrôle aux utilisateurs lorsqu’ils personnalisent leur affichage. Citations L’identification d’une citation aide à préciser que le contenu est attribué à un autre auteur. Les citations peuvent être balisées comme inclusions ou sous forme des blocs de texte. Les technologies d’assistance peuvent indiquer aux utilisateurs l’endroit où une citation commence et se termine, ce qui peut éviter les malentendus. Bon exemple : Citation longue Utilisez l’élément pour des citations plus longues et plus complexes. Il peut contenir des paragraphes, des en-têtes et d’autres éléments de structure de texte. Ces éléments doivent refléter la structure du document cité. L’élément est utilisé pour indiquer la source de la citation. L'exemple commence Voici une définition du Concept de structure de page tirée de W3 WAI. Le contenu bien structuré permet une navigation et un traitement plus efficaces. Utiliser HTML et WAI-ARIA pour améliorer la navigation et l’orientation sur les pages Web et dans les applications. L'exemple finit HTML Début du code Voici une définition du Concept de structure de page tirée de W3 WAI. Le contenu bien structuré permet une navigation et un traitement plus efficaces. Utiliser HTML et WAI-ARIA pour améliorer la navigation et l’orientation sur les pages Web et dans les applications. Fins de code Bon exemple : Citation incluse par référence Pour les citations plus courtes, qui sont habituellement intégrées à une autre phrase, utiliser l’élément . L'exemple commence Helen Keller a affirmé : « L’apitoiement sur soi est notre pire ennemi et si nous y cédons, nous ne pourrons jamais rien faire de bien dans le monde ». L'exemple finit HTML Début du code Helen Keller a affirmé : L’apitoiement sur soi est notre pire ennemi et si nous y cédons, nous ne pourrons jamais rien faire de bien dans le monde Fins de code Balises strong (gras) et em (italique) STRONG et EM sont des balises sémantiques qui signifient que l’auteur souhaite mettre des éléments en relief; ceux­ci seront affichés en gras () ou en italique () dans un navigateur visuel. Les éléments et ne doivent pas être utilisés. Les éléments et sont souvent utilisés pour mettre en évidence des mots ou des phrases dans un paragraphe de texte. Par exemple : L'exemple commence Important : J’aimerais être avisé par courriel, pas par d’autres formes de communication. Elle n’était pas amusée. L'exemple finit La prise en charge de et par le lecteur d’écran est faible. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques G115 : Utiliser les éléments sémantiques pour baliser la structure (en anglais) H49 : Utiliser les éléments sémantiques pour baliser le texte accentué ou spécial (en anglais) La description des structures de page est tirée du document de l’Initiative pour l’accessibilité du Web (IAT) : Structure du contenu (WAI) dans Tutoriel sur la structure des pages des Tutoriels sur l’accessibilité du Web (en anglais seulement). Eric Eggert et Shadi Abou-Zahra. Contributeurs : Groupe de travail sur l’éducation et la sensibilisation (GTSE). Copyright © 2019 W3C® (MIT, ERECIM, Keio). Mis à jour le 27 juillet 2019 (publié pour la première fois en avril 2017). ",
 href: '../module2/content-structure-fr.html#common'  ,
 title: "Structure du contenu – Module 2 - Structure et sémantique des pages" ,
 heading: " Structures de page communes"
},{
 categories: 'module2',
 content: "  Abréviations Le Guide de rédaction du contenu du site Canada.ca exige stipulent que quand vous utilisez une abréviation pour la première fois sur une page, vous devez indiquer ce que signifie le terme complet entre parenthèses, ou alors inscrire le terme complet suivi de l’abréviation entre parenthèses (p. ex., « Emploi et Développement social Canada (EDSC) » ou « EDSC (Emploi et Développement social Canada) »). Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.1.4 : Abréviations Techniques G97 : Fournir l'abréviation immédiatement après la forme complète (en anglais) ",
 href: '../module2/content-structure-fr.html#abbreviations'  ,
 title: "Structure du contenu – Module 2 - Structure et sémantique des pages" ,
 heading: " Abréviations"
},{
 categories: 'module2',
 content: "  Titre de la page Le titre de la page est la première chose déclarée par les lecteurs d’écran lors du chargement de la page. Les navigateurs l’affichent dans l’onglet de la page, dans la liste de l’historique des boutons Reculer d’une page et sous forme de nom de signet. Le titre peut également apparaître dans les cartes du site, les résultats de recherche et le texte du lien. Cette information unique aide tous les utilisateurs à trouver du contenu, à s’y orienter et à y naviguer. Pratique exemplaire concernant les titres de page : Assurez-vous que chaque page Web définit son sujet ou son objectif dans un titre descriptif. Définir le titre dans un élément dans le HTML élément. Vous pouvez également indiquer le plus grand recueil de pages Web après la description de la page. Bon exemple : Titre de la page descriptive Dans cet exemple, le titre d'une page présentant un poste vacant passe du spécifique au général : il commence par le nom du poste, puis passe au nom de la grande collection et enfin à celui de l'organisation. HTML Code begins Développeur Java - Site d’emplois - Entreprise XYZ Code ends Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.2 : Titre de page Techniques G88 : Donner un titre descriptif aux pages Web (en anglais) H25 : Donner un titre à l'aide de l'élément title (en anglais) G127 : Indiquer la relation d'une page Web dans un grand ensemble de pages (en anglais) (consultatif/facultatif) Échecs F25 : Échec du critère de succès 2.4.2 survenant quand le titre de la page Web n'identifie pas son contenu (en anglais) ",
 href: '../module2/content-structure-fr.html#title'  ,
 title: "Structure du contenu – Module 2 - Structure et sémantique des pages" ,
 heading: " Titre de la page"
},{
 categories: 'module2',
 content: "  Instructions d’orientation Lorsque vous formulez des instructions sur l’endroit où trouver ou sur la manière d’utiliser du contenu, évitez les descriptions qui reposent exclusivement sur la capacité de voir ou d’entendre. Les caractéristiques sensorielles des composants de la page, comme leur forme, leur couleur, leur taille, leur emplacement visuel, leur orientation ou leur son, sont des renseignements inutiles pour les personnes ayant des déficiences sensorielles connexes. Les instructions « Read the review to the right » (Lire l'énoncé situé à droite) et « Click the red button, below » (Cliquer sur le bouton rouge ci-dessous) sont deux obstacles puisqu’elles reposent sur des caractéristiques sensorielles. Assurez-vous plutôt d’inclure une étiquette textuelle dans les instructions et au niveau de l’élément présentant un intérêt, par exemple « Lire l’énoncé » Une soirée à l’opéra, , à droite » et « Cliquez sur le bouton rouge Aperçu ci-dessous. » Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.3: Caractéristiques sensorielles Techniques G96 : Fournir une identification textuelle des items dont la compréhension reposerait autrement sur une information sensorielle seulement (en anglais) Échecs F14 : Échec du critère de succès 1.3.3 consistant à identifier un contenu seulement par sa forme ou sa position (en anglais) F26 : Échec du critère de succès 1.3.3 consistant à utiliser seulement un symbole graphique pour véhiculer une information (en anglais) ",
 href: '../module2/content-structure-fr.html#instructions'  ,
 title: "Structure du contenu – Module 2 - Structure et sémantique des pages" ,
 heading: " Instructions d’orientation"
},{
 categories: 'module2',
 content: "  Bon exemple : Hiérarchie des en-têtes Exemple d’en-têtes descriptifs suivant une hiérarchie sans sauter un niveau : HTML Début du code Principes de base de l’accessibilité du Web Qu’est-ce que l’accessibilité du Web? Types d’incapacités Cécité Lignes directrices sur l’accessibilité Règles pour l’accessibilité des contenus Web Fin du code ",
 href: '../module2/headings-fr.html#heading-hierarchy'  ,
 title: "En-têtes – Module 2 - Structure et sémantique des pages" ,
 heading: "  Bon exemple : Hiérarchie des en-têtes"
},{
 categories: 'module2',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.4.1 : Contourner des blocs 2.4.6 : En-têtes et étiquettes Techniques ARIA12 : Utiliser role=heading pour identifier des rubriques (en anglais) G130 : Fournir des en-têtes de section descriptifs (en anglais) H42 : Utiliser h1-h6 pour identifier les en-têtes de section (en anglais) H69 : Fournir des éléments d'en-têtes au début de chaque section du contenu (en anglais) ",
 href: '../module2/headings-fr.html#resources-2'  ,
 title: "En-têtes – Module 2 - Structure et sémantique des pages" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module2',
 content: "  Conception avec iFrames Les iFrames permettent aux concepteurs d’intégrer tout type de contenu provenant d’une autre page Web. Si l’iframe est composé d’images décoratives ou de JavaScript, masquez-le des lecteurs d’écran en réglant l’attribut aria-hidden='true' sur l’élément iframe. Si l’iframe contient du contenu destiné à l’utilisateur : Attribuez à l’élément iframe une valeur d’attribut de title descriptif. Assurez-vous que la valeur de l’attribut de title iframe est le même pour tous les iFrames de la page. ",
 href: '../module2/iframes-fr.html#designing-iframes'  ,
 title: "iFrames – Module 2 - Structure et sémantique des pages" ,
 heading: " Conception avec iFrames"
},{
 categories: 'module2',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.1 : Contourner des blocs 4.1.2 : Nom, rôle et valeur Techniques H64 : Utiliser l'attribut title des éléments frame et iframe (en anglais) ",
 href: '../module2/iframes-fr.html#resources-iframes'  ,
 title: "iFrames – Module 2 - Structure et sémantique des pages" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module2',
 content: "  Conception utilisant les points de repère Les points de repère, également appelés « régions de page », permettent aux utilisateurs du lecteur d’écran de repérer les sections importantes d’une page Web et de naviguer directement vers celles-ci en omettant des blocs de contenu. Lorsque vous introduisez des points de repère, assurez-vous que tout le contenu de la page est inclus dans un point de repère, car il est facile de manquer du contenu à l’extérieur d’un point de repère. Identifiez les régions de la page avec des éléments de section HTML5 ou des attributs de rôle de points de repère ARIA. Éléments de région HTML5 et attributs de rôle de points de repère ARIA équivalents Élément de section HTML5 Rôles de points de repère ARIA Région lorsqu’enfant de role='banner' Banner (En-tête) – région du haut de chaque page qui contient des renseignements comme le logo et les options de recherche et de navigation. role='contentinfo' Contentinfo (aka Footer) (informations sur le contenu, alias Pied de page) – partie inférieure de chaque page qui contient des renseignements relatifs aux droits d’auteur ou à la protection des renseignements personnels, ou les avis de non-responsabilité. role='main' Main (Contenu principal) – région du contenu principal d’une page. role='navigation' Menu de navigation role='complementary' Complementary (complémentaire) – régions qui appuient le contenu principal et qui sont distinctes et importantes, comme une note expliquant le contenu principal. n/a role='search' Search (Recherche) – région qui contient un ensemble d’éléments et d’objets qui, dans leur ensemble, se combinent pour créer une fonction de recherche. role='form' Form (Formulaire) – une région qui contient une collection d’éléments et d’objets qui, dans leur ensemble, se combinent pour créer un formulaire. lorsqu'il est nommé role='region' Region L’élément , lorsqu'il est nommé, représente une section indépendante d’un document qui n’a pas un élément sémantique plus spécifique pour le représenter. Les sections doivent toujours avoir des entêtes, sauf dans quelques exceptions. ",
 href: '../module2/landmarks-fr.html#designing-landmarks'  ,
 title: "Points de repère - Module 2 – Structure et sémantique des pages" ,
 heading: " Conception utilisant les points de repère"
},{
 categories: 'module2',
 content: "  Bon exemple : Points de repère communs Dans cet exemple, les éléments de section HTML5 définissent les points de repère, pour la plupart. L’attribut role='search' est unique et descriptif. L'exemple commence L'exemple finit HTML Début du code […] […] […] […] […] […] Fin du code Ci-dessous, le balisage HTML utilise des attributs de rôle de point de repère ARIA pour identifier les régions. HTML Début du code […] […] […] […] […] […] Fin du code ",
 href: '../module2/landmarks-fr.html#example-common-landmarks'  ,
 title: "Points de repère - Module 2 – Structure et sémantique des pages" ,
 heading: "  Bon exemple : Points de repère communs"
},{
 categories: 'module2',
 content: "  Pratiques exemplaires pour les points de repère S’assurer que tout le contenu de la page se trouve dans un point de repère. Utiliser les éléments de section HTML5 (de préférence) pour identifier les régions sur une page. Utiliser des attributs de rôle de point de repère ARIA si c’est impossible d’utiliser des éléments de section HTML5. S’assurer de la présence d’un seul cas de : comme enfant de , ou role='banner'. Un n’est pas considéré comme une bannière lorsqu’il s’agit de l’enfant de , , , ou . S’assurer que ces points de repère sont des enfants directs de : (quand il s’agit de la bannière) Limiter l’utilisation de aux navigations primaires et secondaires. Utiliser aria-label ou aria-labelledby pour différencier plusieurs éléments . Utiliser aria-labelledby l’attribut pour étiqueter une région qui commence par un élément d’en-tête. Fournir des étiquettes courtes et descriptives. Le rôle du point de repère est énoncé par un lecteur d’écran avec le nom, le cas échéant. Ne pas utiliser le rôle de point de repère (p. ex., « navigation ») dans le nom; par exemple, l’étiquette est « site » et non « navigation du site » pour un point de repère de navigation. Utiliser role='search' plutôt que role='form' lorsque le formulaire est utilisé pour la fonction de recherche. Si un élément est nommé (utilisant aria-label, aria-labelledby ou un title attribut), il sera désigné comme point de repère. Si vous utilisez role='form', fournissez un nom bref (utilisant aria-label, aria-labelledby ou un title attribut) qui décrit l’objectif du formulaire. Si un élément est nommé (utilisant aria-label, aria-labelledby ou un title attribut), il sera designé comme point de repère. Si vous utilisez role='region', fournissez un nom bref (utilisant aria-label, aria-labelledby ou un title attribut) qui décrit l’objectif du contenu dans la région. ",
 href: '../module2/landmarks-fr.html#regions-landmarks'  ,
 title: "Points de repère - Module 2 – Structure et sémantique des pages" ,
 heading: " Pratiques exemplaires pour les points de repère "
},{
 categories: 'module2',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.4.1 : Contourner des blocs 2.4.6 : En-têtes et étiquettes Techniques ARIA11 : Utiliser des repères ARIA pour identifier les zones d’une page (en anglais) ARIA6 : Utiliser aria-label pour attribuer des étiquettes aux objets (en anglais) ARIA13 : Utiliser aria-labelledby pour désigner des zones et des repères (en anglais) Pratiques d’édition ARIA Exemples de points de repère (en anglais) ",
 href: '../module2/landmarks-fr.html#resources-1'  ,
 title: "Points de repère - Module 2 – Structure et sémantique des pages" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module2',
 content: "  Langue de la page L’élément doit avoir une valeur d’attribut lang qui identifie la langue principale de la page. Sans cette valeur, le contenu de la page peut être affiché sous forme de charabia par certains lecteurs d’écran. Les utilisateurs configurent les lecteurs d’écran avec une langue par défaut et c’est cette langue qui est utilisée pour lire une page s’il manque un attribut lang à l’élément. Par exemple, le lecteur d’écran d’un utilisateur francophone tentera de lire une page sans attribut lang en français, même si elle est rédigée en anglais. C’est un problème pour les utilisateurs de lecteurs d’écran qui comprennent plusieurs langues et qui consultent des sites Web rédigés dans toutes ces langues. Suivez les pratiques exemplaires suivantes pour la langue de la page : Ajouter un attribut langà l’élément pour définir la langue par défaut pour toute la page. Pour l’anglais : Pour le français : Pour les autres langues, choisir le code de langue approprié à partir de la norme ISO-639. Utiliser le code de langue le plus court. Language Codes - Free Pascal wiki Utiliser un code de trois lettres si aucun autre code n’est disponible. Code à 3 lettres SO 639-2. Vous pouvez ajouter une étiquette secondaire de région si vous avez besoin d'indiquer qu'il s'agit de la langue telle qu'elle est parlée quelque part dans une région particulière ; par exemple, lang='fr-CA' indique le français tel qu'il est parlé au Canada. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.1.1 : Langue de la page Techniques H57 : Utiliser les attributs de langue dans l'élément html (en anglais) ",
 href: '../module2/language-fr.html#language'  ,
 title: "Langue – Module 2 - Structure et sémantique des pages" ,
 heading: " Langue de la page"
},{
 categories: 'module2',
 content: "  Langue de passages Quand toute partie d’une page n’est pas rédigée dans la langue principale de la page, il faut préciser la langue dans laquelle elle est rédigée. Régler l’attribut lang sur l’élément parent du texte, avec une valeur indiquant la langue du passage. L’identification des changements de langue est importante pour certaines raisons: Elle permet au logiciel de traduction en braille de suivre les changements de langue. Les synthétiseurs de la parole qui prennent en charge plusieurs langues pourront énoncer le texte avec l’accent approprié et la prononciation appropriée. Exemples Une phrase en allemand dans un document en anglais : HTML Début du code [...] Il a soutenu que la RDA (République démocratique allemande) n’était qu’une Treppenwitz der Weltgeschichte. Fin du code Autres liens linguistiques (par exemple, une page Web HTML comprend des liens vers des versions de la page publiées dans d’autres langues [allemand, français, etc.]) : HTML Début du code Allemand Français Fin du code Suivez les pratiques exemplaires suivantes pour la langue des passages: Insérer les attributs lang où la langue par défaut change. XHTML doit utiliser l’attributlang et l’attribut xml:lang. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.1.2 : Langue d'un passage Techniques H58 : Utiliser les attributs de langue pour identifier les changements de langue (en anglais) ",
 href: '../module2/language-fr.html#language-of-parts'  ,
 title: "Langue – Module 2 - Structure et sémantique des pages" ,
 heading: " Langue de passages"
},{
 categories: 'module2',
 content: "  Conception avec des listes Lorsqu'un lecteur d'écran rencontre une liste, il énonce l'information utile que les utilisateurs voyants captent d'un coup d'oeil : la présence d'une liste et le nombre d'éléments de la liste. Toutefois, pour être reconnaissable et navigable par les utilisateurs du lecteur d'écran, la liste doit utiliser le balisage sémantique approprié. HTML fournit trois structures de liste, chacune comportant une sémantique spécifique: Utiliser des listes non ordonnées () lorsque l'ordre des éléments n'est pas pertinent. Chaque élément de liste () dans une liste non ordonnée est marqué d'une puce. Utiliser les listes ordonnées () pour l'information séquentielle. Chaque élément de liste () est numéroté par le navigateur. Utiliser les listes de descriptions () pour regrouper les termes associés() et leurs descriptions (). Les éléments de liste individuels peuvent contenir divers éléments HTML, y compris des paragraphes, des en-têtes, des éléments de forme et d'autres listes (imbriquées) – tout type de contenu de flux. Évitez d'imbriquer plusieurs éléments enfants dans chaque élément de la liste, puisque les utilisateurs du lecteur d'écran peuvent perdre le fil de la liste elle-même. Les listes non-ordonnées sont d'habitude utilisées pour contenir des menus horizontaux et verticaux (pour la navigation, les médias sociaux et puis n'importe quelle liste de liens). Les listes ordonnées sont souvent utilisées pour la navigation. ",
 href: '../module2/lists-fr.html#designing-lists'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Conception avec des listes"
},{
 categories: 'module2',
 content: "  Liste non ordonnée La liste non ordonnée comprend un élément et plusieurs éléments de liste (): L'exemple commence Maïs Tomates Haricots Oignons Ail L'exemple finit HTML Début du code Maïs Tomates Haricots Oignons Ail Fin du code ",
 href: '../module2/lists-fr.html#unordered-list'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Liste non ordonnée"
},{
 categories: 'module2',
 content: "  Liste ordonnée La liste ordonnée comprend un élément et plusieurs éléments de liste (): Utilisez des listes ordonnées () pour des renseignements séquentiels, lorsque l'ordre des éléments est pertinent. Chaque élément de liste () est numéroté par le navigateur. L'exemple commence Cuire les haricots pendant 45 minutes. Couper les légumes en petits cubes. Faire sauter les oignons et l'ail. Déglacer avec les tomates. Ajouter le maïs et les haricots. L'exemple finit HTML Début du code Cuire les haricots pendant 45 minutes. Couper les légumes en petits cubes. Faire sauter les oignons et l'ail. Déglacer avec les tomates. Ajouter le maïs et les haricots. Fin du code ",
 href: '../module2/lists-fr.html#ordered-list'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Liste ordonnée"
},{
 categories: 'module2',
 content: "  Listes imbriquées Chaque liste peut être imbriquée dans une autre liste. Dans l'exemple suivant, l'ordre de préparation n'est pas critique, mais la préparation elle-même doit être effectuée avant d'utiliser les ingrédients. L'information est encore facile à assimiler, et la technologie d'assistance peut facilement informer les utilisateurs du nombre d'étapes. L'exemple commence Préparer les ingrédients Cuire les haricots pendant 45 minutes. Couper les légumes en petits cubes. Faire sauter les oignons et l'ail. Déglacer avec les tomates. Ajouter le maïs et les haricots L'exemple finit HTML Début du code Préparer les ingrédients Cuire les haricots pendant 45 minutes. Couper les légumes en petits cubes. Faire sauter les oignons et l'ail. Déglacer avec les tomates. Ajouter le maïs et les haricots. Fin du code ",
 href: '../module2/lists-fr.html#nested-lists'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Listes imbriquées"
},{
 categories: 'module2',
 content: "  Liste de descriptions Une liste de descriptions comprend un ou plusieurs groupes de termes et de descriptions. Chaque regroupement associe un ou plusieurs termes (le contenu des éléments ) à une ou plusieurs descriptions (le contenu des éléments ). Un regroupement commence soit avec le premier élément de la liste, soit chaque fois qu'un élément suit un élément . Bon exemple 1 : Un terme, plusieurs descriptions Dans l'exemple qui suit, John et Luke sont décrits comme auteurs et Frank comme éditeur. L'exemple commence Auteurs John Luke Éditeur Frank L'exemple finit HTML Début du code Auteurs John Luke Éditeur Frank Fin du code CSS Début du code dt { font-weight: 700; } dd { margin-left: 30px; } Fin du code Bon exemple 2 : Termes multiples, une description Dans cet exemple, Ian est à la fois producteur et réalisateur. L'exemple commence Producteur Réalisateur Ian Écrivaine Annie L'exemple finit HTML Début du code Producteur Réalisateur Ian Écrivaine Annie Fin du code CSS Début du code dt { font-weight: 700; } dd { margin-left: 30px; } Fin du code Bon exemple 3 : Termes multiples, descriptions multiples Dans cet exemple, John et Luke sont des auteurs et également des éditeurs : L'exemple commence Auteurs Éditeurs John Luke L'exemple finit HTML Début du code Auteurs Éditeurs John Luke Fin du code CSS Début du code dt { font-weight: 700; } dd { margin-left: 30px; } Fin du code Bon exemple 4 : Liste de description comme une liste de dfinition Lorsque vous utilisez une liste de description pour définir des termes, immergez le terme dans un fichier de type d'élément . Dans l'exemple suivant, deux variantes orthographiques d'un mot sont définies. L'exemple commence color colour A sensation which (in humans) derives from the ability of the fine structure of the eye to distinguish three differently filtered analyses of a view. L'exemple finit HTML Début du code color colour A sensation which (in humans) derives from the ability of the fine structure of the eye to distinguish three differently filtered analyses of a view. Fin du code CSS Début du code dt { font-weight: 700; } dd { margin-left: 30px; } Fin du code ",
 href: '../module2/lists-fr.html#description-list'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Liste de descriptions"
},{
 categories: 'module2',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H48 : Utiliser ol, ul et dl pour les listes (en anglais) La description des trois types de liste est tirée du document Initiative d'accessibilité du Web (WAI): Structure du contenu (WAI) dans Tutoriel sur la structure des pages de Tutoriels sur l'accessibilité du Web.. Eric Eggert, Shadi Abou-Zahra, éd. Copyright © 2019 W3C (MIT, ERCIM, Keio). État d'avancement : Mise à jour le 27 juillet 2019. https://www.w3.org/WAI/tutorials/page-structure/content/ ",
 href: '../module2/lists-fr.html#resources-6'  ,
 title: "Listes - Module 2 - Structure et sémantique des pages" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module2',
 content: "  Aperçu – Analyse syntaxique et validité Les agents utilisateurs, y compris les navigateurs et les technologies d’assistance, doivent interpréter et analyser le contenu avec précision. Les défauts de balisage peuvent faire en sorte que les agents utilisateurs ne parviennent pas à analyser ou à présenter le contenu différemment. Le critère de succès 4.1.1 des WCAG – Analyse syntaxique (niveau A) précise quatre exigences en matière de balisage : les éléments ont des balises de début et de fin complètes; les éléments sont imbriqués selon leurs spécifications; les éléments ne contiennent pas d’attributs en double; tous les identificateurs sont uniques. Validez le balisage à l’aide d’un outil comme le service de validation du balisage W3C. Les rapports de validation détectent généralement les défauts de chaque exigence. Les conséquences sur l’éventail d’accessibilité vont de minimales à graves. La plupart des navigateurs modernes réparent les balises de début ou de fin incomplètes, les imperfections et les attributs en double. Toutefois, les valeurs d’attribut d’identification en double peuvent amener un lecteur d’écran à faire des associations incorrectes entre des éléments, comme une étiquette ou une description erronée. ",
 href: '../module2/parsing-and-validity-fr.html#parsing'  ,
 title: "Analyse syntaxique et validité – Module 2 - Structure et sémantique des pages" ,
 heading: " Aperçu – Analyse syntaxique et validité"
},{
 categories: 'module2',
 content: "  Les éléments ont des balises de début et de fin complètes Les balises doivent contenir tous les caractères requis par la syntaxe HTML, par exemple, les balises de début consistent en un nom d’élément entouré des caractères « inférieur à » et « supérieur à » : dans les balises de fermeture, il faut ajouter une barre oblique inverse : ",
 href: '../module2/parsing-and-validity-fr.html#elements-tags'  ,
 title: "Analyse syntaxique et validité – Module 2 - Structure et sémantique des pages" ,
 heading: " Les éléments ont des balises de début et de fin complètes"
},{
 categories: 'module2',
 content: "  Les éléments sont imbriqués selon leurs spécifications Les éléments ayant une relation parent-enfant sont nettement imbriqués, les balises de début et de fin de l’élément enfant étant complètement à l’intérieur des balises de début et de fin de l’élément parent. Bon exemple : Les balises de début et de fin d’éléments de la liste se trouvent à l’intérieur des balises de la liste parent HTML Début du code aïs Tomates Haricots Fins de code Bon exemple : Les balises d’un élément fort inclus par référence sont entièrement emboîtées à l’intérieur des balises du paragraphe parent HTML Début du code Important: Verrouillez la porte en partant. Fins de code Mauvais exemple : Liste défectueuse Les « éléments de liste sans élément de liste parent » et les « éléments de texte sans élément de liste parent » sont relevés par le validateur W3C. HTML Début du code En-tête avec toutes les balises nécessaires Paragraphe avec toutes les balises nécessaires Paragraphe sans balise finale (valide en HTML5) Élément de liste dans élément de liste parent Texte sans élément de liste parent Fins de code ",
 href: '../module2/parsing-and-validity-fr.html#elements-specifications'  ,
 title: "Analyse syntaxique et validité – Module 2 - Structure et sémantique des pages" ,
 heading: " Les éléments sont imbriqués selon leurs spécifications"
},{
 categories: 'module2',
 content: "  Les éléments ne contiennent pas d’attributs en double Assurez-vous qu’aucun attribut ne se retrouve plus d’une fois sur un élément. ",
 href: '../module2/parsing-and-validity-fr.html#elements-attributes'  ,
 title: "Analyse syntaxique et validité – Module 2 - Structure et sémantique des pages" ,
 heading: " Les éléments ne contiennent pas d’attributs en double"
},{
 categories: 'module2',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 4.1.1 : Analyse syntaxique Techniques H74 : S'assurer que les balises d'ouverture et de fermeture sont utilisées conformément aux spécifications (en anglais) H93 : S'assurer que les attributs id sont uniques sur une page Web (en anglais) H94 : S'assurer que les éléments ne contiennent pas d'attributs dupliqués (en anglais) H75 : S'assurer que les pages Web sont bien formées (en anglais) ",
 href: '../module2/parsing-and-validity-fr.html#resources-7'  ,
 title: "Analyse syntaxique et validité – Module 2 - Structure et sémantique des pages" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module3',
 content: "  Liens Fonction du lien Fournir le lien du texte de lien qui indique la fonction du lien sans ajout de contexte additionnel. Si le texte du lien n’est pas autodescriptif, assurez-vous que le contexte du lien décrit la fonction du lien. Ne pas utiliser de texte de lien vide comme “Cliquer ici” ou “Lire plus” etc. Faire la distinction entre les liens dont le texte est identique, mais dont les destinations sont différentes soit en reformulant le texte du lien, utilisant une étiquette ARIA, ou ajoutant du texte visuellement caché au texte du lien. Activation du lien Les liens personnalisés ont besoin de tabindex='0' pour recevoir la cible du clavier et un événement onkeypress pour être activé par la touche Entrée. Le nom visible d’un lien correspond au nom accessible du lien ou est y inclus. Indicateur visuel de la cible Les liens doivent avoir un état de cible visible. Distinguer les liens du texte Assurez-vous que les liens comportent des indicateurs visuels pour permettre aux utilisateurs de les identifier rapidement. La couleur ne doit pas être le seul moyen de différencier un lien du texte ordinaire. Accompagnez la couleur d’un autre indice visuel (p. ex. soulignement, italique, gras) pour différencier le texte du lien du texte ordinaire. Le lien s'ouvre dans une nouvelle fenêtre En général, évitez d’ouvrir des liens dans une nouvelle fenêtre. Lorsque les liens s’ouvrent dans une nouvelle fenêtre, avertissez les utilisateurs. ",
 href: '../module3/best-practice-mod-3-fr.html#links'  ,
 title: "Pratique exemplaire – Module 3 - Liens et navigation" ,
 heading: " Liens"
},{
 categories: 'module3',
 content: "  Navigation Blocs de navigation Identifiez les blocs de navigation importants au moyen de l’élément ou de l'attribut role='navigation'. Lorsqu’il y a deux régions de navigation ou plus sur la page, nommez chaque région avec aria-label ou aria-labelledby pour les différencier. Indiquez visuellement l’emplacement actuel en utilisant CSS, et sémantiquement, en utilisant aria-current='page' l’attribut. Liens de saut navigation Placez le lien de saut de navigation au haut de la page avant tout autre élément ciblable (lien, bouton ou commande personnalisée). Le lien de saut n’a pas besoin d’être visible avant d’avoir reçu la cible. Utilisez un texte de lien clair – p. ex. “Passer au contenu principal” ou “Passer au contenu” Utilisez un lien de même page en ciblant la valeur de l’attribut d'identification de la destination (habituellement l’élément . Attribuez l'attributtabindex='-1' à la destination. Cela corrige les lacunes de certains navigateurs qui déplacent la fenêtre d'affichage vers la destination, mais pas vers la cible. Ne masquez pas le lien de saut en utilisant l’une des options suivantes: Utiliser CSS pour positionner de façon permanente l’écran de renvoi Régler display: none Régler visibility: invisible Accès multiples Fournir plus d’une façon de localiser une page Web dans un ensemble de pages Web. Utiliser au moins deux des techniques suivantes : Fournir des liens de navigation vers les pages Web reliées (en anglais) Fournir une table des matières (en anglais) Fournir un plan du site (en anglais) Fournir une fonction de recherche pour aider l'utilisateur à trouver le contenu (en anglais) Fournir une liste de liens vers toutes les autres pages Web (en anglais) Fournir des liens vers toutes les autres pages du site à partir de la page d'accueil (en anglais) Table des matières S’assurer que la table des matières reflète la hiérarchie des en-têtes du document. S’assurer que chaque sujet de la table des matières est lié à l’endroit approprié. Cible et ordre de cible Assurez un ordre de tabulation significatif en positionnant le contenu ciblable dans la même séquence que le code sous-jacent. S’assurer que l’ordre de navigation au clavier est logique et intuitif. Habituellement, cela signifie qu’il faut s’assurer que la navigation suit le flux visuel de la page, de gauche à droite, de haut en bas. Il passe par la bannière, la navigation principale, la navigation et les commandes des pages, puis le pied de page d’une page type. Éviter d’utiliser des valeurs tabindex supérieures à 0. Raccourcis clavier de caractères Critère de succès 2.1.4 : Si un raccourci clavier est utilisé dans un contenu utilisant uniquement des lettres (y compris des majuscules et des minuscules), des signes de ponctuation, des chiffres ou des symboles, au moins un des énoncés suivants est vrai : Désactiver Un mécanisme permet de désactiver le raccourci; Remapper Un mécanisme permet de remapper le raccourci pour y inclure une ou plusieurs touches de clavier non imprimables (p. ex., Ctrl, Alt); Actif seulement sur la cible Le raccourci clavier d’un composant d’interface utilisateur n’est actif que lorsque ce composant a une cible. ",
 href: '../module3/best-practice-mod-3-fr.html#navigation'  ,
 title: "Pratique exemplaire – Module 3 - Liens et navigation" ,
 heading: " Navigation"
},{
 categories: 'module3',
 content: "  Changement de contexte Dans la mesure du possible, donner à l’utilisateur le contrôle des changements de contexte au moyen d’une action explicite de l’utilisateur généralement connue pour provoquer un changement de contexte; p. ex., cliquer sur un lien ou appuyer sur un bouton de validation. Les changement de contexte : ne doivent jamais être déclenchés sur la cible doivent être anticipés par l’utilisateur s’ils sont déclenchés par la modification du paramètre d’une commande (à la saisie). ",
 href: '../module3/best-practice-mod-3-fr.html#context'  ,
 title: "Pratique exemplaire – Module 3 - Liens et navigation" ,
 heading: " Changement de contexte"
},{
 categories: 'module3',
 content: "  Cohérence Navigation cohérente D’une page à l’autre, l’ordre relatif des composants de la page et des liens dans les blocs de navigation devrait demeurer inchangé. D’autres composants ou liens peuvent être retirés ou insérés, mais l’ordre relatif doit demeurer le même. Identification cohérente D’une page à l’autre, les composantes fonctionnelles identiques doivent être nommées de façon uniforme. Par exemple, une vignette nommée « Rechercher » sur une page est nommée « Rechercher » sur les autres pages et non, comme c’est le cas parfois, « Trouver ». Cela inclut le texte alt des icônes et autres éléments non textuels ayant une fonctionnalité identique. ",
 href: '../module3/best-practice-mod-3-fr.html#consistency'  ,
 title: "Pratique exemplaire – Module 3 - Liens et navigation" ,
 heading: " Cohérence"
},{
 categories: 'module3',
 content: "  Navigation cohérente D’une page à l’autre, l’ordre relatif des composants de la page et des liens dans les blocs de navigation devrait demeurer inchangé. D’autres composants ou liens peuvent être retirés ou insérés, mais l’ordre relatif doit demeurer le même. S’assurer que les composants et les liens répétés se présentent dans le même ordre sur chaque page aide les utilisateurs à prévoir où ils peuvent trouver des choses. Cela aide les utilisateurs ayant des limitations cognitives, une vision faible, une déficience intellectuelle, ainsi que les utilisateurs aveugles. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.2.3 : Navigation cohérente Techniques G61 : Présenter dans le même ordre relatif les composants répétés chaque fois qu'ils apparaissent (en anglais) Échecs F66 : Échec du critère de succès 3.2.3 consistant à présenter les liens de navigation dans un ordre relatif différent sur différentes pages (en anglais) ",
 href: '../module3/consistency-fr.html#cons-nav'  ,
 title: "Cohérence - Module 3 – Liens et navigation" ,
 heading: " Navigation cohérente"
},{
 categories: 'module3',
 content: "  Identification cohérente D’une page à l’autre, les composantes fonctionnelles identiques doivent être nommées de façon uniforme. Par exemple, une vignette nommée « Rechercher » sur une page est nommée « Rechercher » sur les autres pages et non, comme c’est le cas parfois, « Trouver ». Si des fonctions identiques ont des noms différents sur différentes pages Web, le site sera beaucoup plus difficile pour les utilisateurs de lecteurs d’écran et les utilisateurs ayant des limitations cognitives. Le besoin de la cohérence s’étend à équivalents textuels; par exemple, si des icônes ou d’autres éléments non textuels ont la même fonctionnalité, leurs équivalents textuels devraient être également uniformes. L'exemple commence Icônes et texte optionnel avant et après correction Page Avant (différentes icônes, différents équivalents textuels) Après (même icône, même équivalent textuel) 1 alt='Document Word' alt='Document PDF' alt='Document Word' alt='Document PDF' 2 alt='télécharger le document' alt='télécharger le fichier Adobe' alt='Document Word' alt='Document PDF' 3 alt='Obtenir la version Word' alt='obtenir la version PDF' alt='Document Word' alt='Document PDF' L'exemple finit Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.2.4 : Identification cohérente Techniques G197 : Utiliser les étiquettes, les noms et les équivalents textuels de façon cohérente pour des contenus ayant la même fonctionnalité (en anglais) Échecs F31 : Échec du critère de succès 3.2.4 consistant à utiliser deux étiquettes différentes pour la même fonction dans des pages différentes d'un même ensemble de pages Web (en anglais) ",
 href: '../module3/consistency-fr.html#cons-ident'  ,
 title: "Cohérence - Module 3 – Liens et navigation" ,
 heading: " Identification cohérente"
},{
 categories: 'module3',
 content: "  Les changements de contexte sont prévisibles Lorsque les actions d’un utilisateur apportent de façon inattendue un changement majeur à une page Web, connu sous le nom de changement de contexte, cela peut désorienter les utilisateurs qui ne sont pas en mesure de voir la page entière simultanément ou qui sont facilement distraits par les changements. Les changements inattendus de contexte ont une incidence sur les utilisateurs ayant des déficiences motrices, sur les utilisateurs ayant une basse vision qui agrandissent l’écran, sur les utilisateurs aveugles et sur les utilisateurs ayant certaines limitations cognitives. Un changement de contexte comprend les changements suivants : agent utilisateur Logiciel qui récupère et présente du contenu, p. ex., un navigateur Web, un lecteur de médias, un plugiciel ou un autre programme incluant des technologies d’assistance. Un agent utilisateur totalement distinct, comme un programme de visualisation externe, s’ouvre. Viewport Le contenu apparaît dans une ou plusieurs zones d’affichage. Cela comprend les fenêtres du navigateur, les onglets du navigateur, les cadres, les haut-parleurs et les loupes virtuelles. Habituellement, une nouvelle fenêtre s’ouvre. Cible La cible désigne la commande interactive à l’écran -- un lien, une commande de formulaire, un bouton ou une commande personnalisée -- qui reçoit des entrées du clavier (et du presse-papiers lorsque vous collez du contenu). La cible de l’utilisateur se déplace de façon inattendue vers une partie différente de la page Web actuelle. Contenu qui change la signification de la page Web Cela comprend le réagencement important du contenu d’une page. Comme il est expliqué dans les sections suivantes, les changements de contexte ne doivent jamais être déclenchés sur la cible, et doivent être anticipés par l’utilisateur s’ils sont déclenchés par la modification du paramètre d’une commande (à la saisie). ",
 href: '../module3/context-fr.html#predictable'  ,
 title: "Changement de contexte - Module 3 – Liens et navigation" ,
 heading: " Les changements de contexte sont prévisibles"
},{
 categories: 'module3',
 content: "  Sur la cible Les utilisateurs du clavier naviguent d’un item interactif à un item interactif à l’aide de la touche de tabulation, déplaçant la cible d’un item à l’autre. Une composante qui déclenche un événement lorsqu’elle reçoit une cible de saisie ne doit pas changer le contexte. Par exemple, une commande qui reçoit une cible de saisie ne doit pas déclencher de changements de contexte, par exemple : Déclencher la soumission automatique d’un formulaire Déclencher l'ouverture d’une nouvelle fenêtre Déclencher la modification de la cible pour une autre commande L’objectif de conception est la prévisibilité. Donner à l’utilisateur le contrôle des changements de contexte au moyen d’une action explicite de l’utilisateur généralement connue pour provoquer un changement de contexte; p. ex., cliquer sur un lien ou appuyer sur un bouton de validation. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.2.1: Au focus Techniques G107 : Utiliser activate au lieu de focus comme déclencheur pour un changement de contexte (en anglais) Échecs F55 : Échec du critère de succès 2.1.1, 2.4.7 et 3.2.1 consistant à utiliser un script pour enlever le focus lorsque le focus est reçu (en anglais) ",
 href: '../module3/context-fr.html#onfocus'  ,
 title: "Changement de contexte - Module 3 – Liens et navigation" ,
 heading: " Sur la cible"
},{
 categories: 'module3',
 content: "  Lors de la saisie La modification du paramètre d’un composant d’interface utilisateur ne doit pas provoquer un changement de contexte. Les exemples de modification d’un paramètre englobent le fait de cocher une case, la saisie de texte dans une zone de texte ou la modification de l’option sélectionnée dans un élément. Le fait de cliquer sur des liens ou des onglets dans une commande d’onglets active la commande; cela ne modifie pas le paramètre de cette commande. Encore une fois, l’objectif de conception est la prévisibilité. Il y a deux options : Donner à l’utilisateur le contrôle sur les changements de contexte au moyen d’une action explicite de l’utilisateur généralement connue pour provoquer un changement de contexte; p. ex., cliquer sur un lien ou appuyer sur un bouton de validation. Décrire à l’utilisateur la façon dont l’interaction avec la commande modifie le contexte avant que la commande ne soit présentée. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.2.2 : À la saisie Techniques G80 : Fournir un bouton de soumission pour initier un changement de contexte (en anglais) H32 : Fournir un bouton submit (en anglais) H84 : Utiliser un bouton avec un élément select pour déclencher une action (en anglais) G13 : Décrire ce qui va se produire avant qu'une modification sur un élément de contrôle de formulaire ne cause un changement de contexte (en anglais) SCR19 : Utiliser un événement onchange sur un élément select sans causer de changement de contexte (en anglais) Échecs F36 : Échec du critère de succès 3.2.2 consistant à soumettre automatiquement un formulaire et à présenter un nouveau contenu sans avertissement préalable lorsque le dernier champ d'un formulaire reçoit une valeur (en anglais) F37 : Échec du critère de succès 3.2.2 consistant à ouvrir une nouvelle fenêtre sans avertissement préalable lorsque l'état d'un bouton radio, d'une case à cocher ou d'une zone de liste déroulante est changé (en anglais) ",
 href: '../module3/context-fr.html#oninput'  ,
 title: "Changement de contexte - Module 3 – Liens et navigation" ,
 heading: " Lors de la saisie"
},{
 categories: 'module3',
 content: "  Fonction du lien Les lecteurs d’écran permettent aux utilisateurs de parcourir des liens sur une page, en passant de l’un à l’autre sans déclarer le texte avoisinant. Dans la mesure du possible, fournir le texte du lien qui indique la fonction du lien sans avoir besoin de contexte supplémentaire. Selon le Guide de rédaction du contenu de Canada.ca, « Vos liens devraient être descriptifs et pouvoir être autonomes afin que les gens sachent à quoi s’attendre s’ils cliquent dessus. » Les personnes ayant une déficience visuelle peuvent également déterminer la fonction d’un lien en explorant le contexte du lien. S’il est impossible de rédiger un texte de lien autonome, assurez-vous que le texte de lien indique sa fonction en combinaison avec l’un des éléments suivants : La phrase qui accompagne; La liste de pièces jointes; Le paragraphe joint; La cellule de tableau jointe et la cellule d’en-tête de tableau; L'élément de liste parent d’une liste imbriquée (l’exemple suit). Ne pas utiliser de texte de lien vide comme « Cliquer ici » ou « Lire plus », etc. Si deux liens ou plus sur la même page ont un texte de lien identique, mais des destinations différentes, vous pouvez les distinguer de trois façons: Reformuler le texte du lien. Utiliser une étiquette ARIA (l’attribut aria-label ou aria-labelledby). L’étiquette ARIA remplace le texte du lien natif dans la technologie d’assistance. Assurez-vous d’inclure le texte visible du lien dans l’étiquette ARIA pour que les utilisateurs puissent cibler le lien (voir Activation du lien, ci-dessous). Ajouter du texte visuellement caché au texte du lien (l’exemple suit). Lien et bouton Les développeurs confondent souvent les rôles des liens et des boutons, ce qui transmet la confusion aux utilisateurs des lecteurs d’écran. Les utilisateurs s’attendent à ce que les liens naviguent (d’une page à l’autre ou à l’intérieur d’une page) et à ce que les boutons déclenchent un effet local (ou soumettent un formulaire). L’utilisateur d’un lecteur d’écran peut être désorienté lorsqu’il active un bouton et navigue plutôt vers une nouvelle page ou lorsqu’il active un lien et interprète plutôt un effet de bouton local. Mauvais exemple : Texte vague du lien Dans cet exemple, le texte du lien « la quantité » ne communique rien d’utile : L'exemple commence Une portion du Guide alimentaire est simplement une quantité de référence. Elle vous aide à comprendre la quantité recommandée chaque jour pour les quatre groupes alimentaires. Dans certains cas, une portion du Guide alimentaire peut se rapprocher de ce que vous mangez, comme une pomme. Dans d’autres cas, comme le riz ou les pâtes, vous pouvez vous servir davantage que la portion du Guide alimentaire. L'exemple finit Bon exemple : Texte de lien descriptif Dans cet exemple, la fonction du lien est parfaitement claire. L'exemple commence Le Guide alimentaire sert à déterminer la quantité d’aliments que vous devriez consommer chaque jour dans chacun des quatre groupes alimentaires. Dans certains cas, une portion correspond à la quantité d’un groupe alimentaire donné que vous consommez normalement en une seule fois, comme une pomme. Dans d’autres cas, la quantité quotidienne représente plus d’une portion, comme pour le riz ou les pâtes. Nombre de portions alimentaires quotidiennes pour les enfants, les adolescents et les adultes L'exemple finit Bon exemple : Utilisation d'aria-label pour la fonction du lien Dans cet exemple, le texte du lien visible « Accès » est répété pour chaque ressource. Lorsqu’il n’y a pas de texte de lien visible en double, vous pouvez distinguer chaque cas avec l’attribut aria-label. HTML Début du code Outils et ressources Planification d’événements virtuels accessibles – Aide-mémoire [Description de la ressource] Accès Réseau des employés handicapés (REH) [Description de la ressource] Accès Fin du code Bon exemple : Utilisation d’aria-labelledby pour la fonction du lien Encore une fois, le texte du lien visible « Accès » est répété pour chaque ressource. Vous pouvez distinguer chaque cas avec l’attribut aria-labelledby en pointant vers une ou plusieurs valeurs d’attribut d'identification des éléments contenant l’étiquette désirée. Dans cet exemple, l’étiquette concatène le texte du lien + l’en-tête précédent. Veuillez noter qu’une instance du texte du lien « Accès » avec un attribut d'identification peut être référencée par plusieurs étiquettes ARIA, ce qui peut être plus pratique que la création d’un attribut d'identification pour chaque instance du lien « Accès ». HTML Début du code Outils et ressources lanification d’événements virtuels accessibles – Aide-mémoire [Description de la ressource] Accès Réseau des employés handicapés (REH) [Description de la ressource] Accès Fin du code Bon exemple : Utilisation de texte visuellement masqué pour la fonction du lien Dans cet exemple, le texte du lien en double « Access » est étendu avec du texte qui a été visuellement masqué au moyen de la méthode « clip » CSS. Le texte est invisible, mais il se trouve toujours en langage HTML, de même que la technologie d’assistance. HTML Début du code Outils et ressources Planification d’événements virtuels accessibles – Aide-mémoire [Description de la ressource] Accès Planification d’événements virtuels accessibles – Aide-mémoire ERéseau des employés handicapés (REH) [Description de la ressource] Accès Réseau des employés handicapés Fin du code CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.4 : Fonction du lien (selon le contexte) 2.4.9 : Fonction du lien (lien uniquement) Techniques G91 : Fournir un intitulé de lien qui décrit la fonction du lien (en anglais) G53 : Identifier la fonction d'un lien en combinant l'intitulé du lien avec le texte de la phrase qui contient ce lien (en anglais) H30 : Fournir un intitulé de lien qui décrit la fonction du lien pour un élément anchor (en anglais) H77 : Identifier la fonction du lien en combinant l'intitulé du lien avec l'item de liste contenant ce lien (en anglais) H78 : Identifier la fonction du lien en combinant le texte du lien avec le paragraphe contenant ce lien (en anglais) H79 : Identifier la fonction du lien en combinant l'intitulé du lien avec la cellule de tableau contenant ce lien associée avec les cellules d'en-têtes du tableau (en anglais) H81 : Identifier la fonction du lien dans une liste imbriquée en combinant l'intitulé du lien avec l'item de liste parent sous lequel la liste est imbriquée (en anglais) ARIA7 : Utiliser aria-labelledby pour la fonction du lien (en anglais) ARIA8 : Utiliser aria-label pour la fonction du lien (en anglais) C7 : Utiliser les CSS pour masquer une partie du texte du lien (en anglais) Échecs F84 : Échec du critère de succès 2.4.9 consistant à utiliser un lien non spécifique comme « Cliquer ici » ou « Plus » sans mécanisme pour changer le texte du lien pour un texte spécifique (en anglais) F89 : Échec du critère de succès 2.4.4, 2.4.9 et 4.1.2 consistant à utiliser un attribut alt vide pour une image qui est le seul contenu d'un lien (en anglais) ",
 href: '../module3/links-fr.html#link-purpose'  ,
 title: "Liens – Module 3 - Liens et navigation" ,
 heading: " Fonction du lien"
},{
 categories: 'module3',
 content: "  Activation du lien Certaines personnes en situation de handicap ne sont pas en mesure d’utiliser une souris et utilisent plutôt des mécanismes comme le clavier, la reconnaissance vocale et d’autres dispositifs de pointage pour naviguer et interagir avec le Web. Assurez-vous que les liens (ainsi que les boutons et autres commandes) sont réglables et utilisables au moyen d’un clavier et d’une saisie vocale, et non seulement à l’aide d’une souris. Les liens natifs sont activés au clavier en appuyant sur la touche Entrée. Si vous concevez un lien personnalisé en utilisant l’attribut ARIA role=”link” et un élément div ou span, assurez-vous d'inclure : Un attribut tabindex='0', de sorte que le lien personnalisé reçoit la cible du clavier au moyen de la touche Tab. Un auditeur d’événement JavaScript pour la touche Entrée pour l'activation, en plus du clic de souris. Pour activer un lien en utilisant la saisie vocale, l’utilisateur déclare que le nom du lien est visible. Lorsque vous utilisez aria-label ou aria-labelledby pour nommer un lien, assurez-vous que le texte visible du lien correspond à l’étiquette ARIA ou qu'il est inclus dans celle-ci. Sinon, les utilisateurs de saisies vocales ne pourront pas cibler le lien par son nom, ce qui les obligera à passer à des techniques moins efficaces pour activer le lien. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.1.1 : Clavier 2.5.3 : Étiquette dans le nom (en anglais) Techniques G202 : Garantir le contrôle par le clavier pour toutes les fonctionnalités (en anglais) G90 : Fournir des événements déclenchés au clavier (en anglais) SCR20 : Utiliser à la fois des fonctions au clavier et spécifiques à d'autres périphériques (en anglais) SCR35 : Rendre les actions au clavier accessibles en utilisant l'événement onclick sur les liens et les boutons (en anglais) SCR2 : Utiliser des événements redondants au clavier et à la souris (en anglais) G208 : Inclure le texte de l’étiquette visible dans le nom accessible (en anglais) G211 : Faire correspondre le nom accessible avec l’étiquette visible (en anglais) Échecs F54 : Échec du critère de succès 2.1.1 consistant à utiliser seulement des événements au pointeur (y compris par geste) pour une fonction (en anglais) F42 : Échec du critère de succès 1.3.1 et 2.1.1 consistant à utiliser des événements de scripts pour émuler des liens d'une manière qui n'est pas déterminable par un programme informatique (en anglais) ",
 href: '../module3/links-fr.html#link-activation'  ,
 title: "Liens – Module 3 - Liens et navigation" ,
 heading: " Activation du lien"
},{
 categories: 'module3',
 content: "  Indicateur visuel de la cible Pour les utilisateurs du clavier seulement, le suivi visuel de l’endroit où ils se trouvent dans une page peut être difficile. Les utilisateurs de souris peuvent parcourir la page et recevoir deux indices au sujet des éléments exploitables : la flèche de la souris se transforme en une main lorsque le curseur passe au-dessus d’un élément pouvant être exploité, et l’élément affiche son état « survol » pour indiquer qu’il est accessible (p. ex., un soulignement apparaît sous un lien). Habituellement, les utilisateurs du clavier appuient sur la touche Tab pour naviguer dans les éléments interactifs d’une page Web (liens, boutons, champs de formulaire, commandes personnalisées). La tabulation vers un élément lui donne la « cible » du clavier, auquel moment il peut être activé avec le clavier. Voir la section Cible et ordre de cible plus loin dans ce module. Les utilisateurs de clavier voyants ont besoin d’une rétroaction visible de l’état de la cible d'une commande. Les navigateurs Web fournissent un indicateur visuel de la cible par défaut qui varie en apparence selon le navigateur, mais qui consiste habituellement en une bordure ou un contour autour de l’élément ciblé. Évitez toujours les styles qui éliminent ou limitent la visibilité des indicateurs de cible du clavier. L’indicateur visuel de la cible par défaut du navigateur peut être supprimé avec CSS outline:0 ou outline: none, ce qui est une barrière commune et un anti-pattern. Sa pratique exemplaire consiste à utiliser CSS pour concevoir un indicateur de cible très visible avec un fort contraste. Mauvais exemple : Suppression de l’indicateur visuel de la cible Tous les navigateurs affichent un contour visible autour de l’élément qui a actuellement cible de clavier et qui peut être désactivé en utilisant la propriété CSS outline: 0 ou outline: none. Si l’indicateur visuel de la cible est supprimé, les utilisateurs du clavier voyants n’auront aucune idée du lien qui a la cible, ce qui rend difficile ou impossible la navigation dans la page Web. L'exemple commence Un lien vers Google L'exemple finit CSS Début du code a:focus { outline: none; } Fin du code Bon exemple : Indicateur visuel de la cible du site Canada.ca Dans cet exemple, le premier lien d’un menu de trois comporte un indicateur visuel de la cible composé d’un contour noir épais, fixé étroitement au texte. CSS Début du code a:focus { outline: 2px auto -webkit-focus-ring-color; outline-offset: -2px; } Fin du code Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.7 : Visibilité du focus Techniques G149 : Utiliser des composants d'interface utilisateur qui sont mis en évidence par l'agent utilisateur lorsqu'ils reçoivent le focus (en anglais) G165 : Utiliser l'indicateur par défaut du focus de la plateforme de sorte que l'indicateur par défaut du focus à haute visibilité soit visible (en anglais) G195 : Utiliser un indicateur de focus à haute visibilité fourni par l'auteur (en anglais) C15 : Utiliser les CSS pour changer la présentation des composants d'interface utilisateur lorsqu'ils reçoivent le focus (en anglais) C40 : Créer un indicateur de focalisation à deux couleurs pour assurer un contraste suffisant avec tous les composants (en anglais) SCR31 : Utiliser des scripts pour changer la couleur d'arrière-plan ou la bordure de l'élément ayant le focus (en anglais) Échecs F78 : Échec du critère de succès 2.4.7 survenant lorsque la bordure ou le contour des éléments est stylé d'une façon qui enlève ou rend invisible l'indicateur visuel du focus (en anglais) ",
 href: '../module3/links-fr.html#indicator'  ,
 title: "Liens – Module 3 - Liens et navigation" ,
 heading: " Indicateur visuel de la cible"
},{
 categories: 'module3',
 content: "  Distinguer les liens du texte Les utilisateurs malvoyants et daltoniens ont besoin de faire la distinction entre les liens et le texte voisin. La façon la plus simple de le faire consiste à souligner le lien. Lorsque la couleur est utilisée comme seule façon d’identifier un lien (ce qui signifie que le soulignement a été supprimé), deux conditions doivent être remplies : Contraste de 3:1 entre le corps du texte et le texte du lien. Un « indice visuel » (pas seulement un changement de couleur) qui apparaît sur le survol de la souris et la cible de clavier. La façon la plus courante d’y arriver est de souligner le lien sur le survol et la cible, mais vous pouvez aussi fournir une couleur d’arrière-plan, ou une bordure ou un contour. Notez qu’il s’agit d’un problème uniquement lorsque le lien et le corps du texte apparaissent ensemble. Cela ne s’applique pas aux liens dans l’en-tête ou superposés dans un menu, où ils sont interprétés comme des liens par leur position sur la page. Ces exigences s’ajoutent à l’exigence minimale de contraste des textes de 4,5:1 (voir le module du tutoriel 7 Conception visuelle et couleurs > Contraste). Il peut être difficile de trouver une couleur de lien qui présente un contraste de 3:1 avec le corps noir et un contraste de 4,5:1 avec un fond blanc. La technique WCAG G183 énumère les valeurs de couleur qui le sont dans l’exemple 1 (voir Ressources WCAG connexes, ci-dessous). Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.1 : Utilisation de la couleur Techniques G182 : S'assurer que des indices visuels additionnels sont disponibles quand les différences de couleur sont utilisées pour véhiculer une information (en anglais) G183 : Utiliser un rapport de contraste de 3 pour 1 avec le texte environnant et fournir des indices visuels additionnels au focus pour les liens et les composants d'interface quand ils ne sont identifiables que par la couleur (en anglais) ",
 href: '../module3/links-fr.html#links-text'  ,
 title: "Liens – Module 3 - Liens et navigation" ,
 heading: " Distinguer les liens du texte"
},{
 categories: 'module3',
 content: "  Liens qui s’ouvrent dans une nouvelle fenêtre Les liens s’ouvrent dans une nouvelle fenêtre via l’attribut target=”_blank”. En général, évitez d’ouvrir des liens dans une nouvelle fenêtre. Lorsque les liens s’ouvrent dans une nouvelle fenêtre, avertissez les utilisateurs. Soit en : Ajoutant le lien visible « (Ouvre une nouvelle fenêtre) ». Affichant un avertissement visuel caché sur la cible et le survol (voir exemple). Bon exemple : Le lien d’avertissement s’ouvre dans une nouvelle fenêtre en affichant un message visuellement caché sur la cible et le survol. HTML Début du code Voici un exemple d’un Lien externe Ouvre une nouvelle fenêtre Fin du code Jusqu’à ce que le lien reçoive la cible, la portée intérieure est masquée visuellement au moyen de la méthode « clip » CSS. Sur le survol ou la cible, l’avertissement “Ouvre une nouvelle fenêtre” (ou “Ouvre un nouvel onglet”) est affiché. Voir la technique WCAG G201 pour obtenir les versions HTML et CSS complètes. Songez à styliser l’avertissement pour qu’il apparaisse comme l’infobulle de l'attribut title. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.2.1 : Au focus Techniques G200 : Ouvrir une nouvelle fenêtre et un onglet à partir d'un lien seulement quand cela est nécessaire (en anglais) G201 : Avertir l'utilisateur à l'avance lorsqu'une nouvelle fenêtre est ouverte (en anglais) ",
 href: '../module3/links-fr.html#links-new-window'  ,
 title: "Liens – Module 3 - Liens et navigation" ,
 heading: " Liens qui s’ouvrent dans une nouvelle fenêtre"
},{
 categories: 'module3',
 content: "  Blocs de navigation Identifiez sémantiquement les blocs de navigation importants sur une page avec l’élément ou l’attribut ARIA role=”navigation”. Chacun crée un point de repère de navigation ARIA, que les utilisateurs d’un lecteur d’écran peuvent cibler par commande du clavier. S’il y a deux régions de navigation ou plus sur la page, nommez chaque région avec aria-label ou aria-labelledby pour les différencier. L’indication du lien actuel dans un bloc de navigation est un exemple de critère de succès de niveau AAA des WCAG facilement réalisable. Deux choses sont essentielles : styliser le lien actuel pour qu’il se démarque visuellement; et définir un attribut aria-current='page' sur le lien. L’attribut doit être défini sur le lien puisqu’il a tendance à fonctionner uniquement sur des éléments exploitables. Bon exemple : Pagination Ici, un menu de pagination pour les résultats de recherche est configuré dans un élément de navigation nommé. Le lien actuel est indiqué visuellement au moyen de CSS, et aux lecteurs d’écran au moyen de l’attribut aria-current='page'. CSS Début du code .current-page { background-color: #ccc; border: 1px solid black; } Fin du code HTML Début du code 1 2 3 4 Fin du code Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.4.8 : Localisation (Niveau AAA) Techniques H97 : Regrouper des liens connexes à l’aide de l’élément nav (en anglais) G128 : Indiquer la position courante dans la barre de navigation (en anglais) (Niveau AAA) ",
 href: '../module3/navigation-fr.html#blocks-navigation'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Blocs de navigation"
},{
 categories: 'module3',
 content: "  Liens de saut de navigation Sur un site Web mal conçu, les utilisateurs du clavier doivent naviguer du haut de la page jusqu’à la zone de contenu principal, souvent à travers une longue liste de liens de navigation et d’autres éléments. Cela peut être fastidieux et même douloureux pour les utilisateurs ayant certaines formes de handicaps moteurs. Un lien de saut de navigation permet aux utilisateurs de lecteur d’écran et aux utilisateurs du clavier voyants de naviguer directement vers le contenu principal à partir du haut de la page. Un lien de saut n’est pas nécessaire si seulement quelques commandes séparent le contenu principal du haut de la page. Suivez les pratiques exemplaires suivantes pour les liens de saut de navigation: Placez le lien de saut de navigation au haut de la page avant tout autre élément ciblable (lien, bouton ou commande personnalisée). Le lien de saut n’a pas besoin d’être visible avant d’avoir reçu la cible. Utilisez un lien clair – p. ex. « Passer au contenu principal » ou « Passer au contenu » Utilisez un lien de même page en ciblant la valeur de l’attribut d'identification de la destination (habituellement l’élément ). Attribuez l'attribut tabindex='-1' à la destination. Cela corrige les lacunes de certains navigateurs qui déplacent la fenêtre d'affichage vers la destination, mais pas vers la cible. Ne masquez pas le lien de saut en utilisant l’une des options suivantes : Utiliser CSS pour positionner de façon permanente l’écran de renvoi Régler display: none Régler visibility: invisible HTML Début du code Passer au contenu [...] Le contenu principal entre ici Fin du code CSS Début du code .show-with-focus { position: absolute; left: -1000px; top:-1000px; width: 1px; height: 1px; text-align: center; overflow: hidden; } .show-with-focus: focus, .show-with-focus: active { position: absolute; left: 0; top: 0; width: auto; overflow: visible; background-color: #FF3; border: 1px dotted #000; } Fin du code Bon exemple : Passer au contenu principal L'exemple commence L'exemple finit Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.1 : Contourner des blocs Techniques G1 : Ajouter un lien au début de chaque page pour aller directement à la zone de contenu principal (en anglais) G123 : Ajouter un lien au début d'un bloc de contenu répété pour aller à la fin de ce bloc (en anglais) G124 : Ajouter des liens au début de la page pour aller à chacune des zones du contenu (en anglais) SCR28 : Utiliser un menu extensible pour passer par dessus les blocs de contenu (en anglais) ",
 href: '../module3/navigation-fr.html#skip-navigation'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Liens de saut de navigation"
},{
 categories: 'module3',
 content: "  Accès multiples Fournir plus d’une façon de localiser une page Web dans un ensemble de pages Web. Des utilisateurs peuvent trouver une technique plus facile ou plus compréhensible à utiliser qu'une autre. Utiliser au moins deux des techniques suivantes : Fournir des liens de navigation vers les pages Web reliées Fournir une table des matières Fournir un plan du site Fournir une fonction de recherche pour aider l'utilisateur à trouver le contenu Fournir une liste de liens vers toutes les autres pages Web Fournir des liens vers toutes les autres pages du site à partir de la page d'accueil Exception: Notez que ce critère WCAG ne s'applique pas si la page page est le résultat ou une étape d'un processus. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.5: Accès multiples Techniques Utiliser au moins deux des techniques suivantes : G125 : Fournir des liens de navigation vers les pages Web reliées (en anglais) G64 : Fournir une table des matières (en anglais) G63 : Fournir un plan du site (en anglais) G161 : Fournir une fonction de recherche pour aider l'utilisateur à trouver le contenu (en anglais) G126 : Fournir une liste de liens vers toutes les autres pages Web (en anglais) G185 : Fournir des liens vers toutes les autres pages du site à partir de la page d'accueil (en anglais) ",
 href: '../module3/navigation-fr.html#multiple-ways'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Accès multiples"
},{
 categories: 'module3',
 content: "  Table des matières Une table des matières sert deux objectifs : Elle donne un aperçu des principaux sujets du document et permet ainsi aux utilisateurs de visualiser le contenu sans avoir à défiler vers le bas et à lire ou à parcourir. Elle permet aux lecteurs de naviguer directement vers une section précise du document. La table des matières pour une page doit refléter la structure d’en-tête de la page. Une table des matières est particulièrement utile aux utilisateurs voyants ayant une déficience motrice, aux utilisateurs aveugles et aux utilisateurs de clavier. Critère de succès 2.4.5 des WCAG : Les voies multiples exigent que les utilisateurs disposent de plusieurs moyens pour trouver les pages Web d’un site. Les blocs de navigation, la recherche, les cartes du site ou une table des matières peuvent appuyer ce critère du niveau AA. Bon exemple : Table des matières Dans cet exemple, une saisie d’écran d’une table des matières montre le texte d’en-tête sous forme de liens. Les en-têtes des niveaux 1, 2 et 3 sont inclus. L'exemple commence L'exemple finit Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.5 : Accès multiples Techniques G64 : Fournir une table des matières (en anglais) ",
 href: '../module3/navigation-fr.html#table-of-contents'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Table des matières"
},{
 categories: 'module3',
 content: "  Ordre séquentiel logique Les lecteurs d’écran lisent le contenu directement du DOM (un code sous-jacent d’une page après que JavaScript l’a modifié), et non l’écran réel. Ils ne tiennent pas compte des règles CSS. Il est possible d’utiliser CSS (flotteurs, positionnement, marges et remplissage) pour obtenir un ordre de lecture visuelle significatif alors que sous le capot, l’ordre de lecture du code sous-jacent (haut vers le bas) n’est pas logique. Voir l’exemple dans Échec F1 dans Ressources connexes WCAG, ci-dessous. Supprimez le style CSS pour simuler l’expérience du lecteur d’écran. Le contenu devrait être logique, se lire de haut en bas. Pour assurer un ordre de lecture logique, positionnez le contenu dans la même séquence que le code sous-jacent. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.2 : Ordre séquentiel logique Techniques G57 : Ordonner le contenu selon une séquence logique pour tout le contenu de la page Web( en anglais) C6 : Positionner le contenu selon le balisage structurel (en anglais) C27 : Faire en sorte que l'ordre du DOM corresponde à l'ordre visuel (en anglais) Échecs F1 : Échec du critère de succès 1.3.2 consistant à changer la signification du contenu en positionnant le contenu à l'aide des CSS (en anglais) ",
 href: '../module3/navigation-fr.html#meaningful-sequence'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Ordre séquentiel logique"
},{
 categories: 'module3',
 content: "  Cible et ordre de cible Quelle est la cible? La cible désigne la commande interactive à l’écran. Elle peut être un lien, une commande de formulaire, un bouton ou une commande personnalisée qui reçoit des entrées du clavier (et du presse-papiers lorsque vous collez du contenu). La cible détermine où vont les événements du clavier dans la page. Par exemple, si vous ciblez un champ de saisie de texte et que vous commencez à taper, la cible reçoit les activités du clavier et affiche les caractères que vous tapez. Bien qu’elle soit ciblée, elle reçoit également du contenu collé provenant du presse-papier. Certaines des commandes natives ont même un soutien supplémentaire au clavier intégré. Par exemple, avec l’élément sélectionné ciblé, vous pouvez appuyer sur les flèches vers le haut et vers le bas pour sélectionner différents enfants et commencer à taper pour insérer automatiquement l’un des éléments disponibles. Un élément avec cible comporte aussi ce qu’on appelle un indicateur visuel de cible ou anneau de cible. Son style dépend du navigateur ou du style appliqué par l’auteur de la page. Firefox, par exemple, affiche une bordure pointillée, tandis que Chrome met en évidence les éléments ciblés avec une bordure bleue. Pour les utilisateurs du clavier, la cible est absolument essentielle. C’est l’équivalent d’un curseur de souris et c’est la façon dont ils peuvent atteindre toutes les commandes interactives d’une application. Ce ne sont pas tous les éléments qui peuvent être ciblés. Les éléments non interactifs comme les images, les paragraphes, les divs et divers autres éléments de page ne sont pas ciblés lorsque vous parcourez la page à l’aide de la touche de tabulation. Cela se fait dès la conception étant donné que les utilisateurs n’ont pas besoin de se concentrer sur une chose en particulier s’ils ne peuvent pas interagir avec celle-ci. Ordre de cible Les utilisateurs du clavier naviguent d’un élément interactif à un autre à l’aide de la touche Tab, en ordre séquentiel, en suivant ce qu’on appelle l’ordre de cible. Ils utilisent les touches Maj-Tab pour reculer dans l’ordre de cible. Tout comme l’ordre de lecture, l’ordre de cible est déterminé par l’ordre source de la page Web. L’ordre des éléments interactifs (liens, boutons, commandes de formulaires et commandes personnalisées) dans le DOM est l’ordre dans lequel les utilisateurs du clavier les rencontrent. L’ordre de navigation au clavier doit être logique et intuitif. Habituellement, cela signifie qu’il faut s’assurer que la navigation suit le flux visuel de la page, de gauche à droite, de haut en bas. Elle passe par la bannière, la navigation principale, la navigation et les commandes de la page, puis le pied de page d’une page type. L’ordre de cible peut être confondu par JavaScript. Lorsque JavaScript insère un nouveau contenu, le contenu doit suivre l’élément déclencheur et non le précéder. Les utilisateurs du lecteur d’écran ne s’attendront pas à ce que le nouveau contenu tombe avant le déclencheur. La section du module 10 Gestion de la cible avec contenu injecté par JavaScript offre plus de détails. Les éléments HTML interactifs intégrés – liens, boutons et commandes de formulaire – sont implicitement faciles à cibler, ce qui signifie qu’ils reçoivent par défaut la cible sans balise supplémentaire. Pour recevoir une cible, un lien doit avoir un attribut href rempli. Pour empêcher un lien de recevoir une cible, supprimez son attribut href. Pour éviter qu’un bouton ou une commande de formulaire reçoive une cible, ajoutez l’attribut booléen “disabled”. Lorsqu’il est présent, l’élément n’est pas mutable, ciblable ou soumis avec le formulaire. L’utilisateur ne peut ni modifier ni cibler la commande, ni sur ses descendants de commande de formulaire. Vous pouvez également empêcher qu'une commande obtienne une cible en lui attribuant un attribut tabindex='-1'. Les liens et les commandes personnalisés nécessitent un attribut tabindex='0'� pour recevoir la cible. Voir le Bon exemple : Insérer un lien personnalisé dans l’ordre des onglets ci-dessous pour tous les attributs CSS, HTML et JavaScript requis pour imiter un lien. Important : Dans la mesure du possible, utilisez un élément HTML intégré au lieu de créer un contrôle personnalisé avec ARIA. L'attribut tabindex L’attribut tabindex sert surtout à gérer la cible dans les widgets. Voir la description du widget d’onglets dans le module ??. Une valeur d’attribut tabindex de 0 place l’élément dans l’ordre de la cible, à son emplacement actuel dans le DOM. Une valeur tabindex de -1 élimine un élément interactif de l’ordre de la cible, mais permet de le cibler par script (et de le modifier) en utilisant sa méthode de focus(). Par exemple, avec le widget d’onglets, un seul onglet à la fois peut se trouver dans l’ordre des onglets : l’onglet sélectionné a tabindex='0', tandis que les onglets inactifs ont tabindex='-1'. Les valeurs tabindex changent à mesure que l’utilisateur passe d’un onglet à l’autre, en utilisant les touches fléchées pour cibler un nouvel onglet. Voir la description du widget d’onglets dans le module ??. Une valeur tabindex supérieure à 0 est presque toujours une mauvaise idée et doit être évitée. Elle déplace l’élément au début de l’ordre de cible de la page et se trouve en ordre ascendant avec toute autre valeur tabindex positive. Les valeurs tabindex positives sont difficiles à maintenir et fragiles, et leur utilisation tend à confondre les attentes des utilisateurs quant à l’ordre de cible. Rédigez plutôt le document avec les éléments dans un ordre logique. Voir le Mauvais exemple : Conception de page avec valeurs d’index d'onglets positives, ci-dessous. Bon exemple : Insérer un lien personnalisé dans l’ordre des onglets en utilisant tabindex='0' Dans l’exemple ci-dessous, appuyez sur la touche Tab pour faire avancer la cible d’un lien à l’autre et sur les touches Maj-Tab pour faire reculer la cible. Le troisième lien est un lien personnalisé : L'attribut tabindex='0' ajoute l'élément span à l'ordre de cible. L'attribut role='link' l'identifie aux utilisateurs du lecteur d'écran. L’attribut class='link' permet de mettre le style en correspondance avec les liens par défaut et de fournir un indicateur de cible du clavier très visible. L’événement click traite la saisie à l'aide de la souris et la saisie tactile. L’événement keydown traite la saisie à l'aide de la touche Entrée. L'exemple commence Bing DuckDuckGo Google L'exemple finit Voir le HTML Début du code Bing DuckDuckGo <span tabindex='0' role='link' class='link' onclick='goToLink(event, 'http://www.google.ca/')' onkeydown='goToLink(event, 'http://www.google.ca/')'> Google Fin du code Voir le CSS Début du code .link:focus, .link:hover { outline: 3px solid orange; } span.link { cursor: pointer; color: #0000EE; text-decoration: underline; } span.link:active { color: #FF0000; } Fin du code Voir le Javascript Début du code function goToLink (event, url) { var type = event.type; if ((type === 'click') || (type === 'keydown' && event.keyCode === 13)) { window.location.href = url; event.preventDefault(); event.stopPropagation(); } } Fin du code Le lien personnalisé JavaScript provient du document de l’Initiative pour l’accessibilité du Web (IAW) : Exemples de liens (en anglais seulement) dans le modèle de Lien Pratiques de rédaction IAW-ARIA 1.1. Matt King, Jemma Ku, James Nurthen, •oë Bijl, Michael Cooper. Copyright © 2019 W3C® (MIT, ERCIM, Keio). Élément avec tabindex='-1' Une valeur d’attribut tabindex='-1' supprime l’élément de l’ordre de cible, mais lui permet de recevoir une cible programmatique. Cela signifie que la cible peut être réglée à l’aide de la méthode JavaScript focus() de l’élément. Bon exemple : Élément avec tabindex='-1' reçoit la cible par script Dans cet exemple, le fait de cliquer sur le bouton cible l’élément div. L'exemple commence Cliquez sur moi pour cibler la DIV Je suis une div L'exemple finit HTML Début du code Cliquez sur moi pour cibler la DIV Je suis une div Fin du code Élément avec tabindex > '0' Using a tabindex attribute value greater than 0 is considered an anti-pattern. Any tabindex greater than 0 jumps the element to the front of the natural tab order. If there are multiple elements with a tabindex > 0, then the tab order starts from the lowest value greater than zero and works its way up. Positive tabindex values often create counter-intuitive flow for keyboard users. If you want an element to come sooner in the tab order, move it to an earlier spot in the DOM rather than set a positive tabindex value. L’utilisation d’une valeur d’attribut tabindex supérieure à 0 est considérée comme un anti-pattern. Tout tabindex supérieur à 0 fait passer l’élément à l'avant de l’ordre naturel des onglets. S’il y a plusieurs éléments dont le tabindex est supérieur à 0, l’ordre des onglets commence à partir de la valeur la plus faible supérieure à zéro et progresse. Les valeurs positives des tabindex créent souvent un flux contre-intuitif pour les utilisateurs du clavier. Si vous voulez qu’un élément se retrouve plus tôt dans l’ordre des onglets, déplacez-le à un endroit plus tôt dans le DOM au lieu de fixer une valeur positive de tabindex Mauvais exemple : Conception de page avec valeurs positives de tabindex L’ordre des onglets lorsque l’utilisateur clique sur la page est le suivant : Le champ “Going to” (tabindex='1') Le champ “Check-in” (tabindex='2') Le champ “Check-out' (tabindex='3') Un objet mystère sans fonctionnalité et sans indicateur de cible visible (tabindex='4') “More travel”, puis suit l’ordre naturel des onglets (tabindex='0'). L'exemple commence L'exemple finit Le tabindex positif est établi sur seulement quatre éléments de la page “Carnival”. Après avoir parcouru les valeurs tabindex positives, les utilisateurs du clavier sont renvoyés au haut de l’écran, à la première commande ciblable sur la page, au début de l’ordre naturel des onglets. Un élément visuellement caché se trouve dans l’ordre des onglets sur la page, ce qui produit une cible « mystère » qui peut créer de la confusion. Si un élément est masqué visuellement, il ne doit pas être dans l’ordre des onglets. Évitez d’utiliser des valeurs tabindex supérieures à 0. Rédigez plutôt le document avec les éléments dans un ordre logique. S’assurer que l’ordre du code source (DOM) correspond à l’ordre visuel afin d'éviter toute confusion chez les utilisateurs de technologie d’assistance. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.4.3 : Parcours du focus Techniques G59 : Placer les éléments interactifs dans un ordre qui reflète la séquence et les relations dans le contenu (en anglais) C27 : Faire en sorte que l'ordre du DOM corresponde à l'ordre visuel (en anglais) H4 : Créer un ordre de tabulation logique entre les liens, les éléments de formulaire et les objets (en anglais) SCR26 : Insérer le contenu dynamique dans le modèle objet de document (DOM) immédiatement après son élément déclencheur (en anglais) SCR27 : Réordonner les sections de la page en utilisant le modèle objet de document (DOM) (en anglais) SCR37 : Créer des dialogues personnalisés d'une façon qui soit indépendante du dispositif (en anglais) Échecs F44 : Échec du critère de succès 2.4.3 consistant à utiliser l'attribut tabindex pour créer un ordre de tabulation qui ne préserve pas la signification et l'opérabilité (en anglais) F85 : Échec du critère de succès 2.4.3 consistant à utiliser des menus ou des dialogues qui ne sont pas adjacents au composant déclencheur dans l'ordre séquentiel de navigation (en anglais) ",
 href: '../module3/navigation-fr.html#focus-order'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Cible et ordre de cible"
},{
 categories: 'module3',
 content: "  Raccourcis clavier de caractères Un raccourci clavier est très pratique pour la plupart des utilisateurs, mais il constitue un obstacle important pour certains utilisateurs en situation de handicap si le raccourci ne comporte pas de touche non imprimable (p. ex., Ctrl, Alt). Simplement en parlant, les utilisateurs de la fonction d’entrée vocale déclencheront involontairement un raccourci composé uniquement de touches alphabétiques, puisque leur entrée vocale est convertie par le logiciel en une chaîne de caractères alphabétiques. Les utilisateurs susceptibles de frapper accidentellement des touches déclencheront également le raccourci. Critère de succès 2.1.4 : Si un raccourci clavier est utilisé dans un contenu utilisant uniquement des lettres (y compris des majuscules et des minuscules), des signes de ponctuation, des chiffres ou des symboles, au moins un des énoncés suivants est vrai : Désactiver Un mécanisme permet de désactiver le raccourci; Remapper Un mécanisme permet de remapper le raccourci pour y inclure une ou plusieurs touches de clavier non imprimables (p. ex., Ctrl, Alt); Actif seulement sur la cible Le raccourci clavier d’un composant d’interface utilisateur n’est actif que lorsque ce composant a une cible. Ressources WCAG connexes (Raccourcis clavier de caractères) Ressources WCAG connexes Critères de succès 2.1.4 : Raccourcis clavier utilisant des caractères (en anglais) Techniques G217 : Fournir un mécanisme permettant aux utilisateurs de remapper ou de désactiver des raccourcis de touches de caractère Échecs F99 : Échec du critère de succès 2.1.4 en raison de la mise en œuvre de raccourcis de touches de caractère qui ne peuvent pas être désactivés ou remappés ",
 href: '../module3/navigation-fr.html#shortcuts'  ,
 title: "Navigation - Module 3 – Liens et navigation" ,
 heading: " Raccourcis clavier de caractères"
},{
 categories: 'module4',
 content: "  Concept des tableaux Marquez les tableaux de façon sémantique pour définir la relation entre les cellules d’en-tête et les cellules de données. Pour les tableaux simples comportant une rangée d’en-tête de colonne et/ou une colonne d’en-tête de rangée: utiliser les éléments , , , and pour le balisage. utiliser l’attribut scope pour associer des en-têtes à leurs cellules de données et à des en-têtes parents. Pour les tableaux complexes, utiliser les attributs id et headers pour les associations explicites. ",
 href: '../module4/best-practice-mod-4-fr.html#tables-concepts'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Concept des tableaux"
},{
 categories: 'module4',
 content: "  Guide de style pour le contenu du site Canada.ca Utilisez des tableaux pour organiser et présenter les données La valeur de chaque cellule est liée aux en-têtes de colonne et de rangée Les entrées d’une colonne ne contiennent pas d’information qui pourrait être considérée comme un sous-titre La valeur de chaque cellule est alignée avec l’en-tête de colonne qui apparaît directement au-dessus Donner au tableau un titre clair (en utilisant ) qui décrit l’information qu’il contient Convertir des tableaux complexes en un ou plusieurs tableaux simples Convertir un tableau en liste si les données sont simples ",
 href: '../module4/best-practice-mod-4-fr.html#content-style-guide'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Guide de style pour le contenu du site Canada.ca"
},{
 categories: 'module4',
 content: "  Tableaux irréguliers Dans les tableaux irréguliers, représenter la relation entre les en-têtes de rangée et de colonne et leurs cellules de données avec l’attribut scope: Lorsqu’un en-tête couvre plusieurs colonnes, ajouter l’attribut scope='colgroup'à l’élément . oLorsqu’un en-tête s’étend sur plusieurs rangées, ajouter l’attribut scope='rowgroup' à l’élément . Définir les groupes dans le tableau avec les éléments et : Définir des groupes de colonnes avec l’élément et des colonnes individuelles avec comme premier enfant de l’élément de tableau; Définir des groupes de rangée avec l’élément . Les éléments individuels et définissent leurs propres groupes ",
 href: '../module4/best-practice-mod-4-fr.html#irregular-tables'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Tableaux irréguliers"
},{
 categories: 'module4',
 content: "  Tableaux comportant des en-têtes à plusieurs niveaux Pour associer des en-têtes à plusieurs niveaux à des cellules de données: Donner à chaque en-tête une valeur d’attribut id unique; Faire référence à ces valeurs d’attribut id dans l’attribut headers des cellules de données définies par l’en-tête. La technique des id/header n’est pas bien prise en charge par les lecteurs d’écran à l’heure actuelle (2021). Pour simplifier la présentation des données, il faut diviser le tableau complexe en deux tableaux pour qu’il soit plus simple. ",
 href: '../module4/best-practice-mod-4-fr.html#multi-level-headers'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Tableaux comportant des en-têtes à plusieurs niveaux"
},{
 categories: 'module4',
 content: "  Légendes et sommaire Utiliser l’élément pour fournir un nom ou un titre visible pour le tableau. Si la légende reproduit le titre précédent, masquer visuellement la avec la classe CSS de la BOEW .wb-inv. Placer l’élément comme enfant direct de l’élément Fournir un sommaire pour les tableaux complexes comprenant le but, la composition, les tendances ou l’utilisation. Dans la mesure du possible, convertir des tableaux complexes en tableaux ou listes simples, de sorte qu’une explication moindre ou nulle ne soit requise. Ne pas reproduire l’information de la légende dans le sommaire. Choisir une méthode pour présenter les sommaires des tableaux : Imbriquer le sommaire dans l’élément Placer le sommaire dans un paragraphe précédant ou suivant le tableau. Faire référence au sommaire du tableau avec l’attribut aria-describedby. Utiliser l’élément pour marquer un sommaire de tableau. Utiliser les attributs aria-labelledby et aria-describedby pour associer, respectivement, la légende et le sommaire au tableau. ",
 href: '../module4/best-practice-mod-4-fr.html#captions-summary'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Légendes et sommaire"
},{
 categories: 'module4',
 content: "  Conseils et astuces supplémentaires Divisez un tableau complexe en tableaux plus petits et plus simples qui contiennent des données se rapportant à un sujet secondaire. Commencer un nouveau lorsque le sujet change. Séparez chaque élément de données dans sa propre cellule. Ne pas utiliser de sauts de ligne (éléments ) pour créer des rangées de tableau. Alignez le texte à gauche et les données numériques à droite. Différencier visuellement les cellules d’en-tête et de données . Donnez des styles différents aux rangées paires et impaires pour améliorer la lisibilité. S’assurer que le tableau n’est pas tronqué (p. ex., ne pas utiliser de overflow: hidden dans les feuilles de style CSS). Évitez d’utiliser des tableaux pour la mise en page. Utilisez plutôt une feuille de style CSS pour la mise en page. ",
 href: '../module4/best-practice-mod-4-fr.html#tips-tricks'  ,
 title: "Pratiques exemplaire - Module 4 - Tableaux" ,
 heading: " Conseils et astuces supplémentaires"
},{
 categories: 'module4',
 content: "  Aperçu - Légende et sommaire L’élément précise le nom ou le titre d’un tableau. Un sommaire de tableau présente le but du tableau, décrit sa structure cellulaire de base, met en évidence les tendances ou les modèles et apprend généralement à l’utilisateur comment utiliser le tableau. ",
 href: '../module4/caption-summary-fr.html#overview-caption-summary'  ,
 title: "Légende et sommaire - Module 4 - Tableaux" ,
 heading: " Aperçu - Légende et sommaire"
},{
 categories: 'module4',
 content: "  Identifier un tableau à l’aide d’une légende L’élément est le premier enfant de l’élément . Il sert de nom ou de titre abrégé pour le contenu du tableau. Sans légende, les utilisateurs du lecteur d’écran doivent naviguer dans les en-têtes de la rangée 1 ou dans la colonne 1, au moins pour déterminer de quoi traite le tableau. Si la légende reproduit le titre précédent, masquer visuellement la légende avec la classe CSS de la BOEW. La reproduction est nécessaire puisque les utilisateurs du lecteur d’écran peuvent naviguer d’un tableau à l’autre en appuyant sur une touche, omettant un titre précédent. Bon exemple: Légende Dans cet exemple, « Films à l’affiche » indique aux utilisateurs quelle information se trouve dans le tableau. L'exemple commence Films à l’affiche Date Film Lieux 12 fév Spiderman - The Dark Fate AMC Toronto 24 mars Avengers AMC Mississauga 14 avr Superman 4 Cineplex London L'exemple finit Voir le HTML Début du code Films à l’affiche Date Film Locations 12 Fev Spiderman - The Dark Fate AMC Toronto 24 mars Avengers AMC Mississauga 14 avr Superman 4 Cineplex London Fin du code ",
 href: '../module4/caption-summary-fr.html#caption'  ,
 title: "Légende et sommaire - Module 4 - Tableaux" ,
 heading: " Identifier un tableau à l’aide d’une légende"
},{
 categories: 'module4',
 content: "  Sommaire pour les tableaux complexes Dans le cas des tableaux complexes, les sommaires devraient inclure des renseignements explicatifs pour présenter l’objet du tableau, décrire sa composition, souligner les tendances et apprendre à l’utilisateur comment utiliser le tableau. Dans la mesure du possible, convertir les tableaux complexes en tableaux ou listes simples, de sorte qu’une explication moindre ou nulle ne soit requise. Si la légende et le sommaire sont fournis pour un tableau, le sommaire ne doit pas reproduire l’information présentée dans la légende. Il existe différentes façons de présenter des sommaires de tableaux complexes : Imbriquer le sommaire dans l’élément Placer le sommaire dans un paragraphe précédant ou suivant le tableau. Faites renvoi à l’attribut id du paragraphe à partir d’un attribut aria-describedby dans l’élément . Utiliser les éléments et pour marquer un sommaire de tableau. Réglez les attributs aria-labelledby et aria-describedby dans l’élément : Utilisez l’attribut aria-labelledby pour faire renvoi à la valeur de l’attribut id de l’élément du tableau. Utilisez l’attribut aria-describedby pour faire renvoi à la valeur de l’attribut id de l’élément renfermant le sommaire. Bon exemple : Imbriquer le sommaire dans l’élément caption Dans l’exemple ci-dessous, le tableau complexe montre le nombre d’étudiants inscrits dans deux pays pendant quatre semestres. L’élément sert d’en-tête du tableau et fournit un sommaire décrivant la structure du tableau. L'exemple commence Renseignements sur le nombre d’étudiants inscrits La première colonne contient le pays et les programmes; les autres colonnes présentent le semestre. Les cellules contiennent le nombre d’étudiants inscrits. Hiver Printemps Été Automne É.-U. MBA 40 80 125 93 MS 60 83 152 132 Diplôme 66 103 115 20 Canada MBA 113 81 122 33 MS 87 53 143 90 Diplôme 39 16 32 40 L'exemple finit Voir le HTML Début du code Renseignements sur le nombre d’étudiants inscrits La première colonne contient le pays et les programmes; les autres colonnes présentent le semestre. Les cellules contiennent le nombre d’étudiants inscrits. Hiver Printemps Été Automne É.-U. MBA 40 80 125 93 MS 60 83 152 132 Diplôme 66 103 115 20 Canada MBA 113 81 122 33 MS 87 53 143 90 Diplôme 39 16 32 40 Fin du code/p> Bon exemple : Utiliser aria-describedby pour fournir un sommaire du tableau Dans cet exemple, le sommaire précède le tableau dans un élément de paragraphe. Le tableau prend un attribut aria-describedby qui contient la valeur d’attribut id du paragraphe. HTML Début du code La première colonne contient le pays et les programmes; les autres colonnes indiquent le semestre. Les cellules contiennent le nombre d’étudiants inscrits. […] Fin du code Bon exemple : Utiliser l’élément figcaption pour contenir le sommaire du tableau Dans cet exemple, le tableau est enveloppé dans un élément tandis que l’élément contient la légende et le texte du sommaire. Le titre du tableau dans l’élément ; est explicitement associé au tableau en utilisant l’attribut aria-labelledby. Le paragraphe sommaire de l’élément est explicitement associé au tableau en utilisant l’attribut aria-describedby. L'exemple commence Informations sur le nombre d’étudiants inscrits La première colonne indique le pays et les différents programmes; les autres colonnes indiquent le type de semestre et le nombre d’étudiants inscrits. Hiver Printemps Été Automne É.-U. MBA 40 80 125 93 MS 60 83 152 132 Diplôme 66 103 115 20 L'exemple finit Voir le HTML Début du code États-Unis : Informations sur le nombre d’étudiants inscrits La première colonne indique le pays et les différents programmes; les autres colonnes indiquent le type de semestre et le nombre d’étudiants inscrits. Hiver Printemps Été Automne É.-U. MBA 40 80 125 93 MS 60 83 152 132 Diplôme 66 103 115 20 Fin du code ",
 href: '../module4/caption-summary-fr.html#summaries'  ,
 title: "Légende et sommaire - Module 4 - Tableaux" ,
 heading: " Sommaire pour les tableaux complexes"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H39 : Utiliser l'élément caption pour associer un titre de tableau avec les données du tableau (en anglais) ARIA1 : Utiliser la propriété ARIA describedby pour fournir une étiquette descriptive aux contrôles de saisie (en anglais) ARIA16 : Utiliser aria-labelledby pour attribuer un nom à des commandes d’interface d’utilisateur (en anglais) ",
 href: '../module4/caption-summary-fr.html#caption-summary-wcag'  ,
 title: "Légende et sommaire - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module4',
 content: "  Conception avec des en-têtes irréguliers Un tableau est irrégulier lorsqu’un ou plusieurs de ses en-têtes englobent plusieurs colonnes ou rangées. HTML introduit des attributs et des éléments destinés à représenter les relations entre ces en-têtes couvrant des rangées ou des colonnes et les cellules de données qu’ils définissent. ",
 href: '../module4/irregular-headers-fr.html#irregular-headers'  ,
 title: "En-têtes irréguliers - Module 4 - Tableaux" ,
 heading: " Conception avec des en-têtes irréguliers"
},{
 categories: 'module4',
 content: "  L'attribut scope Lorsqu’un en-tête couvre plusieurs colonnes, ajouter l’attribut scope='colgroup' à l’élément . Voir l’en-tête A dans le tableau ci-dessous. Lorsqu’un en-tête s’étend sur plusieurs rangées, ajouter l’attribut scope='rowgroup' à l’élément th. Voir l’en-tête B dans le tableau ci-dessous. Pour les en-têtes de colonne solo, ajouter l’attribut scope='col' à l’élément . Voir les en-têtes A1, A2, A3 dans le tableau ci-dessous. Pour les en-têtes de rangée solo, ajouter l’attribut scope='row' à l’élément . Voir les en-têtes B1 et B2 dans le tableau ci-dessous. L'exemple commence Tableau comportant un en-tête de colonne et un en-tête de rangée A A1 A2 A3 B B1 B2 L'exemple finit Le support du lecteur d’écran pour l’attribut scope='rowgroup' est pire que le support pour l’attribut scope='colgroup'. Lorsque cela est possible, concevoir des tableaux qui utilisent scope='colgroup' et éviter scope='rowgroup'. Voir le HTML Début du code Tableau comportant un en-tête de colonne et un en-tête de rangée &nbsp; A A1 A2 A3 B B1 &nbsp; &nbsp; &nbsp; B2 &nbsp; &nbsp; &nbsp; Fin du code ",
 href: '../module4/irregular-headers-fr.html#scope-attribute'  ,
 title: "En-têtes irréguliers - Module 4 - Tableaux" ,
 heading: " L'attribut scope"
},{
 categories: 'module4',
 content: "  Éléments définissant le groupe Les tableaux irréguliers définissent également leurs colonnes individuelles et colonnes recouvrantes avec, respectivement, les éléments et . Ces éléments sont les premiers enfants de l’élément du tableau et sont énumérés dans l’ordre dans lequel les colonnes apparaissent dans le tableau. L’attribut span de l’élément contient le nombre de colonnes recouvertes. Les tableaux irréguliers définissent des groupes de rangées en utilisant les éléments , et . L’élément définit un nouveau groupe de rangées pour chaque utilisation, alors que et le font aussi, mais ne peuvent être utilisés qu’une seule fois par tableau. ",
 href: '../module4/irregular-headers-fr.html#group-defining'  ,
 title: "En-têtes irréguliers - Module 4 - Tableaux" ,
 heading: " Éléments définissant le groupe"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau avec en-têtes recouvrant des colonnes et des rangées Dans cet exemple, « Pays » et « Propriété » sont des colonnes, chacune identifiée avec un élément . « Scenario » couvre les colonnes, identifiées avec un élément . Les en-têtes « Canada » et « É.-U. » et leurs rangées respectives sont emboîtés dans un élément . L'exemple commence Scénarios de propriété, Canada c. États-Unis Pays Propriété Scénario A B C Canada Achat probable très improbable S. O. Location improbable très improbable très improbable É.-U. Achat improbable très improbable très improbable Location probable très probable S. O L'exemple finit Voir le HTML Début du code Scénarios de propriété, Canada c. États-Unis Pays Propriété Scénario A B C Canada Achat probable très improbable S. O. Location improbable très improbable très improbable É.-U. Achat improbable très improbable très improbable Location probable très probable S. O Fin du code ",
 href: '../module4/irregular-headers-fr.html#headers'  ,
 title: "En-têtes irréguliers - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau avec en-têtes recouvrant des colonnes et des rangées"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H63 : Utiliser l'attribut scope pour associer les cellules d'en-têtes et les cellules de données dans les tableaux de données (en anglais) ",
 href: '../module4/irregular-headers-fr.html#irregular-headers-wcag'  ,
 title: "En-têtes irréguliers - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module4',
 content: "  Conception avec des en-têtes à plusieurs niveaux Un tableau comportant des en-têtes à plusieurs niveaux comporte trois en-têtes empilés, ou des en-têtes de colonne qui se répètent ou changent au milieu d’un tableau. Pour associer des en-têtes à plusieurs niveaux avec des cellules de données: Donner à chaque en-tête une valeur d’attribut id unique. Faire référence à ces valeurs d’attribut id dans l’attribut header des cellules de données. L’utilisation de la technique des attributs id/header est une solution de dernier recours, car elle n’est pas bien prise en charge par les technologies d’assistance à l’heure actuelle (2021). Bien que le « bon » tableau ci-dessous soit techniquement conforme, il donne de mauvais résultats avec les lecteurs d’écran. Important : Dans la mesure du possible, simplifiez la présentation des données en divisant un tableau complexe en au moins deux tableaux plus simples. Il se peut qu’un sommaire de tableau soit nécessaire. Les en-têtes de colonne qui se répètent ou changent à mi-chemin d’un tableau peuvent facilement dérouter les utilisateurs de lecteurs d’écran lorsqu’ils descendent dans les rangées. Il en va de même pour les en-têtes de rangée couvrant une colonne. Dans le sommaire du tableau, mentionnez leur présence. ",
 href: '../module4/multi-level-headers-fr.html#multi-level-headers'  ,
 title: "En-têtes à plusieurs niveaux - Module 4 - Tableaux" ,
 heading: " Conception avec des en-têtes à plusieurs niveaux"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau avec trois en-têtes empilés Dans cet exemple, les en-têtes de rangée sont empilés par trois, ce qui nécessite l’utilisation d’un balisage id/header pour associer les cellules de données à leurs en-têtes. Le validateur de tableau BOEW fournit le balisage id/header. Une description de tableau visuellement masquée est imbriquée dans la légende. L'exemple commence Véhicules loués par le gouvernement La colonne 1 énumère les véhicules de fonction et les véhicules ne rentrant pas dans la catégorie des véhicules de fonction. La colonne 2 indique le pays (le Canada ou les États-Unis). La colonne 3 indique la durée du bail (long terme ou court terme). La colonne 4 énumère les exigences liées à la politique. Type de véhicule Pays Durée du bail Exigences liées à la politique de fonction CANADA long terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile' - s’auto-assurer pour la franchise - court terme ssurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - U.S. long-term Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - court terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U.; - s’auto-assurer pour la franchise - autre que de fonction CANADA long erme Auto-assurance sauf si une loi provinciale s’applique court terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - É.-U. long terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U; - s’auto-assurer pour les dommages pouvant toucher un véhicule du gouvernement - court terme tiliser la couverture d’assurance commerciale (responsabilité civile et collision pour les risques américains) administrée par le Secteur de la gestion des services et des acquisitions spécialisées. TPSGC; - s’auto-assurer pour la franchise - L'exemple finit Voir un extrait HTML - Attribuer les attributs id et headers Début du code Type de véhicule Pays Durée du bail Exigences liées à la politique de fonction CANADA long terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile' - s’auto-assurer pour la franchise - Fin du code Voir le HTML complet Début du code éhicules loués par le gouvernement La colonne 1 énumère les véhicules de fonction et les véhicules ne rentrant pas dans la catégorie des véhicules de fonction. La colonne 2 indique le pays (le Canada ou les États-Unis). La colonne 3 indique la durée du bail (long terme ou court terme). La colonne 4 énumère les exigences liées à la politique. Type de véhicule Pays Durée du bail Exigences liées à la politique de fonction CANADA long terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile' - s’auto-assurer pour la franchise - court terme ssurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - U.S. long-term Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - court terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U.; - s’auto-assurer pour la franchise - autre que de fonction CANADA long erme Auto-assurance sauf si une loi provinciale s’applique court terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - É.-U. long terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U; - s’auto-assurer pour les dommages pouvant toucher un véhicule du gouvernement - court terme/th> tiliser la couverture d’assurance commerciale (responsabilité civile et collision pour les risques américains) administrée par le Secteur de la gestion des services et des acquisitions spécialisées. TPSGC; - s’auto-assurer pour la franchise - Fin du code ",
 href: '../module4/multi-level-headers-fr.html#headers-three-deep'  ,
 title: "En-têtes à plusieurs niveaux - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau avec trois en-têtes empilés"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau à plusieurs niveaux simplifié Le tableau de l’exemple précédent est trop complexe et nécessite une technique id/header difficilement prise en charge. Une meilleure approche consiste à diviser un tableau complexe en au moins deux tableaux plus petits. Dans cet exemple, le « Type de véhicule » (de fonction ou non) est déplacé de la colonne 1 à la légende du tableau, ce qui aboutit à un tableau pour les véhicules de fonction et un deuxième tableau pour les véhicules qui ne sont pas des véhicules de fonction. Les tableaux plus simples sont composés de deux niveaux d’en-têtes; ils peuvent donc être rendus en utilisant l’attribut scope plutôt qu’en utilisant les attributs id/header. L'attribut scope est plus facile à rédiger et à tenir à jour, et elle est mieux prise en charge par les agents utilisateurs que la méthode id/header. L'exemple commence Les véhicules non exécutif loués par le gouvernement Pays Durée du bail Exigences liées à la politique CANADA long terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; court terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - É.-U. long terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U.; - s’auto-assurer pour la franchise court terme Utiliser la couverture d’assurance commerciale (responsabilité civile et collision pour les risques américains) administrée par le Secteur de la gestion des services et des acquisitions spécialisées. TPSGC - s’auto-assurer pour la franchise - L'exemple finit Voir le HTML Début du code Les véhicules non exécutif loués par le gouvernement Pays Durée du bail Exigences liées à la politique CANADA long terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; court terme Assurance commerciale complète, y compris la garantie collision et la responsabilité civile; - s’auto-assurer pour la franchise - É.-U. long terme Acheter une assurance commerciale supplémentaire pour couvrir la responsabilité civile et la garantie collision pour les risques aux É.-U.; - s’auto-assurer pour la franchise court terme Utiliser la couverture d’assurance commerciale (responsabilité civile et collision pour les risques américains) administrée par le Secteur de la gestion des services et des acquisitions spécialisées. TPSGC - s’auto-assurer pour la franchise - Fin du code ",
 href: '../module4/multi-level-headers-fr.html#table-simplified'  ,
 title: "En-têtes à plusieurs niveaux - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau à plusieurs niveaux simplifié"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau avec trois en-têtes liés à chaque cellule de données Dans cet exemple, les en-têtes du tableau « Biologique (1 kg) » et « Non biologique (1 kg) » servent de sous-titres pour décrire la section suivante du tableau. En utilisant l’attribut header, les trois en-têtes sont correctement associés à la cellule de données. Cet exemple montre comment placer le tableau dans un élément , comme décrit dans la section Légende et sommaire. Plutôt que d'utiliser un élément , contient le titre du tableau, dans un élément , ainsi qu'un résumé du tableau pour faciliter la compréhension. Les attributs aria-labelledby et aria-describedby sur l'élément pointe respectivement sur le titre et le résumé, ce qui rend les associations plus fortes et plus fiables dans les technologies d'assistance. À noter que la cellule d’en-tête vide reçoit une valeur d’attribut id et un espace insécable comme contenu. La cellule est référencée par des en-têtes de haut niveau dans leur attribut header. Cela empêche certaines technologies d’assistance de lire le contenu de la cellule. L'exemple commence Coût des produits biologiques et non biologiques, par pays La première colonne énumère des produits biologiques suivis par des produits non biologiques; les autres colonnes présentent le coût des produits par pays. Canada É.-U. R.-U. Organic (1kg) Pommes $3.62 $4.87 $2.69 Bananes $1.47 $1.68 $1.60 Oignons $2.28 $2.81 $1.44 Non-organic (1kg) Pommes $3.37 $4.53 $2.50 Bananes $1.37 $1.56 $1.49 Oignons $2.12 $2.61 $1.34 L'exemple finit Extrait de HTML - Attribution des attributs id aux cellules Début du code […] Canada É.-U. R.-U. Organic (1kg) Pommes […] Fin du code Extrait de HTML - Assignation de l’attribut header aux cellules td Début du code […] $3.62 $4.87 […] Fin du code Voir HTML complet Début du code Coût des produits biologiques et non biologiques, par pays La première colonne énumère des produits biologiques suivis par des produits non biologiques; les autres colonnes présentent le coût des produits par pays. Canada É.-U. R.-U. Organic (1kg) Pommes $3.62 $4.87 $2.69 Bananes $1.47 $1.68 $1.60 Oignons $2.28 $2.81 $1.44 Non-organic (1kg) Pommes $3.37 $4.53 $2.50 Bananes $1.37 $1.56 $1.49 Oignons $2.12 $2.61 $1.34 Fin du code ",
 href: '../module4/multi-level-headers-fr.html#three-headers-related'  ,
 title: "En-têtes à plusieurs niveaux - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau avec trois en-têtes liés à chaque cellule de données"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H43 : Utiliser les attributs id et headers pour associer les cellules de données avec les cellules d'en-têtes dans les tableaux de données (en anglais) ",
 href: '../module4/multi-level-headers-fr.html#multi-level-headers-wcag'  ,
 title: "En-têtes à plusieurs niveaux - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module4',
 content: "  Conception avec un seul en-tête Dans le cas de tableaux simples comportant un en-tête de ligne ou un en-tête de colonne, utiliser l’élément pour marquer la première rangée ou la première colonne. Utiliser l’attribut scope pour identifier les cellules définies par l’en-tête. La portée indique si l’en-tête s’applique à une rangée, à une colonne ou à un groupe de rangées ou de colonnes. Consulter la section En-têtes irréguliers pour plus de détails sur l’attribut scope. ",
 href: '../module4/one-header-fr.html#one-header'  ,
 title: "Un seul en-tête - Module 4 - Tableaux" ,
 heading: " Conception avec un seul en-tête"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau simple avec des en-têtes en colonne L'exemple commence Réunions de cette semaine Date Heure Description de la réunion Lundi 10 h Point sur l’état d’avancement Mardi 14 h Réunion des gestionnaires Jeudi 16 h Réunion d’équipe L'exemple finit Voir le HTML Début du code Réunions de cette semaine Date Heure Description de la réunion Lundi 10 h Point sur l’état d’avancement […] Fin du code ",
 href: '../module4/one-header-fr.html#simple-header'  ,
 title: "Un seul en-tête - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau simple avec des en-têtes en colonne"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau simple avec en-têtes de rangée L'exemple commence Réunions de cette semaine Date Lundi Mardi Jeudi Heure 10 h 14 h 16 h Description de la réunion Point sur l’état d’avancement Réunion des gestionnaires Réunion d’équipe L'exemple finit Voir le HTML Début du code Réunions de cette semaine Date Luni Mardi Jeudi Heure 10 h 14 h 16 h Description de la réunion Point sur l’état d’avancement Réunion des gestionnaires Réunion d’équipe Fin du code ",
 href: '../module4/one-header-fr.html#row-headers'  ,
 title: "Un seul en-tête - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau simple avec en-têtes de rangée"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H63 : Utiliser l'attribut scope pour associer les cellules d'en-têtes et les cellules de données dans les tableaux de données (en anglais) ",
 href: '../module4/one-header-fr.html#one-header-wcag'  ,
 title: "Un seul en-tête - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module4',
 content: "  Aperçu Les tableaux de données servent à structurer les données en colonnes et en rangées. Il est important de marquer les tableaux de façon sémantique pour définir la relation entre les cellules d’en-tête et les cellules de données. Dans le cas de tableaux simples, l’utilisation des éléments , , et rend les relations perceptibles. Il est également recommandé d’utiliser l’attribut scope même dans les tableaux simples. Dans le cas des tableaux complexes, l’utilisation des éléments et et des attributs scope, id et header rend les associations explicites. Les lecteurs d’écran utilisent le marquage du tableau pour lire l’information d’en-tête qui change à mesure que l’utilisateur navigue dans le tableau au moyen du clavier. Le lecteur d’écran lit les en-têtes de rangée et de colonne lorsqu’il est logique de le faire – quand on passe d’une cellule dans une colonne à une cellule dans la suivante, l’en-tête de la colonne suivante est lu à haute voix; quand on passe d’une rangée à l’autre, l’en-tête de la rangée suivante est lu à haute voix. Avec certain lecteur d’écran, lorsque les utilisateurs se perdent dans une table complexe, ils peuvent « interroger le tableau », et le lecteur d’écran lit tous les en-têtes associés à la cellule ciblée. Pour rendre l’information accessible au plus grand nombre possible, convertir les tableaux complexes en tableaux simples, et convertir les tableaux en listes si les données sont simples. ",
 href: '../module4/tables-concepts-fr.html#tables-overview'  ,
 title: "Concept des tableaux - Module 4 - Tableaux" ,
 heading: " Aperçu"
},{
 categories: 'module4',
 content: "  Guide de style du contenu de Canada.ca Suivre les recommandations de la section 5.3 du Guide de style du contenu de Canada.ca Section 5.3 pour ce qui est des tableaux : Utiliser des tableaux pour organiser et présenter les données; La valeur de chaque cellule est liée aux en-têtes de colonne et de rangée; Les entrées d’une colonne ne contiennent pas d’information qui pourrait être considérée comme un sous-titre; La valeur de chaque cellule est alignée avec l’en-tête de colonne qui apparaît directement au-dessus; Donner au tableau un titre clair (en utilisant ) qui décrit l’information qu’il contient; Convertir des tableaux complexes en un ou plusieurs tableaux simples; Convertir un tableau en liste si les données sont simples. ",
 href: '../module4/tables-concepts-fr.html#style-guide'  ,
 title: "Concept des tableaux - Module 4 - Tableaux" ,
 heading: " Guide de style du contenu de Canada.ca"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H39 : Utiliser l'élément caption pour associer un titre de tableau avec les données du tableau (en anglais) ",
 href: '../module4/tables-concepts-fr.html#tables-concepts-wcag-resources'  ,
 title: "Concept des tableaux - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module4',
 content: "  Conception avec deux en-têtes Pour les tableaux comportant un en-tête de rangée simple et un en-tête de colonne simple, utiliser l’attribut scope pour identifier les cellules d’en-tête. Pour rendre l’information accessible au plus grand nombre possible : Convertir des tableaux complexes en un ou plusieurs tableaux simples Convertir un tableau en liste si les données sont simples ",
 href: '../module4/two-headers-fr.html#two-headers'  ,
 title: "Deux en-têtes - Module 4 - Tableaux" ,
 heading: " Conception avec deux en-têtes"
},{
 categories: 'module4',
 content: "  Bon exemple : Tableau avec colonne décalée de cellules d’en-tête Dans ce tableau, la colonne 2 contient les cellules d’en-tête de la rangée. Les cellules de la colonne 2 utilisent des éléments et l’attribut scope='row'. Les cellules de la rangée 1 sont également marquées et utilisent scope='col'. L'exemple commence Congés de maladie pris au premier trimestre ID Nom Janv Fév Mars 355 John 3 2 0 561 Andy 0 2 3 765 Michelle 2 0 0 L'exemple finit Voir le HTML Début du code Congés de maladie pris au premier trimestre ID Nom Janv Fév Mars 355 John 3 2 0 561 Andy 0 2 3 765 Michelle 2 0 0 Fin du code ",
 href: '../module4/two-headers-fr.html#offset-column'  ,
 title: "Deux en-têtes - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Tableau avec colonne décalée de cellules d’en-tête"
},{
 categories: 'module4',
 content: "  Bon exemple : Conversion d’un tableau en listes L'exemple commence Congés de maladie pris au premier trimestre ID Nom Janv Fév Mars 355 John 3 2 0 561 Andy 0 2 3 765 Michelle 2 0 0 L'exemple finit L'exemple commence Congés de maladie pris au premier trimestre Janvier John (ID #355): 3 Andy (ID #561): 0 Michelle (ID#765): 2 Février John (ID #355): 2 Andy (ID #561): 2 Michelle (ID#765): 0 Mars John (ID #355): 0 Andy (ID #561): 3 Michelle (ID#765): 0 L'exemple finit ",
 href: '../module4/two-headers-fr.html#table-into-lists'  ,
 title: "Deux en-têtes - Module 4 - Tableaux" ,
 heading: "  Bon exemple : Conversion d’un tableau en listes"
},{
 categories: 'module4',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations Techniques H51 : Utiliser le balisage des tableaux pour présenter l'information tabulaire (en anglais) H63 : Utiliser l'attribut scope pour associer les cellules d'en-têtes et les cellules de données dans les tableaux de données (en anglais) ",
 href: '../module4/two-headers-fr.html#two-header-wcag'  ,
 title: "Deux en-têtes - Module 4 - Tableaux" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.4.5 : Texte sous forme d'image 3.3.2 : Étiquettes ou instructions Techniques H2 : Combiner en un même lien une image et un intitulé de lien pour la même ressource (en anglais) H67 : Utiliser un attribut alt vide sans attribut title sur un élément img pour les images qui doivent être ignorées par les technologies d'assistance (en anglais) H36 : Utiliser un attribut alt sur une image utilisée comme bouton soumettre (en anglais) H37 : Utiliser l'attribut alt sur l'élément img (en anglais) G92 : Fournir une longue description d'un contenu non textuel qui remplit la même fonction et présente la même information (en anglais) G73 : Fournir une longue description dans un autre emplacement avec un lien y pointant qui est immédiatement adjacent au contenu non textuel (en anglais) G74 : Fournir une longue description dans le texte près du contenu non textuel avec une référence à l'emplacement de cette longue description dans la description courte (en anglais) ",
 href: '../module5/alt-decision-tree-fr.html#wcag'  ,
 title: "Arbre décisionnel en texte de remplacement – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec des images animées Une image animée (y compris une vidéo) peut distraire les utilisateurs, particulièrement ceux ayant un trouble déficitaire de l’attention. Si elle comprend des clignotements, l’animation peut aussi causer des crises chez les utilisateurs atteints d’épilepsie photosensible. Suivez les pratiques exemplaires suivantes pour ce qui a trait aux images animées: S’assurer que l’animation s’arrête après cinq secondes ou fournir aux utilisateurs un bouton de pause. S’assurer que l’animation ne clignote pas plus de trois fois par seconde. Pour en savoir plus sur le contenu clignotant, voir le Audio, vidéo, animations et mouvement > contenu clignotant. ",
 href: '../module5/animated-images-fr.html#designing'  ,
 title: "Images animées – Module 5 - Images" ,
 heading: " Conception avec des images animées"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.2.2 : Mettre en pause, arrêter, masquer Techniques G4 : Permettre de mettre le contenu en pause et de redémarrer là où il a été mis en pause (en anglais) G11 : Créer du contenu qui clignote moins de 5 secondes (en anglais) G152 : Configurer les gifs animés pour qu'ils s'arrêtent de clignoter après n cycles (pendant 5 secondes) (en anglais) SCR22 : Utiliser des scripts pour contrôler le clignotement et l'arrêter en 5 secondes ou moins (en anglais) ",
 href: '../module5/animated-images-fr.html#wcag'  ,
 title: "Images animées – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Images informatives Utilisez l’attribut alt sur l’élément . Fournir des équivalents textuels utiles qui ont le même objectif, soit transmettre l’intention, le but et le sens de l’image. Ne pas inclure des mots comme « image de » ou « graphique » dans le texte de remplacement. Le texte de remplacement doit être concis et comporter moins de 150 caractères. ",
 href: '../module5/best-practice-mod-5-fr.html#informative'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images informatives"
},{
 categories: 'module5',
 content: "  Images décoratives ou redondantes Utiliser des attributs alt « null » (alt='') afin que la technologie d’assistance n’ait pas accès aux Images décoratives ou redondantes. L’attribut role=presentation cache également des éléments, même s’il n’est pas aussi largement pris en charge que l’attribut alt. Dans la mesure du possible, utiliser des images décoratives comme arrière-plan des feuilles de style en cascades. Ne pas omettre l’attribut alt des éléments . ",
 href: '../module5/best-practice-mod-5-fr.html#decorative'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images décoratives ou redondantes"
},{
 categories: 'module5',
 content: "  Images fonctionnelles Lorsqu'on lie une image et le texte qui l'accompagne, utiliser un attribut null (vide) alt (alt='') sur l'image s'il n'ajoute aucune information au texte du lien. Si on utilise une icône pour indiquer que les liens s'ouvrent dans une nouvelle fenêtre, fournir l'alternative textuelle « nouvelle fenêtre ». Fournir un texte de remplacement pour les images d’icônes autonomes qui ont une fonction. Utiliser un équivalent textuel pour les images utilisées dans un bouton. ",
 href: '../module5/best-practice-mod-5-fr.html#functional'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images fonctionnelles"
},{
 categories: 'module5',
 content: "  Images de texte Éviter d’utiliser des images de texte à moins qu’elles ne soient essentielles ou personnalisables. Le texte faisant partie d’un logo ou d’un nom de marque est considéré comme essentiel. Utiliser le texte proprement dit avec les CSS pour éviter la déformation et la pixélisation lorsqu’on redimensionne. Le texte sous forme d’image utilisé comme logo n’est pas assujetti aux exigences en matière d’accessibilité, par exemple le contraste minimum des couleurs et l’absence de texte sous forme d’image. Utiliser des images d’expressions mathématiques uniquement lorsque les mathématiques font exception au contenu du site Web. Fournir un équivalent textuel dans l’attribut alt ou dans une longue description. Utiliser MathML avec MathJax pour assurer le rendu des expressions mathématiques sur le plan sémantique. ",
 href: '../module5/best-practice-mod-5-fr.html#images-text'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images de texte"
},{
 categories: 'module5',
 content: "  Images liées Toujours fournir du texte de remplacement pour toute image servant de lien. Même si l’image est considérée comme décorative, fournir le texte de remplacement si l’image est un lien. ",
 href: '../module5/best-practice-mod-5-fr.html#linked'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images liées"
},{
 categories: 'module5',
 content: "  Images animées S’assurer que l’animation s’arrête après cinq secondes ou fournir aux utilisateurs un bouton de pause. S’assurer que l’animation ne clignote pas plus de trois fois par seconde. ",
 href: '../module5/best-practice-mod-5-fr.html#animated'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images animées"
},{
 categories: 'module5',
 content: "  Images complexes A complex image requires both a short and a long description: Une description courte ou un titre décrit l’image et indique l’emplacement de la description longue. Cette description est enregistrée dans l’attribut alt de l’élément et ne doit pas dépasser 150 caractères. Une description longue de l’image contient l’information essentielle transmise par l’image. Elle peut se composer uniquement de texte ou peut nécessiter un balisage structurel – en-têtes, paragraphes, listes ou tableaux. ",
 href: '../module5/best-practice-mod-5-fr.html#complex'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images complexes"
},{
 categories: 'module5',
 content: "  Pratiques exemplaires – Groupes d’images Lorsqu’un groupe d’images représente un élément d’information unique : utiliser l’attribut alt et du texte de remplacement pour l’une des images, et utiliser l’attribut alt nul (alt='') pour les autres images afin que la technologie d’assistance ne les prenne pas en charge. Lorsqu’un groupe d’images représente une collection : imbriquer chaque image dans un élément de avec un élément enfant et imbriquer toutes les figures dans un élément de figure à un seul parent. Utiliser l’élément pour décrire le contexte. ",
 href: '../module5/best-practice-mod-5-fr.html#groups'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Pratiques exemplaires – Groupes d’images"
},{
 categories: 'module5',
 content: "  Images cliquables Décrire le contexte dans l’attribut alt de l’élément . Décrire chaque région cliquable dans l’attribut alt de l’élément . ",
 href: '../module5/best-practice-mod-5-fr.html#maps'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Images cliquables"
},{
 categories: 'module5',
 content: "  Figure and figcaption Utilisez l’élément pour décrire l’information contextuelle qui n’est pas apparente en regardant l’image. Cela comprend les qui, quoi, quand, où et/ou pourquoi d’une image. N’utilisez pas exactement les mêmes mots pour le texte de remplacement et l’élément . Les logiciels de lecture à l’écran traiteront l’information deux fois. Fournissez toujours un texte de remplacement pour les images même si elles ont un élément . Si vous fournissez un attribut alt vide ou nul, les logiciels de lecture à l’écran ne seront pas en mesure d’annoncer la présence d’une image. ",
 href: '../module5/best-practice-mod-5-fr.html#figure'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Figure and figcaption"
},{
 categories: 'module5',
 content: "  SVG Utiliser l’élément et faire référence au SVG au moyen de l’attribut src. Utiliser l’élément pour intégrer le SVG directement dans le code HTML. Ne pas intégrer le SVG en utilisant ou . Pour les images simples et non compliquées avec texte de remplacement descriptif de base Utiliser les attributs et “src=”. Ajouter role='img' pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser l'attribut alt pour fournir du texte de remplacement (préférable). On peut également utiliser une étiquette aria-label ou aria-labelledby pour fournir du texte de remplacement. Pour les images complexes avec texte de remplacement descriptif long Utiliser l’élément . Ajouter role='img' pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser l’élément pour fournir un texte de remplacement court doit être le premier enfant de son élément parent Le texte apparaîtra sous forme d’infobulle lorsque l’utilisateur placera son pointeur de souris dessus. Utiliser l’élément pour fournir une description de texte plus longue au besoin, pour les images complexes. Le texte d’un élément n’est pas visible. Se reporter à la section Images complexes pour trouver d’autres stratégies concernant l’affichage des descriptions longues. Pour améliorer le soutien à l’accessibilité : Ajouter des valeurs d’identification uniques appropriées à et . Utiliser aria-labelledby pour faire référence aux valeurs d’identification. Masquer les images SVG décoratives en utilisant aria-hidden='true'. Concernant le texte dans SVG : Éviter le texte dans les éléments ou limiter le texte au minimum. Ajouter role='img' pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser l’élément pour fournir un texte de remplacement court doit être le premier enfant de son élément parent Le texte apparaîtra sous forme d’infobulle lorsque l’utilisateur placera son pointeur de souris dessus. Utiliser l’élément pour fournir du texte dans SVG. Pour assurer le soutien à l’accessibilité : Ajouter des valeurs d’identification uniques appropriées à et . Utiliser aria-labelledby pour faire référence aux valeurs d’identification. Mettre du texte à l’extérieur du SVG plutôt qu’à l’intérieur (préférable). Inclure une couleur de fond derrière le texte et d’autres parties importantes de l’image. Concernant l’animation SVG : Utiliser JavaScript ou CSS, et non . Éviter les SVG qui clignotent plus de 3 fois par seconde. Éviter les SVG qui se lisent automatiquement pour éviter de distraire les utilisateurs. Permettre aux utilisateurs de lire et d’interrompre les animations SVG. Utiliser un SVG animé pour un usage précis et non pour distraire. Concernant le SVG interactif : S’assurer que les objets interactifs sont accessibles à l’aide du clavier. S’assurer que les objets interactifs sont accessibles à l’aide de écran tactile. S’assurer que les objets interactifs indiquent le nom, le rôle et la valeur applicables. Veiller à ce que les objets interactifs respectent toutes les directives WCAG 2.1 applicables. ",
 href: '../module5/best-practice-mod-5-fr.html#svg'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " SVG"
},{
 categories: 'module5',
 content: "  CAPTCHA Fournir deux modalités différentes de CAPTCHA. Par exemple, assigner une tâche visuelle, comme taper des mots affichés dans une image, et assigner une tâche audio, comme taper des lettres dictées dans un fichier audio. Fournir un texte alternatif indiquant que le CAPTCHA exige l’exécution d’une tâche en précisant le type de tâche dont il s’agit; par exemple, « Tapez le mot dans l’image » ou « Tapez les lettres dictées dans l’audio ». Lorsqu’une version de remplacement d’un CAPTCHA est disponible, inclure, dans le texte alternatif, des instructions sur la façon de la trouver. Étapes facultatives : Fournir plus de deux modalités de CAPTCHA. Donner accès à un représentant humain du service à la clientèle qui peut contourner le CAPTCHA. Ne pas exiger de CAPTCHA pour les utilisateurs autorisés. Utilisez le reCAPTCHA v3 de Google, si possible. ",
 href: '../module5/best-practice-mod-5-fr.html#captcha'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " CAPTCHA"
},{
 categories: 'module5',
 content: "  Conseils et astuces supplémentaires concernant les images (pratique exemplaire) Prioriser l’information dans un équivalent textuel. Inscrire les renseignements les plus importants au début. Utiliser la ponctuation dans l’équivalent textuel pour faciliter la compréhension de l’information. S’assurer qu’il n’y a pas de caractère d’espace entre les citations de l’équivalent textuel nul (vide) (alt=''). ",
 href: '../module5/best-practice-mod-5-fr.html#tips'  ,
 title: "Pratiques exemplaire – Module 5 - Images" ,
 heading: " Conseils et astuces supplémentaires concernant les images (pratique exemplaire)"
},{
 categories: 'module5',
 content: "  Conception avec CAPTCHA Utilisation des sites Web CAPTCHA protéger leurs systèmes de courrier électronique contre les robots pourrielleurs, en présentant à l’utilisateur une énigme simple qui serait difficile à résoudre pour un robot. CAPTCHA est le sigle de Completely Automated Public Turing test to tell Computers and Humans Apart (Test de Turing public entièrement automatisé permettant de distinguer les ordinateurs et les humains). Début de l’exemple Ce CAPTCHA de « smwm » rend l’interprétation de son message difficile pour un ordinateur en ajoutant un léger gradient de couleur de fond et en torsadant les lettres composant le message. Fin de l’exemple Le principal obstacle de tout CAPTCHA standard est qu’il met à l’épreuve un seul sens (la vue ou ouïe), ce qui exclut les personnes ayant un handicap connexe. Pour rendre le CAPTCHA aussi accessible que possible, les règles WCAG 2.1 exigent l’utilisation de deux techniques et recommandent certaines étapes facultatives pour résoudre les cas critiques : Fournir deux modalités différentes de CAPTCHA. Par exemple, assigner une tâche visuelle, comme taper des mots affichés dans une image, et assigner une tâche audio, comme taper des lettres dictées dans un fichier audio. Fournir un texte alternatif indiquant que le CAPTCHA exige l’exécution d’une tâche en précisant le type de tâche dont il s’agit; par exemple, « Tapez le mot dans l’image » ou « Tapez les lettres dictées dans l’audio ». Lorsqu’une version de remplacement d’un CAPTCHA est disponible, inclure, dans le texte alternatif, des instructions sur la façon de la trouver. Étapes facultatives : Fournir plus de deux modalités de CAPTCHA. Par exemple, un troisième test pourrait consister en un casse-tête logique. Donner accès à un représentant humain du service à la clientèle qui peut contourner le CAPTCHA. Ne pas exiger de CAPTCHA pour les utilisateurs autorisés. La technologie CAPTCHA récente permet de s’assurer qu’un utilisateur est humain en analysant notamment les témoins, les modules d’extension et les objets du langage Java de l’utilisateur : Note préliminaire du consortium W3C Inaccessibilité du CAPTCHA signale que Google reCAPTCHA v2 domine largement le déploiement du CAPTCHA sur le Web et est accessible à la plupart des utilisateurs. Il consiste en une simple case à cocher précisant « Je ne suis pas un robot », alors qu’en arrière-plan le logiciel analyse rigoureusement les données de l’utilisateur. Cela dit, la note préliminaire du consortium W3C signale que la navigation au clavier a été largement considérée comme étant un échec et que les CAPTCHA audio ne sont parfois plus fournis.. Fait intéressant, l’étape 3 facultative consistant à ne pas exiger de CAPTCHA semble réalisable. Le même rapport du consortium W3C offre des « félicitations et des remerciements » pour les événements non-interactifs de Google reCAPTCHA v3, lorsque ça fonctionne. Il supprime la case à cocher v2. Les auteurs du consortium W3C ont deux mises en garde concernant les cas où la version 3 donne lieu à un indice de fiabilité ambigu : Si l’indice est ambigu, Google encourage les utilisateurs à utiliser l’option reCAPTCHA v2 comme sauvegarde, laquelle option comporte certains obstacles signalés. Les méthodes de désambiguïsation d’un indice non interactif ambigu doivent être bien documentées et faciles à mettre en œuvre, sinon les développeurs utiliseront l’ancienne sauvegarde. ",
 href: '../module5/captcha-fr.html#captcha'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Conception avec CAPTCHA"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel ",
 href: '../module5/captcha-fr.html#wcag'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Aperçu - Images complexes Une image complexe contient trop d’informations pour la limite de 150 caractères de l’attribut alt d’un élément img. Les images qui contiennent beaucoup d’informations sont généralement des graphiques, des tableaux, des cartes, des diagrammes et des illustrations qui doivent être compris pour que la page elle-même soit logique. Une image complexe nécessite à la fois une description courte et longue : Une description courte ou un titre décrit l’image et indique l’emplacement de la description longue. Elle est enregistrée dans l’attribut alt de l’élément et ne doit pas dépasser 150 caractères. Une description longue de l’image contient l’information essentielle transmise par l’image. Elle peut comprendre uniquement du texte ou peut nécessiter un balisage structurel – en-têtes, paragraphes, listes ou tableaux. ",
 href: '../module5/complex-images-fr.html#overview'  ,
 title: "Images complexes – Module 5 - Images" ,
 heading: " Aperçu - Images complexes"
},{
 categories: 'module5',
 content: "  Lignes directrices pour la rédaction des descriptions longues Le centre DIAGRAM fournit des directives faisant autorité sur la façon de rédiger de longues descriptions pour les graphiques STIM (science, technologie, ingénierie et mathématiques). La première partie couvre les directives de description qui s’appliquent à tout type d’image. La deuxième partie traite des lignes directrices pour la description des images de différentes catégories, comme les graphiques et les diagrammes. Directives pour la description des images – Centre DIAGRAM Bon exemple : Longue description contenant de l’information structurée Dans cet exemple, alt le texte de remplacement se lit comme suit : “« Histogrammes montrant l’activité physique selon trois groupes d’âge avant la COVID et pendant la COVID. Une longue description suit. ”. » La description longue fournit des renseignements détaillés, y compris les échelles, les valeurs, les relations et les tendances représentées visuellement. Par exemple, la description longue peut indiquer les valeurs décroissantes chez les jeunes, les valeurs constantes chez les adultes (18 à 64 ans) et les valeurs croissantes chez les adultes plus âgés. Cet exemple inclut la description longue dans un gadget logiciel à bascule ou sous le graphique. L'exemple commence L'exemple finit Texte descriptif du graphique 1 Graphique 1 : Pourcentage de jeunes et d’adultes canadiens qui ont déclaré avoir respecté les recommandations en matière d’activité physique au cours d’une semaine donnée; réponses recueillies avant et pendant la pandémie de COVID-19 Aperçu Le graphique compare l’activité physique avant et après la COVID pour trois groupes d’âge. Les jeunes âgés de 12 à 17 ans ont déclaré faire moins d’activité physique; les adultes âgés de 18 à 64 ans ont déclaré faire la même quantité d’activité physique; les adultes âgés de 65 ans et plus ont déclaré faire plus d’activité physique. Les résultats concernant les jeunes et les aînés recueillis à l’automne 2020 sont très différents de ceux recueillis à l’automne 2018 (p < 0.01). Valeurs Valeurs numériques présentées sur l’image: Tableau de données du graphique 1 Automne 2018 (avant la COVID) (pourcentage) Automne 2020 (durant la COVID) (pourcentage) Jeunes (12 à 17 ans) 50.8 37.2 Adultes (18 à 64 ans) 57.1 57.1 Aînés (65 ans et plus) 35.4 40.3 Source: Enquête sur la santé dans les collectivités canadiennes, 2018 et 2020. Source de données pour « Bon exemple: Longue description contenant de l’information structurée »: Youth - but not adults - reported less physical activity during the COVID-19 pandemic (statcan.gc.ca) ",
 href: '../module5/complex-images-fr.html#guidelines'  ,
 title: "Images complexes – Module 5 - Images" ,
 heading: " Lignes directrices pour la rédaction des descriptions longues"
},{
 categories: 'module5',
 content: "  Stratégies à adopter pour fournir des descriptions courtes et longues Stratégie 1 : Un lien texte vers la description longue à côté de l’image Cette approche et ce balisage fonctionnent de façon universelle parmi les agents utilisateurs : Ajouter un lien directement après l’image. Le lien peut cibler une page différente ou la même page. Le texte du lien décrit son objet et son sujet (p. ex., « Description textuelle du sujet X »). Set the image in a element and the link in a element. Définir l’image dans un élément et le lien dans un élément . L’attribut alt de l’élément contient la description courte ou le titre. Dans cette stratégie, le texte de remplacement n’a pas besoin d’indiquer l’emplacement de la description longue (le texte du lien le fait). HTML Début du code Description textuelle de l’histogramme de l’activité physique. Fin du code Stratégie 2 : Bloc détaillé ou sommaire pour la description longue à côté de l’image Semblable à la stratégie 1, mais au lieu d’utiliser un lien, on utilise un élément sommaire qui est situé à côté de l’image et qui s’élargit pour montrer les renseignements détaillés. Le texte de remplacement de l’image mentionne que « La description du texte suit ». L’attribut sommaire doit décrire son objet et son sujet (p. ex., « Description textuelle du sujet X »). Assurez-vous que les titres utilisés dans la description du texte s’intègrent correctement dans la hiérarchie des titres de la page existante. HTML Début du code Description textuelle de l’histogramme de l’activité physique. Graphique 1 : Pourcentage de jeunes et d’adultes canadiens qui ont déclaré avoir respecté les recommandations en matière d’activité physique au cours de la dernière semaine, avant et pendant la pandémie de COVID-19. Aperçu […] Fin du code Stratégie 3 : Association structurelle de l’image et de sa description longue adjacente (HTML5) L’élément contient l’image et sa description longue. Les en-têtes, le texte et le tableau contenant la description longue sont intégrés à l’élément HTML Début du code Aperçu L’histogramme montre l’activité physique selon trois groupes d’âge avant la COVID et pendant la COVID. Valeurs Activité physique selon trois groupes d’âge avant la COVID et pendant la COVID […] Fin du code Stratégie 4 : Fournir un lien menant à la description longue via longdesc L’attribut longdesc de l’élément prend une valeur URI, comme l’attribut href d’un lien. Le lien cible une longue description sur une page Web distincte ou sur la même page. La mise en œuvre du lien incombe à l’agent utilisateur. Par exemple, Firefox fournit un lien « View Description » via le menu contextuel de l’image, tandis que Chrome offre la même fonctionnalité au moyen d’une extension. Puisque l’attribut n’est pas pris en charge (Safari n’a pas de soutien et n’utilise pas non plus les plateformes mobiles), nous ne recommandons pas d’utiliser longdesc. Si vous le faites quand même, utiliser seulement longdesc avec un lien visible redondant positionné sous l’image, conformément à la stratégie 1. HTML Début du code Description du texte Fin du code ",
 href: '../module5/complex-images-fr.html#approaches'  ,
 title: "Images complexes – Module 5 - Images" ,
 heading: " Stratégies à adopter pour fournir des descriptions courtes et longues"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel Techniques G92 : Fournir une longue description d'un contenu non textuel qui remplit la même fonction et présente la même information (en anglais) G73 : Fournir une longue description dans un autre emplacement avec un lien y pointant qui est immédiatement adjacent au contenu non textuel (en anglais) G74 : Fournir une longue description dans le texte près du contenu non textuel avec une référence à l'emplacement de cette longue description dans la description courte (en anglais) ARIA15 : Utiliser aria-descripbedby pour décrire des images (en anglais) ARIA15 has poor user agent support and must only be used with plain text descriptions (containing no structural markup). H45 : Utiliser longdesc (en anglais) Cette technique offre un mauvais soutien aux agents utilisateurs et ne devrait être utilisée qu’avec le technique G73. ",
 href: '../module5/complex-images-fr.html#wcag'  ,
 title: "Images complexes – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec des images décoratives ou redondantes Les images décoratives n’ajoutent pas d’information utile à une page, tandis que les images redondantes ont du contenu déjà transmis dans le texte adjacent. Exemples de décoratives: Images utilisées pour le style visuel comme les bordures et les espaceurs Images utilisées pour ajouter une ambiance ou un intérêt visuel (plaisir des yeux) Une image redondante est adjacente à du texte qui communique déjà l’information transmise par l’image. Par exemple, dans une boutique en ligne, l’image d’un produit se trouve directement au-dessous d’un titre donnant le nom du produit. Un texte de remplacement identifiant le produit serait redondant. Suivez les pratiques exemplaires suivantes pour ce qui a trait aux Images décoratives ou redondantes: Dans la mesure du possible, utiliser des images décoratives comme arrière-plan des feuilles de style en cascades. Ne pas omettre l’attribut alt des éléments . Utiliser des attributs alt null (alt='') pour que la technologie d’assistance n’ait pas accès aux images décoratives our redondantes. L’attribut role=presentation cache également des éléments, même s’il n’est pas aussi largement pris en charge que l’attribut alt null. ",
 href: '../module5/decorative-redundant-images-fr.html#designing'  ,
 title: "Images décoratives ou redondantes – Module 5 - Images" ,
 heading: " Conception avec des images décoratives ou redondantes"
},{
 categories: 'module5',
 content: "  Bon exemple : Image décorative Dans cet exemple, une photo de banque d’images montrant des employés de bureau est considérée comme décorative puisqu’elle ne contient aucun renseignement pertinent pour la page où elle figure. Une photo de banque d’images montrant des employés de diverses ethnies est instructive si l’intention consiste à montrer que l’employeur valorise l’équité, la diversité et l’inclusivité; dans ce cas, le texte de remplacement pourrait ressembler à « Chez [nom de l’organisation], nous valorisons la diversité. » Mais en général, les photos de banque d’images sont décoratives. HTML Début du code Fin du code ",
 href: '../module5/decorative-redundant-images-fr.html#eg1'  ,
 title: "Images décoratives ou redondantes – Module 5 - Images" ,
 heading: "  Bon exemple : Image décorative "
},{
 categories: 'module5',
 content: "  Bon exemple : Image avec équivalent textuel adjacent redondant L’image ci-dessous est déjà suffisamment décrite par le texte adjacent. Une valeur alt nulle (vide) peut être utilisée puisqu’il n’est pas nécessaire de répéter cette information. L'exemple commence À cette époque, un artiste de cirque pouvait contrôler trois chevaux avec leurs rênes, debout sur le dos d’un cheval. L'exemple finit HTML Début du code À cette époque, un artiste de cirque pouvait contrôler trois chevaux avec leurs rênes, debout sur le dos d’un cheval. Fin du code ",
 href: '../module5/decorative-redundant-images-fr.html#eg2'  ,
 title: "Images décoratives ou redondantes – Module 5 - Images" ,
 heading: "  Bon exemple : Image avec équivalent textuel adjacent redondant "
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel Techniques H2 : Combiner en un même lien une image et un intitulé de lien pour la même ressource (en anglais) H67 : Utiliser un attribut alt vide sans attribut title sur un élément img pour les images qui doivent être ignorées par les technologies d'assistance (en anglais) ",
 href: '../module5/decorative-redundant-images-fr.html#wcag'  ,
 title: "Images décoratives ou redondantes – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec des éléments figure et figcaption L’élément HTML peut regrouper un éventail de contenu, y compris des images, des illustrations, des diagrammes, des tableaux et des graphiques. Il peut aussi contenir des vidéos, des citations, des poèmes et des bribes de code. Il peut s’accompagner d’un élément facultatif. L’élément représente une légende visible pour la figure. Il est facultatif et n’est pas obligatoire pour tous les éléments . Bien que l’attribut alt et l’élément constituent des moyens de décrire des images, les objectifs visés sont différents. Le texte de remplacement communique la signification ou le contenu essentiel de l’image dans une courte phrase. La légende fournit un contexte pour décrire l’information qui n’est pas apparente en regardant l’image. Cela comprend les qui, quoi, quand, où et/ou pourquoi d’une image. Pratiques exemplaires relativement à l’utilisation de texte de remplacement et de l’élément : N’utilisez pas exactement les mêmes mots pour le texte de remplacement et l’élément . Les logiciels de lecture à l’écran traiteront l’information deux fois. Fournissez toujours un texte de remplacement pour les images même si elles ont un élément . Si vous fournissez un attribut alt vide ou nul (alt=''), les logiciels de lecture à l’écran ne seront pas en mesure d’annoncer la présence d’une image. ",
 href: '../module5/figcaption-fr.html#designing'  ,
 title: "Figure et figcaption – Module 5 - Images" ,
 heading: " Conception avec des éléments figure et figcaption"
},{
 categories: 'module5',
 content: "  Bon exemple : Figure et figcaption L'exemple commence Rangée de maisons trullo (cabanes en pierre sèche) sur la rue Monte Pertica à Alberobello, dans la province de Bari, en Italie L'exemple finit HTML Début du code Rangée de maisons trullo (cabanes en pierre sèche) sur la rue Monte Pertica à Alberobello, dans la province de Bari, en Italie Fin du code ",
 href: '../module5/figcaption-fr.html#example'  ,
 title: "Figure et figcaption – Module 5 - Images" ,
 heading: "  Bon exemple : Figure et figcaption "
},{
 categories: 'module5',
 content: "  Apercu – Images fonctionnelles Les images fonctionnelles sont utilisées comme boutons, liens et commandes personnalisées. L’image est imbriquée dans la commande. Il importe de s’assurer que la commande porte un nom accessible. Il existe deux stratégies. ",
 href: '../module5/functional-images-fr.html#overview'  ,
 title: "Images fonctionnelles – Module 5 - Images" ,
 heading: " Apercu – Images fonctionnelles"
},{
 categories: 'module5',
 content: "  Stratégie 1 : Fournir un nom accessible en utilisant l’attribut alt de l’élément img Avec cette stratégie, la valeur de alt d’une image fonctionnelle fournit le texte du lien ou le nom de la commande, qui sera lu par le lecteur d’écran. L’équivalent textuel de l’image doit indiquer l’action ou le résultat plutôt que la description littérale de l’image. Les valeurs alt manquantes ou vides dans les images fonctionnelles créent des problèmes importants pour les utilisateurs de lecteurs d’écran. Les boutons et les commandes personnalisées indiquent uniquement leur rôle (p. ex., « bouton », « onglet ») et leur état (p. ex., « élargi »). Les images liées indiquent leur rôle (« lien ») et, en l’absence d’une valeur d’attribut alt, les lecteurs d’écran essaient de deviner et indiquent plutôt le nom du fichier d’image ou le localisateur de ressources uniformes du lien, lequel ne sont pas descriptifs. Bon exemple : Image liée Dans l’exemple ci-dessous, le logo Canada.ca de la bannière renvoie à la page d’accueil Canada.ca. L’élément est imbriqué dans le lien. Le texte de remplacement « Page d’accueil du gouvernement du Canada » fournit le texte du lien. L'exemple commence L'exemple finit HTML Début du code Fin du code Bon exemple : Icône avec texte de remplacement utile imbriqué dans le texte du lien Dans cet exemple, une icône avec le texte de remplacement utile « S’ouvre dans une nouvelle fenêtre » est imbriquée dans le lien avec le texte de lien « Page d’accueil du W3C ». Les utilisateurs du lecteur d’écran entendront « Page d’accueil du W3C, s’ouvre dans une nouvelle fenêtre ». L'exemple commence Page d’accueil du W3C L'exemple finit HTML Début du code Page d’accueil du W3C Fin du code Remarque : Cette technique est souvent utilisée avec des icônes pour indiquer différents formats de fichier comme AVI, ODF, MP3, PDF, Word, etc. Dans ce cas, l’équivalent textuel doit transmettre le format représenté par chaque icône. Bon exemple : Icône fonctionnelle Dans cet exemple, une icône cliquable représentant une imprimante indique une fonction d’impression. Son équivalent textuel est « Imprimer cette page » plutôt que le mot littéral «Imprimante», car le but est d’activer la boîte de dialogue d’impression. L'exemple commence L'exemple finit HTML Début du code Fin du code Bon exemple : Image utilisée dans un bouton L’image suivante est utilisée pour donner au bouton un style distinct. Dans ce cas, il s’agit du bouton permettant de lancer une demande de recherche, et l’icône imbriquée est une loupe. L’équivalent textuel de l’image est « Recherche », pour indiquer la fonction du bouton, plutôt que « loupe ». L'exemple commence Recherche L'exemple finit HTML Début du code Fin du code Bon exemple : Image redondante dans le texte du lien Dans cet exemple, le logo de la société XYZ accompagne un lien texte qui mène à la page d’accueil de la société XYZ. L’image ne représente pas une fonctionnalité différente et ne transmet pas d’autres renseignements que ceux déjà fournis dans le texte du lien. En fait, l’image est une simple aide visuelle associée au texte du lien. Une valeur alt nulle (vide) est appliquée, (alt=''), pour éviter la redondance et la répétition. L'exemple commence Page d’accueil de la compagnie XYZ L'exemple finit HTML Début du code Page d’accueil de la compagnie XYZ Fin du code ",
 href: '../module5/functional-images-fr.html#approach1'  ,
 title: "Images fonctionnelles – Module 5 - Images" ,
 heading: " Stratégie 1 : Fournir un nom accessible en utilisant l’attribut alt de l’élément img"
},{
 categories: 'module5',
 content: "  Stratégie 2 : Fournir un nom accessible en utilisant l’attribut aria-label ou aria-labelledby Avec cette stratégie, une étiquette ARIA sur la commande fournit le nom accessible de l’image fonctionnelle. L’attribut alt de l’élément imbriqué est réglé sur null (vide) : alt=''. L’attribut alt de l’élément enfant pourrait contenir n’importe quelle valeur et cela n’aurait pas d’importance, car cette valeur serait supplantée par l’attribut aria-label ou aria-labelledby, qui a préséance sur le texte enfant lorsqu’on nomme une commande Bon exemple : Nommer une image fonctionnelle à l’aide de l’attribut aria-label Dans cet exemple, un attribut aria-label nomme le bouton plutôt que l’attribut alt de l’élément enfant . L’attribut alt est réglé sur null (vide) : alt=''. HTML Début du code Fin du code Bon exemple : Nommer des images fonctionnelles à l’aide des attributs aria-label et aria-labelled Dans cet exemple, chacun des deux boutons de formatage du texte est accompagné d’un bouton « More » (Lire la suite) identique. Les boutons de formatage sont nommés avec l’attribut aria-label. Les boutons « More » (Lire la suite) sont nommés avec l’attribut aria-labelledby, pointant vers les valeurs id des éléments contenant les fragments d’étiquette souhaités : « Lire la suite » + soit « Bullets » (Puces) soit « Text alignment » (Alignement du texte). L’attribut alt de chaque élément de bouton est réglé sur null (vide) : alt=””. L'exemple commence L'exemple finit HTML Début du code Fin du code Stratégie alternative : Une seule instance de l’étiquette de texte « More » Lorsqu’ils utilisent l’attribut aria-labelledby, les développeurs peuvent préférer cibler une valeur unique d’attribut id cible pour le nom d’une icône répétitive. Cette stratégie permet d’attribuer une valeur d’attribut id à une instance définissant le texte « More » et de régler l’affichage des feuilles de style en cascades à « aucun ». L’attribut aria-labellearia-describedbyode>aria-describedby) peut cibler un élément dont l’affichage est établi à « aucun ». L’attribut aria-labelledby concatène un nom en pointant les valeurs d’attribut id de l’instance qui définit et le bouton partenaire, ce qui donne les étiquettes « More Bullets » et « More Text alignment ». Contrairement à la première stratégie, les boutons « More » n’ont pas besoin d’attributs id ou aria-label, car ils ne contribuent pas à l’étiquette concaténée. HTML Début du code Lire la suite Fin du code ",
 href: '../module5/functional-images-fr.html#approach2'  ,
 title: "Images fonctionnelles – Module 5 - Images" ,
 heading: " Stratégie 2 : Fournir un nom accessible en utilisant l’attribut aria-label ou aria-labelledby"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 3.3.2 : Étiquettes ou instructions Techniques H36 : Utiliser un attribut alt sur une image utilisée comme bouton soumettre (en anglais) H37 : Utiliser l'attribut alt sur l'élément img (en anglais) H67 : Utiliser un attribut alt vide sans attribut title sur un élément img pour les images qui doivent être ignorées par les technologies d'assistance (en anglais) ARIA6 : Utiliser aria-label pour attribuer des étiquettes aux objets (en anglais) ARIA9 : Utiliser aria-labelledby pour concaténer une étiquette provenant de plusieurs nœuds de texte (en anglais) ARIA10 : Utiliser aria-labelledby pour fournir un équivalent textuel pour un contenu non textuel (en anglais) ",
 href: '../module5/functional-images-fr.html#wcag'  ,
 title: "Images fonctionnelles – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec des groupes d’images Les groupes d’images représentent soit un élément d’information unique, comme une norme de classement par nombre d’étoiles, soit une collection d’images, comme une galerie. Suivez les pratiques exemplaires suivantes pour ce qui a trait aux groupes d’images: Lorsqu’un groupe d’images représente un élément d’information unique: utiliser l’attribut alt et du texte de remplacement pour l’une des images, et utiliser l’attribut alt nul (alt='') pour les autres images afin que la technologie d’assistance ne les prenne pas en charge. Lorsqu’un groupe d’images représente une collection : Imbriquer chaque image dans un élément de avec un élément enfant et imbriquer toutes les dans un élément de figure à parent unique. Utiliser l’élément pour décrire le contexte. ",
 href: '../module5/groups-images-fr.html#designing-with-group'  ,
 title: "Groupes d’images – Module 5 - Images" ,
 heading: " Conception avec des groupes d’images"
},{
 categories: 'module5',
 content: "  Bon exemple : Groupe d’images représentant un élément d’information unique Une norme de classement par nombre d’étoiles consiste en une image qui montre 5 étoiles, mais dont le texte de remplacement ne doit communiquer qu’un seul message, soit le nombre d’étoiles sur 5. L'exemple commence Rating: L'exemple finit HTML Début du code Rating: Fin du code ",
 href: '../module5/groups-images-fr.html#example1'  ,
 title: "Groupes d’images – Module 5 - Images" ,
 heading: "  Bon exemple : Groupe d’images représentant un élément d’information unique "
},{
 categories: 'module5',
 content: "  Bon exemple : Un groupe d’images représentant une collection Une collection d’images peut être une galerie, auquel cas chaque image a besoin de son propre texte de remplacement, et le groupe lui-même a besoin d’un texte de remplacement. Dans cet exemple, la contient l’élément , et la fournit une légende pour chaque image d’une collection. L’élément peut être emboîté, le parent fournissant une légende pour toute la collection d’images. L'exemple commence Les châteaux à travers les âges : 1423, 1756 et 1936 Charbon sur bois. Anonyme, vers 1423. Peinture à base d’huile sur toile. Eloisa Faulkner, 1756. Photographie analogique. Séraphin Médéric Mieusement, 1936. L'exemple finit HTML Début du code Les châteaux à travers les âges : 1423, 1756 et 1936 Charbon sur bois. Anonyme, vers 1423. Peinture à base d’huile sur toile. Eloisa Faulkner, 1756. Photographie analogique.. Séraphin Médéric Mieusement, 1936. Fin du code Les exemples sont tirés du document de l’Initiative d’accessibilité du Web (IAT) : Groupes d’images (IAT) (en anglais seulement) du tutoriel Concepts visant les images. Eric Eggert et Shadi Abou-Zahra, eds. Copyright © 2019 W3C® (MIT, ERCIM, Keio). Statut : Ébauche mise à jour le 27 juillet 2019. ",
 href: '../module5/groups-images-fr.html#example2'  ,
 title: "Groupes d’images – Module 5 - Images" ,
 heading: "  Bon exemple : Un groupe d’images représentant une collection "
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel Techniques G196 : Utiliser un équivalent textuel sur un item d'un groupe d'images pour décrire l'ensemble des items du groupe (en anglais) ",
 href: '../module5/groups-images-fr.html#wcag'  ,
 title: "Groupes d’images – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec des images cliquables Une image cliquable relie les zones géométriques d’une image. Elle comprend un élément et un élément . L’élément utilise son attribut usemap='IDREF' pour faire référence à la valeur d’attribut id de l’élément . Les éléments contiennent à leur tour des éléments qui définissent chacun une zone cliquable de l’image et servent de liens. Suivez les pratiques exemplaires suivantes pour ce qui a trait aux images cliquables: Décrire le contexte dans l’attribut alt de l’élément source Describe each clickable region in the element’s alt attribute. ",
 href: '../module5/image-maps-fr.html#designing-with-image-maps'  ,
 title: "Images Iconocartes – Module 5 - Images" ,
 heading: " Conception avec des images cliquables"
},{
 categories: 'module5',
 content: "  Bon exemple : Images cliquables L'exemple commence Veuillez sélectionner une forme : L'exemple finit HTML Début du code Veuillez sélectionner une forme : Fin du code L’exemple d’image cliquable provient du document WHATWG : 4.8.15: Image maps tiré de HTML Living Standard (en anglais seulement). Statut : Ébauche mise à jour le 12 octobre 2021. ",
 href: '../module5/image-maps-fr.html#example1'  ,
 title: "Images Iconocartes – Module 5 - Images" ,
 heading: "  Bon exemple : Images cliquables "
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 2.4.4 : Fonction du lien (selon le contexte) Techniques H24 : Fournir un équivalent textuel pour l'élément area d'une image à zones cliquables (en anglais) ",
 href: '../module5/image-maps-fr.html#wcag'  ,
 title: "Images Iconocartes – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Éviter les images de texte Les images de texte sont plus susceptibles de se déformer et de pixéliser lorsqu’elles sont redimensionnées, et elles peuvent être problématiques pour les utilisateurs d’appareils mobiles et les utilisateurs malvoyants. Dans les situations où des images de texte doivent être utilisées, l’équivalent textuel doit contenir le même texte que celui présenté dans l’image. Il est recommandé d’utiliser du texte réel, formaté et stylé avec des feuilles de style en cascades pour s’adapter au concept plutôt qu’une image de texte. Le texte réel peut être modifié et redimensionné sans perdre de clarté en fonction des préférences de lecture des utilisateurs, et il est plus souple à utiliser que les images. À moins que le texte sous forme d’image soit essentiel ou personnalisable, les images ne doivent pas comporter de texte informatif. Le texte faisant partie d’un logo ou d’un nom de marque est considéré comme essentiel. Exemple type : Texte stylé avec des feuilles de style en cascades (CSS) Dans cet exemple, on utilise du texte réel stylé avec des feuilles de style en cascades plutôt qu’une image de texte. Les propriétés CSS sont entièrement responsables du style, de l’espacement et de la mise en page des polices et du texte. L'exemple commence L'accessibilité au bout de vos doigts L'exemple finit CSS Début du code L'accessibilité au bout de vos doigts .checker { border: 2px solid black; background: #aa061a; margin: auto; padding: 20px; padding-top:10px; text-align: center; text-shadow: 5px 5px 5px #620915; font-size:35px; color:white; } Fin du code Mauvais exemple : Image de texte Éviter les images de texte à moins qu’elles ne soient essentielles (comme un logo) ou personnalisables. Dans l’exemple ci-dessous, trois liens emboîtent des images de texte. Les utilisateurs de dispositifs de grossissement d’écran peuvent avoir de la difficulté à lire une image de texte lorsqu’elle est agrandie et pixélisée, comme le montre l’image ci-dessous. ",
 href: '../module5/images-text-fr.html#avoid'  ,
 title: "Images de texte – Module 5 - Images" ,
 heading: " Éviter les images de texte"
},{
 categories: 'module5',
 content: "  Expressions mathématiques Conception avec des expressions mathématiques Le langage HTML ne comporte pas de balises pour les expressions mathématiques en tant que structures, et il n’existe aucun moyen simple de produire des éléments essentiellement bidimensionnels au-delà de la mise en indice supérieur ou de la mise en indice. Il existe deux stratégies: Utiliser une image avec texte de remplacement ou une longue description de l’expression mathématique. Étiqueter l’expression mathématique sémantiquement dans MathML et utiliser une bibliothèque mathématique JavaScript. Stratégie 1 : Utiliser une image avec texte de remplacement décrivant l’expression mathématique Les images d’expressions mathématiques ne doivent être utilisées que lorsque les mathématiques font exception au contenu ordinaire du site Web. Dans ce cas, la valeur de l’attribut alt de l’élément img doit communiquer l’expression mathématique, sauf si plus de 150 caractères sont requis, auquel cas il faut utiliser une description longue. L'exemple commence L'exemple finit HTML Début du code Fin du code Stratégie 2 : Utiliser MathML La méthode privilégiée pour saisir des expressions mathématiques en tant que contenu sémantique et accessible est le langage de balisage MathML. Le balisage MathML permet aux agents utilisateurs de déterminer la structure des expressions mathématiques d’une façon lisible par machine. La plupart des navigateurs Web ont besoin de modules d’extension pour bien rendre MathML aux fins de présentation, comme la bibliothèque de source ouverte MathJax de source ouverte, qui offre un soutien pour l’affichage et d’autres fonctions d’accessibilité. Les bibliothèques de mathématiques de JavaScript prennent généralement en charge les expressions mathématiques rédigées en Tex et LaTeX et AsciiMath, pas seulement MathML. Dans l’exemple ci-dessous, MathML communique une expression mathématique avec un balisage sémantique et une syntaxe adaptée aux technologies d’assistance comme les lecteurs d’écran. MathJax offre un bon rendu pour l’écran avec la composition appropriée. L'exemple commence E= 2πh c 2 λ 5 ( e hc−λ k b T −1 ) L'exemple finit Voir le MathML Début du code […] E= 2πh c 2 λ 5 ( e hc−λ k b T −1 ) Fin du code Source: MathML test page (en anglais seulement) ",
 href: '../module5/images-text-fr.html#math'  ,
 title: "Images de texte – Module 5 - Images" ,
 heading: " Expressions mathématiques"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.4.5 : Texte sous forme d'image Techniques C22 : Utiliser les CSS pour contrôler la présentation visuelle du texte (en anglais) G94 : Fournir un court équivalent textuel pour un contenu non textuel qui a la même fonction et présente la même information que le contenu non textuel (en anglais) ",
 href: '../module5/images-text-fr.html#wcag'  ,
 title: "Images de texte – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Pratiques exemplaires pour les images informatives Les images informatives véhiculent des renseignements simples qui peuvent être exprimés dans une courte phrase. L’équivalent textuel doit transmettre le sens ou le contenu essentiel de l’image. Suivez les pratiques exemplaires suivantes pour ce qui a trait aux images informatives: Utiliser l’attribut alt de l’élément img pour fournir un équivalent textuel. Fournir des équivalents textuels significatifs qui transmettent l’intention, le but et le sens de l’image. Ne pas inclure les mots « image de » ou « graphique » dans le texte de remplacement. Les lecteurs d’écran déclarent le rôle d’une image (soit « image de » ou « graphique »); les utilisateurs n’ont pas besoin de cette information dans l’équivalent textuel. Le texte de remplacement doit être concis et comporter moins de 150 caractères. Lorsqu’une image contient des mots importants pour la compréhension du contenu, le texte de remplacement doit inclure ces mots. ",
 href: '../module5/informative-images-fr.html#informative-img'  ,
 title: "Images informatives – Module 5 - Images" ,
 heading: " Pratiques exemplaires pour les images informatives"
},{
 categories: 'module5',
 content: "  Bon exemple : Images utilisées pour compléter d’autres renseignements L’image suivante montre un chien portant une clochette. Elle complète le texte adjacent qui explique le rôle de cette clochette. Un court équivalent textuel suffit pour décrire l’information qui est affichée visuellement, mais qui n’est pas expliquée dans le texte; dans ce cas, l’équivalent textuel est « Chien avec une clochette attachée à son collier ». Remarque : Si le texte adjacent comprenait une explication de la façon dont le chien porte la clochette ('attachée à son collier'), l’image serait considérée comme redondante. Comme ce n’est pas mentionné dans le texte, l’image est considérée comme informative. L'exemple commence Les chiens-guides qui ne sont pas en service portent souvent une clochette dont le bruit aide le propriétaire aveugle à repérer l’emplacement du chien. L'exemple finit HTML Début du code Les chiens-guides qui ne sont pas en service portent souvent Fin du code Cet exemple est tiré des tutoriels sur l’accessibilité du Web de l’IAW : Images informatives. Eric Eggert, Shadi Abou-Zahra, éd. Copyright © 2019 W3C® (MIT, ERCIM, Keio, Beihang). Statut : Mise à jour le 27 juillet 2019. Images informatives (IAW�) ",
 href: '../module5/informative-images-fr.html#eg'  ,
 title: "Images informatives – Module 5 - Images" ,
 heading: "  Bon exemple : Images utilisées pour compléter d’autres renseignements"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.4.5 : Texte sous forme d'image Techniques G94 : Fournir un court équivalent textuel pour un contenu non textuel qui a la même fonction et présente la même information que le contenu non textuel (en anglais) H37 : Utiliser l'attribut alt sur l'élément img (en anglais) ",
 href: '../module5/informative-images-fr.html#wcag'  ,
 title: "Images informatives – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Conception avec images SVG SVG signifie Scalable Vector Graphics (Graphiques vectoriels adaptables). Les SVG sont des images 2Ds définies dans des fichiers texte XML. Ils peuvent être recherchés, indexés, scénarisés et comprimés. Les SVG peuvent aussi être dynamiques, interactifs et animés. Créés en 1999, ils sont maintenant bien pris en charge par les navigateurs. Quelques avantages des SVG en matière d’accessibilité : Les SVG peuvent atteindre n’importe quelle taille sans perte en qualité. Les couleurs SVG sont facilement personnalisables par le créateur et l’utilisateur final. Les SVG prennent en charge le balisage et les caractéristiques d’accessibilité. Cette image illustre la différence entre les images bitmap et les images vectorielles. L’image bitmap, appelée image tramée, est composée d’un ensemble fixe de pixels, tandis que l’image vectorielle est composée d’un ensemble fixe de formes. Dans cette image, la mise à l’échelle de l’image bitmap révèle les pixels tandis que la mise à l’échelle de l’image vectorielle préserve les formes: L'exemple commence Illustration de la différence entre les images bitmap et vectorielles. La mise à l’échelle de l’image bitmap révèle des pixels tandis que la mise à l’échelle de l’image vectorielle préserve les formes. Raster Vector GIF, JPEG, PNG SVG L'exemple finit Contributeurs de Wikipédia. (4 novembre 2021) Graphiques vectoriels adaptables. Wikipédia. Récupéré le 17 novembre 2021 sur le site Scalable Vector Graphics Il existe deux façons d’ajouter des SVG à une page accessible : Utiliser l’élément et faire référence au fichier SVG au moyen de l’attribut src. Utiliser l’élément pour intégrer le SVG directement dans le code HTML. La troisième façon d’ajouter le SVG à une page et de l’imbriquer dans un élément ou est mal prise en charge par les technologies d’assistance. Ne pas intégrer le SVG en utilisant ou ",
 href: '../module5/svg-images-fr.html#designing-with-SVG'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Conception avec images SVG"
},{
 categories: 'module5',
 content: "  Technique 1 : Utiliser l’élément img pour faire référence au SVG au moyen de l’attribut src À utiliser pour les images simples et non compliquées avec texte de remplacement descriptif de base. Utiliser l’élément et l’attribut src. Ajouter role='img' l’attribut pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser l’attribut alt pour fournir du texte de remplacement (préférable). Peut également utiliser une étiquette aria-label ou aria-labelledby pour fournir du texte de remplacement. L'exemple commence L'exemple finit HTML Début du code Fin du code ",
 href: '../module5/svg-images-fr.html#technique1'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Technique 1 : Utiliser l’élément img pour faire référence au SVG au moyen de l’attribut src"
},{
 categories: 'module5',
 content: "  Technique 2 : Utiliser l’élément pour intégrer le SVG directement (en ligne) dans le code HTML À utiliser pour des images simples et plus complexes. Le SVG en ligne peut être animé et manipulé par CSS et JavaScript. Utiliser l’élément. Ajouter role='img' pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser pour fournir un court texte de remplacement. odoit être le premier enfant de son élément parent. Le texte apparaîtra sous forme d’infobulle lorsque l’utilisateur placera son pointeur de souris dessus. Utiliser l’élément pour fournir une description de texte plus longue au besoin, pour les images complexes. Le texte d’un élément n’est pas visible. Se reporter à la section Images complexes pour trouver d’autres stratégies concernant l’affichage des descriptions longues. Pour améliorer le soutien à l’accessibilité : Ajouter des valeurs uniques d’attribut id aux éléments et . Ajouter un attribut aria-labelledby à l’élément SVG faisant référence aux valeurs de l’attribut id. L'exemple commence carré rouge Image SVG d’un carré rouge avec bordure noire L'exemple finit SVG Début du code carré rouge Image SVG d’un carré rouge avec bordure noire Fin du code Source de l’image: Wikimedia Red square ",
 href: '../module5/svg-images-fr.html#technique2'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Technique 2 : Utiliser l’élément pour intégrer le SVG directement (en ligne) dans le code HTML"
},{
 categories: 'module5',
 content: "  SVG décoratif Les images SVG décoratives n’ajoutent pas de renseignements utiles à une page. Exemples: images utilisées pour le style (bordures) ou pour l’ambiance ou l’intérêt visuel (plaisir des yeux). Masquer les images SVG décoratives en utilisant l’attribut aria-hidden='true'. HTML Début du code Fin du code ",
 href: '../module5/svg-images-fr.html#decorative-svg'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " SVG décoratif"
},{
 categories: 'module5',
 content: "  Texte dans SVG Le texte inclus dans les éléments s’adapte bien et reste net lorsqu’il est grossi. Toutefois, les lecteurs d’écran lisent tous les éléments de texte d’un SVG comme une chaîne de texte continue. Cela peut prêter à confusion si les éléments de texte sont censés identifier différentes parties de l’image et ne doivent pas être lus en une seule chaîne. Suivez les pratiques exemplaires suivantes: Éviter d’inclure du texte dans les éléments ou limiter le texte au minimum. Placer le texte à l’extérieur du SVG (préférable) plutôt qu’à l’intérieur. Ajouter role='img' pour améliorer le soutien à l’accessibilité. Fournir un équivalent textuel qui communique la même intention et le même sens que l’image. Utiliser l’élément pour fournir un court texte de remplacement. doit être le premier enfant de son élément parent. Le texte apparaîtra sous forme d’infobulle lorsque l’utilisateur placera son pointeur de souris dessus. Utiliser l’élément pour fournir du texte dans SVG. Pour assurer le support du lecteur d’écran : Ajoutez des valeurs d’identification uniques aux et . Utiliser aria-labelledby pour faire référence aux valeurs d’id. L'exemple commence Un rectangle bordé de rouge avec texte à l’intérieur Bonjour le monde! L'exemple finit SVG Début du code Un rectangle bordé de rouge avec texte à l’intérieur Bonjour le monde! Fin du code ",
 href: '../module5/svg-images-fr.html#text-svg'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Texte dans SVG"
},{
 categories: 'module5',
 content: "  Contraste de couleurs SVG Les utilisateurs peuvent modifier des thèmes de couleur sur leur ordinateur (p. ex., mode à contraste élevé de Windows) pour modifier le texte et la couleur de l’arrière-plan afin de faciliter la lecture du contenu. Si l’image SVG contient du texte sans couleur d’arrière-plan, le texte peut devenir difficile à lire selon les changements d’arrière-plan faits par l’utilisateur. Inclure une couleur de fond derrière le texte et d’autres parties importantes de l’image. ",
 href: '../module5/svg-images-fr.html#contrast'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Contraste de couleurs SVG"
},{
 categories: 'module5',
 content: "  Animation SVG Utiliser JavaScript ou CSS, et non . Éviter les SVG qui clignotent plus de 3 fois par seconde. Éviter les SVG qui se lisent automatiquement pour éviter de distraire les utilisateurs. Permettre aux utilisateurs de lire et d’interrompre les animations SVG. Utiliser un SVG animé pour un usage précis et non pour distraire. ",
 href: '../module5/svg-images-fr.html#animation'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Animation SVG"
},{
 categories: 'module5',
 content: "  SVG interactif S’assurer que les objets interactifs sont accessibles à l’aide du clavier. S’assurer que les objets interactifs sont accessibles à l’aide de l’écran tactile. S’assurer que les objets interactifs indiquent le nom, le rôle et la valeur applicables. Veiller à ce que les objets interactifs respectent toutes les directives WCAG 2.1 applicables. ",
 href: '../module5/svg-images-fr.html#interactive'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " SVG interactif"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel ",
 href: '../module5/svg-images-fr.html#wcag'  ,
 title: "Images de SVG – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module5',
 content: "  Fournir des équivalents textuels Les images qui véhiculent de l’information doivent avoir un équivalent textuel. Les équivalents textuels rendent l’information accessible parce que le texte peut être modifié et prendre d’autres formes adaptées aux personnes, comme les gros caractères, le braille, la parole, les symboles ou un langage plus simple. Les images accessibles présentent de nombreux avantages: Une personne ayant une déficience visuelle peut utiliser un lecteur d’écran pour lire l’équivalent textuel des images. Une personne ayant un trouble moteur peut utiliser un logiciel de saisie vocale pour mettre l’accent sur un lien d’image. Une personne ayant un trouble d’apprentissage peut utiliser un logiciel de lecture pour lire du texte à voix haute. Les images peuvent être indexées par des moteurs de recherche. Il est important que l’équivalent textuel communique la même intention et le même sens (but équivalent) que l’image. Le contexte doit donc être pris en considération : les images peuvent parfois sembler décoratives, mais elles véhiculent de l’information, et vice versa. Les testeurs ne doivent jamais hésiter à poser des questions à l’auteur du contenu quant au but des images. ",
 href: '../module5/text-alternatives-fr.html#alt'  ,
 title: "Équivalent textuels – Module 5 - Images" ,
 heading: " Fournir des équivalents textuels"
},{
 categories: 'module5',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.4.5 : Texte sous forme d'image ",
 href: '../module5/text-alternatives-fr.html#wcag'  ,
 title: "Équivalent textuels – Module 5 - Images" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Commandes d’étiquetage Fournir des étiquettes pour décrire la fonction de commande de formulaire. Utiliser l’élément pour associer explicitement une commande de formulaire à une étiquette Associer exactement l’attribut for de l’étiquette à l’attribut id de la commande de formulaire. Voici les éléments qui utilisent des étiquettes explicitement associées : (champs de sélection de fichier) (listes déroulantes) Ne pas utiliser l’élément pour les éléments suivants. Boutons Soumettre et Réinitialisation ( ou ) Étiquette fournie par l’attribut value Boutons image () Étiquette fournie par l’attribut alt Champs de saisie masqué () Boutons (éléments de bouton ou ) Étiquette fournie par le contenu de l’élément lui-même (bouton) ou par l'attribut value, aria-label ou aria-labelledby Utiliser des étiquettes ARIA (les attributs aria-labelledby ou aria-label) lorsqu’il n’est pas possible d’utiliser Lorsque vous utilisez des étiquettes ARIA, ajouter tout texte visible dans l’étiquette de commande. Utiliser l’attribut aria-labelledby pour récupérer une étiquette du contexte ou pour concaténer une étiquette d’un ou de plusieurs éléments du contexte. Éviter d’utiliser l’attribut title pour identifier les commandes de formulaire. Ce n’est pas largement pris en charge par AT. Le texte de l’étiquette doit être court et concis. Utiliser un texte d’étiquette unique sur une page. Placer les étiquettes visuellement à droite des boutons radio et des cases à cocher. Placer les étiquettes de façon visuelle, directement au-dessus des champs de formulaire (de préférence par la BOEW) ou à gauche, aligné à droite (solution de rechange à la BOEW, lorsqu’il faut conserver un espace vertical). ",
 href: '../module6/best-practice-mod-6-fr.html#labelling-controls'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Commandes d’étiquetage"
},{
 categories: 'module6',
 content: "  Regroupement des commandes Utiliser l’élément pour regrouper les commandes connexes dans un formulaire. Utiliser l’élément pour nommer l’élément . Faire en sorte que la legend soit aussi courte que possible, car certaines technologies d’assistance la déclarent avec l’étiquette chaque fois. Rendre les étiquettes individuelles explicites, car certaines technologies d’assistance ne déclarent pas la . Ne pas répéter la legend dans chaque étiquette. Utiliser l’élément pour les éléments avec groupes d’options. Utiliser les attributs ARIA role='group' et aria-labelledby pour regrouper et étiqueter les éléments de formulaire lorsque vous ne pouvez pas utiliser des éléments HTML natifs et . Utiliser dans la mesure du possible pour prendre en charge le navigateur universel et le lecteur d’écran. ",
 href: '../module6/best-practice-mod-6-fr.html#grouping-controls'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Regroupement des commandes"
},{
 categories: 'module6',
 content: "  Instruction relative au formulaire Fournir les instructions générales qui s’appliquent à l’ensemble du formulaire et les fournir avant l’élément . Cela permet aux utilisateurs du lecteur d’écran de consulter l’information avant de passer aux modes formulaires. Utiliser aria-labelledby ou aria-describedby pour fournir des instructions à l’extérieur des étiquettes. Indiquer le type de champ de saisie du formulaire (p. ex., type= “email”) afin que les navigateurs et les technologies d’assistance puissent fournir des aides à la saisie comme des claviers personnalisés, des étiquettes de remplissage automatique et des icônes. Indiquer les saisies, les formats de données et les autres renseignements pertinents requis. S’assurer que le texte des attributs d’espace réservé respecte un rapport de contraste minimal de 4,5:1. ",
 href: '../module6/best-practice-mod-6-fr.html#form-instruction'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Instruction relative au formulaire"
},{
 categories: 'module6',
 content: "  Validation des saisies Valider les données utilisateur à l’aide des attributs de validation des éléments de formulaire HTML5. Les attributs de validation communs comprennent required, type, pattern, et les attributs min et max requis. Valider les données du côté client et du côté serveur pour assurer la sécurité. Identifier les champs de formulaire requis à la fois visuellement dans l’étiquette et sémantiquement. Utiliser les types de données HTML5 pour valider différents types de données, y compris l’adresse courriel, l’adresse URL, le numéro, le numéro de téléphone, la date et la plage. Valider la saisie structurée en utilisant l’attribut structure pour spécifier une expression régulière pour l’appariement. Valider la longueur des entrées en utilisant les attributs minlength, maxlength, min et max Tenir compte autant que possible des différents formats de saisie. Permettre à vos utilisateurs de vérifier et de corriger leurs saisies afin de réduire les erreurs. Exiger la confirmation de l’utilisateur pour les actions irréversibles. Offrir une fonction d’annulation pour s’assurer que les soumissions sont réversibles. ",
 href: '../module6/best-practice-mod-6-fr.html#validating-input'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Validation des saisies"
},{
 categories: 'module6',
 content: "  Avis aux utilisateurs Lorsqu’un utilisateur soumet un formulaire, l’aviser de la réussite ou de toute erreur. S’assurer que les messages d’erreur sont clairs et concis, et fournissent des instructions simples pour corriger l’erreur. Fournir une rétroaction dans l’en-tête principal, dans l’élément du titre, sous forme de liste d’erreurs avant le formulaire, ainsi qu’en ligne, associée au programme à la commande du formulaire. Les erreurs énumérées avant le formulaire devraient : Faire référence au label de la commande de formulaire correspondant. Fournir une description concise et facile à comprendre de l’erreur. Indiquer comment corriger les erreurs et rappeler aux utilisateurs les exigences en matière de format; Inclure dans la page un lien vers la commande de formulaire correspondant pour faciliter l’accès. ",
 href: '../module6/best-practice-mod-6-fr.html#user-notifications'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Avis aux utilisateurs"
},{
 categories: 'module6',
 content: "  Formulaires en plusieurs étapes Diviser le formulaire en fonction de ses groupes de commandes logiques (p. ex., coordonnées et questionnaire). Valider l’étape en cours avant d’exposer la suivante. Étiqueter les étapes facultatives et permettre aux utilisateurs de les sauter. S’assurer que la cible du clavier se déplace facilement d’une étape à l’autre, vers l’arrière et vers l’avant. À une nouvelle étape, cibler de préférence le prochain élément de formulaire pertinent, ou l’en-tête ou le conteneur pertinent. Éviter d’imposer une limite de temps pour remplir le formulaire. Si une limite est requise, permettre à l’utilisateur de la modifier ou de la prolonger. Si les étapes se trouvent sur plusieurs pages, répéter les instructions générales sur chaque page. Indiquer la progression dans le formulaire (« Étape x de y »). ",
 href: '../module6/best-practice-mod-6-fr.html#multi-step'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Formulaires en plusieurs étapes"
},{
 categories: 'module6',
 content: "  Commandes personnalisées Dans la mesure du possible, utiliser des éléments de formulaire HTML natifs plutôt que des commandes personnalisées. Modéliser le comportement d’après les éléments de formulaire HTML natifs. Ajoutez un nom, un rôle et des valeurs ARIA appropriés, au besoin. Communiquer des mises à jour et des changements d’état par l’entremise de messages ARIA live lorsqu’ils ne peuvent pas être communiqués par l’entremise de méthodes HTML ou ARIA. ",
 href: '../module6/best-practice-mod-6-fr.html#custom-control'  ,
 title: "Pratique exemplaire - Module 6 - Formulaires" ,
 heading: " Commandes personnalisées"
},{
 categories: 'module6',
 content: "  Conception de contrôles personnalisés Cette section donne un aperçu de haut niveau des éléments à prendre en considération lors de l’élaboration de commandes de formulaire personnalisées. La Spécification ARIA et les Pratiques de rédaction ARIA expliquent comment utiliser ARIA (Accessible Rich Internet Applications) pour créer des widgets personnalisés. Les pratiques de rédaction décrivent le comportement attendu des widgets du clavier et de la cible, ainsi que des exemples et le code. Voir le module 12 pour une discussion sur les widgets JavaScript personnalisé. Suivez les pratiques exemplaires suivantes pour les commandes personnalisées : Dans la mesure du possible, utiliser des éléments de formulaire HTML natifs plutôt que des commandes personnalisées. Modéliser le comportement d’après les éléments de formulaire HTML natifs. Ajouter un nom, un rôle et des valeurs ARIA appropriés. Communiquer des mises à jour et des changements d’état par l’entremise de messages en direct sur ARIA lorsqu’ils ne peuvent pas être communiqués par l’entremise de méthodes HTML ou ARIA ",
 href: '../module6/custom-controls-fr.html#design'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: " Conception de contrôles personnalisés"
},{
 categories: 'module6',
 content: "  Dans la mesure du possible, utiliser un élément de formulaire HTML natif plutôt qu’une commande personnalisée. Les liens HTML standard et les commandes de formulaire n’ont pas besoin de JavaScript personnalisé pour fonctionner. Ils fonctionnent immédiatement, recevant la cible et répondant aux frappes du clavier. Les utilisateurs comprennent déjà ces éléments; il n’est donc pas nécessaire de fournir des instructions. ",
 href: '../module6/custom-controls-fr.html#native-html'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: "  Dans la mesure du possible, utiliser un élément de formulaire HTML natif plutôt qu’une commande personnalisée. "
},{
 categories: 'module6',
 content: "  Modéliser le comportement d’après les éléments de formulaire HTML natifs. Si vous créez une version personnalisée d’un élément de formulaire natif, modélisez-le d’après l’élément original, y compris la duplication du comportement attendu du clavier (p. ex., les commandes reçoivent la cible, les boutons sont activés avec la touche d’espacement ou d’entrée, les cases à cocher sont cochées ou décochées à l’aide de la touche d’espacement, les boutons radio sont sélectionnés avec la touche fléchée). Si votre élément de formulaire doit être différent des éléments de formulaire natifs, les éléments de formulaire HTML natifs sont encore un modèle de comportement souhaitable au clavier. Assurez-vous que tous les boutons fonctionnent avec la touche Entrée et la barre d’espacement. Mettez en place des touches fléchées que les utilisateurs pourraient s’attendre à utiliser. Voir les interactions au clavier des modèles de widgets et des rôles ARIA dans les Pratiques de rédaction ARIA. Réfléchissez à deux fois avant de créer une commande personnalisée. Il peut s’agir d’un travail considérable, comme le décrit le tutoriel du Mozilla Developer Network How to build custom form controls (Comment construire des widgets de formulaires personnalisés), qui consiste à créer un élément personnalisé . ",
 href: '../module6/custom-controls-fr.html#model'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: " Modéliser le comportement d’après les éléments de formulaire HTML natifs."
},{
 categories: 'module6',
 content: "  Ajouter le bon ARIA name, role, and values Les utilisateurs de lecteurs d’écran se fient à quelques éléments d’information clés pour comprendre une interface. Critère de succès 4.1.2 des WCAG : Nom, rôle, valeur expliquez-les en détail : Pour tous les composants d’interface utilisateur (y compris, sans s’y limiter, les éléments de formulaire, les liens et les composants générés par les scripts), le nom et le rôle peuvent être déterminés par un programme; les états, les propriétés et les valeurs pouvant être définies par l’utilisateur peuvent être définies par un programme; et les avis de modification touchant ces éléments sont mis à la disposition des agents utilisateurs, y compris des technologies d’assistance. Name Le nom définit l’étiquette de l’élément (p. ex., « précédent », ou « suivant » ou « enregistrer » ou « soumettre »). Une commande personnalisée définit souvent le nom au moyen de l’attribut aria-label ou aria-labelledby. Role Le rôle définit ce qu’est ou fait le widget. La spécification ARIA définit une liste de rôles parmi lesquels choisir, comme « case à cocher », « groupe radio » ou « barre de défilement » ou « tabulateur ». Value La valeur, parfois plusieurs valeurs, définit les « états » dynamiques et les « propriétés » statiques de la commande : States Les « états » sont des attributs ARIA avec des valeurs que le script met à jour en réaction à l’utilisateur. Par exemple, aria-selected='true', aria-expanded='false' et la valeur en pourcentage d’une barre de défilement. Properties Les « propriétés » sont des attributs ARIA dont les valeurs ont tendance à ne pas changer. Par exemple, aria-labelledby ou aria-describedby ou aria-required. ",
 href: '../module6/custom-controls-fr.html#aria'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: " Ajouter le bon ARIA name, role, and values"
},{
 categories: 'module6',
 content: "  Communiquer des mises à jour et des changements d’état par l’entremise de messages en direct sur ARIA lorsqu’ils ne peuvent pas être communiqués par l’entremise de méthodes HTML ou ARIA Lorsque les états HTML et ARIA disponibles ne sont pas suffisamment descriptifs, ajouter une zone live ARIA pour décrire aux utilisateurs d’un lecteur d’écran ce qui se passe. Une zone live ARIA peut annoncer une modification personnalisée de la valeur comme « Tableau trié par titre, croissant » ou « Résultats filtrés par zone », etc. Bon exemple : Un bouton Partager personnalisé Dans cet exemple, un bouton Partager de média social comporte deux fonctions : montrer combien de personnes ont déjà activé le bouton (« partagé ») et permettre aux utilisateurs d’appuyer sur le bouton pour activer la fonction de partage. Lorsque le bouton est activé : Le nombre augmente de un. Le nom accessible passe de « 3 partages » à « 4 partages (cocher) ». Le bouton utilise l’attribut « disabled », ce qui l’empêche de se rétablir. De plus, l’attribut d'action de l’élément fait référence à un script côté serveur qui exécute la même fonctionnalité dans les cas où JavaScript n’est pas pris en charge. L'exemple commence 3 Partages L'exemple finit HTML Début du code 3 Partages Fin du code JavaScript Début du code document.getElementById('share-btn').addEventListener('click', function(event){ event.preventDefault(); event.stopImmediatePropagation(); var count = this.querySelector('.count'); var text = this.querySelector('.text'); count.textContent = parseInt(count.textContent) + 1; text.textContent = 'Partagés ✓'; this.setAttribute('disabled', 'true'); }); Fin du code Adapté de « Custom Form Inputs » dans le module « Form Labels, Instructions, and Validation ». Deque University. 2021 Deque Systems Inc. Bon exemple de code tiré du document de l’Initiative d’accessibilité du Web (IAT) : Commandes personnalisées (IAT) (en anglais seulement), dans Concepts de formulaires. Eric Eggert et Shadi Abou-Zahra, éd. Copyright © 2019 W3C® (MIT, ERCIM, Keio, Beihang). État d’avancement : Ébauche mise à jour le 27 juillet 2019. ",
 href: '../module6/custom-controls-fr.html#communicate'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: "  Communiquer des mises à jour et des changements d’état par l’entremise de messages en direct sur ARIA lorsqu’ils ne peuvent pas être communiqués par l’entremise de méthodes HTML ou ARIA "
},{
 categories: 'module6',
 content: "  Communiquer des mises à jour et des changements d’état par l’entremise de messages en direct sur ARIA lorsqu’ils ne peuvent pas être communiqués par l’entremise de méthodes HTML ou ARIA Lorsque les états HTML et ARIA disponibles ne sont pas suffisamment descriptifs, ajouter une zone live ARIA pour décrire aux utilisateurs d’un lecteur d’écran ce qui se passe. Une zone live ARIA peut annoncer une modification personnalisée de la valeur comme « Tableau trié par titre, croissant » ou « Résultats filtrés par zone », etc. Bon exemple : Un bouton Partager personnalisé Dans cet exemple, un bouton Partager de média social comporte deux fonctions : montrer combien de personnes ont déjà activé le bouton (« partagé ») et permettre aux utilisateurs d’appuyer sur le bouton pour activer la fonction de partage. Lorsque le bouton est activé : Le nombre augmente de un. Le nom accessible passe de « 3 partages » à « 4 partages (cocher) ». Le bouton utilise l’attribut « disabled », ce qui l’empêche de se rétablir. De plus, l’attribut d'action de l’élément fait référence à un script côté serveur qui exécute la même fonctionnalité dans les cas où JavaScript n’est pas pris en charge. L'exemple commence 3 Partages L'exemple finit HTML Début du code 3 Partages Fin du code JavaScript Début du code document.getElementById('share-btn').addEventListener('click', function(event){ event.preventDefault(); event.stopImmediatePropagation(); var count = this.querySelector('.count'); var text = this.querySelector('.text'); count.textContent = parseInt(count.textContent) + 1; text.textContent = 'Partagés ✓'; this.setAttribute('disabled', 'true'); }); Fin du code Adapté de « Custom Form Inputs » dans le module « Form Labels, Instructions, and Validation ». Deque University. 2021 Deque Systems Inc. Bon exemple de code tiré du document de l’Initiative d’accessibilité du Web (IAT) : Commandes personnalisées (IAT) (en anglais seulement), dans Concepts de formulaires. Eric Eggert et Shadi Abou-Zahra, éd. Copyright © 2019 W3C® (MIT, ERCIM, Keio, Beihang). État d’avancement : Ébauche mise à jour le 27 juillet 2019. ",
 href: '../module6/custom-controls-fr.html#custom-share-button'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Un bouton Partager personnalisé "
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 4.1.2 : Nom, rôle et valeur 4.1.3 : Messages d’état (en anglais) Techniques H91 : Utiliser des éléments de formulaire et des liens HTML (en anglais) ARIA4 : ARIA2 : Identifier les champs obligatoires avec la propriété required (en anglais) ARIA5 : Utiliser l’état WAI-ARIA et des attributs de propriété pour afficher l’état d’un composant d’interface utilisateur (en anglais) Échecs F15 : Échec du critère de succès 4.1.2 consistant à implémenter des composants d'interface qui n'utilisent pas une API d'accessibilité pour la technologie ou qui l'utilisent de façon incomplète (en anglais) F68 : Échec du critère de succès 1.3.1 et 4.1.2 lié au fait que l'association entre l'étiquette et le composant d'interface utilisateur n'est pas déterminable par programmation (en anglais) F79 : Échec du critère de succès 4.1.2 lié au fait que l'état du focus d'un composant d'interface utilisateur ne peut être déterminé par un programme informatique ou que les notifications des changements de focus ne sont pas disponibles (en anglais) ",
 href: '../module6/custom-controls-fr.html#resources1'  ,
 title: "Commandes personnalisées - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Aperçu : Instructions du formulaire Les instructions du formulaire aident les utilisateurs à comprendre la façon de remplir le formulaire et d’utiliser les commandes individuelles du formulaire. Indiquer les saisies, les formats de données et les autres renseignements pertinents requis. ",
 href: '../module6/form-instructions-fr.html#form-instructions'  ,
 title: "Instructions du formulaire - Module 6 - Formulaires" ,
 heading: " Aperçu : Instructions du formulaire"
},{
 categories: 'module6',
 content: "  Instructions générales Fournir les instructions du formulaire au-dessus du formulaire avant la balise d’ouverture. Indiquer toute saisie obligatoire et facultative, les formats de données autorisés, les limites de temps et toute instruction générale qui s’appliquent à l’ensemble du formulaire. Remarque : Les utilisateurs du lecteur d’écran pourraient facilement rater les instructions générales du formulaire imbriquées dans un élément . Les lecteurs d’écran entrent en « mode formulaires » une fois dans un formulaire, désactivant ainsi les raccourcis clavier de balayage de texte pour permettre à l’utilisateur de taper directement dans les champs input et textarea. La navigation au clavier se limite aux éléments pouvant être ciblés (saisies de formulaires, liens et autres commandes) au moyen de la touche Tab. Le texte qui n’est pas associé par un programme à un élément pouvant être ciblé – servant d’étiquette ou de description – est facilement omis. Voici des exemples d'instructions pour un formulaire : Tous les champs marqués « obligatoire » doivent être remplis. Les dates doivent toutes être entrées selon le format aaaa/mm/jj (comme dans 2022/01/05). Vous trouverez de l’aide supplémentaire immédiatement après chaque champ ",
 href: '../module6/form-instructions-fr.html#overall-instructions'  ,
 title: "Instructions du formulaire - Module 6 - Formulaires" ,
 heading: " Instructions générales"
},{
 categories: 'module6',
 content: "  Instructions incluses Des instructions incluses sont fournies à l’intérieur ou à l’extérieur de l’étiquette de commande du formulaire. De courtes instructions peuvent être insérées dans l’étiquette avec le nom de la commande. Les instructions longues devraient être à l’extérieur de l’étiquette et être associées à la commande par l’aria-describedbyattribut aria-describedby. Fournir des instructions dans les étiquettes Les agents utilisateurs prennent en charge sans difficulté les instructions fournies dans les étiquettes, mais celles-ci devraient être réservées aux instructions plus courtes. Associer l’attribut for de l’étiquette à l’attribut id de la commande du formulaire. Bon exemple : Fournir des instructions dans une étiquette Le format requis pour « l'identification de l'employé » est indiqué par le format « XX-1234 » dans la même étiquette : L'exemple commence Identification de l'employé (XX-1234) L'exemple finit HTML Début du code Employee ID (XX-1234) Fin du code Fournir des instructions à l’extérieur des étiquettes Utiliser ARIA pour fournir des instructions à l’extérieur des étiquettes. Associer tout texte descriptif du formulaire à l’élément pertinent du formulaire en utilisant l’attribut aria-labelledby ou aria-describedby. Bon exemple : Fournir des instructions de contrôle de formulaire en utilisant aria-labelledby Une approche pour fournir des instructions en dehors des étiquettes utilise l'attribut aria-labelledby sur le contrôle : Un élément est associé à sa commande au moyen de valeurs d’attribut correspondantes for et id. L'attribut aria-labelledby du contrôle fait référence aux valeurs de l'attribut id de l'élément lui-même et de l'élément contenant la description. Cette approche garantit que la description supplémentaire est communiquée à la technologie d’assistance, mais elle ne devrait être utilisée qu’avec de courtes descriptions L'exemple commence Carte assurance maladie 1234-567-890-XX L'exemple finit HTML Début du code Carte assurance maladie 1234-567-890-XX Fin du code Bon exemple : Fournir des instructions de contrôle de formulaire avec aria-describedby L'approche la plus courante pour fournir des instructions en dehors des étiquettes consiste à utiliser l'attribut aria-describedby. Cet attribut est défini sur le contrôle et pointe vers la valeur de l'attribut id de l'élément contenant la description. L'exemple commence Mot de passe Doit contenir au moins 8 caractères, une lettre majuscule et un caractère spécial. L'exemple finit HTML Début du code Mot de passe Doit contenir au moins huit caractères, une lettre majuscule et un caractère spécial Fin du code Texte d’espace réservé Le texte de l'attribut placeholder fournit des instructions ou un exemple du format de données requis à l'intérieur des champs de formulaire qui n'ont pas encore été modifiés par l'utilisateur. Notez que le texte de remplacement disparaît des champs d'un formulaire lorsque les utilisateurs commencent à saisir du texte. Si ce texte contient des informations pédagogiques ou des exemples qui disparaissent, il est plus difficile pour les utilisateurs de vérifier leurs réponses avant de soumettre le formulaire. Le texte d’espace réservé ne remplace pas les étiquettes. Les technologies d’assistance comme les lecteurs d’écran ne traitent pas le texte d’espace réservé comme des étiquettes. L'exemple commence Recherche Courriel L'exemple finit HTML Début du code Recherche Courriel Fin du code Styliser l’espace réservé Dans de nombreux navigateurs, la couleur d’attribut placeholder réservé échoue au test de contraste, ce qui empêche de nombreuses personnes de voir distinctement. La couleur de l’espace réservé peut être stylisée à l’aide de CSS. L’extrait de code ci-dessous établit la couleur d’avant-plan à un gris moyen (no hex 767676) sur fond blanc, ce qui satisfait tout juste à l’exigence minimale de rapport de contraste de 4,5:1. L'exemple commence Recherche de cours Prénom Nom de famille Courriel L'exemple finit Voir le HTML Début du code Recherche de cours Prénom Nom de famille Courriel Fin du code Voir le CSS Début du code ::-webkit-input-placeholder { color: #767676 !important; opacity: 1; } :-moz-placeholder { /* Firefox 18- */ color: #767676 !important; opacity: 1; } ::-moz-placeholder { /* Firefox 19+ */ color: #767676 !important; opacity: 1; } :-ms-input-placeholder { color: #767676 !important; opacity: 1; } Fin du code ",
 href: '../module6/form-instructions-fr.html#inline-instructions'  ,
 title: "Instructions du formulaire - Module 6 - Formulaires" ,
 heading: " Instructions incluses"
},{
 categories: 'module6',
 content: "  Les instructions relatives aux groupes En 'mode focus', lors de la tabulation dans le formulaire, les utilisateurs de lecteurs d'écran mettent le focus sur les contrôles de formulaire et entendent leurs étiquettes et descriptions. Le texte d'un élément non focalisable n'est pas pris en compte, sauf s'il est associé par programme à un contrôle de formulaire en tant qu'étiquette ou description. Bon exemple : Instructions de groupe dans une Dans cet exemple, le mot « Requis » est défini dans la pour indiquer que tout ce qui se trouve dans le champ correspondant est requis. Selon la configuration, certains lecteurs d’écran lisent la légende avec chaque élément de forme, une fois ou, rarement, pas du tout. Gardez les légendes courtes et explicites. L'exemple commence Renseignements d’ouverture de session (Requis) Nom d’utilisateur Mot de passe Courriel Téléphone L'exemple finit Voir le HTML Début du code Renseignements d’ouverture de session (Requis) Nom d’utilisateur Mot de passe Courriel Téléphone Fin du code Voir le CSS Début du code label.required:before, legend.required:before { content: '* '; margin-left: -0.665em; color: #d3080c; font-weight: 700; } Fin du code Mauvais exemple : Instructions dans un paragraphe non associé à un contrôle Lorsque les instructions se trouvent dans un élément non associé via aria-describedby, elles sont facilement manquées par les utilisateurs qui naviguent dans le formulaire en 'mode formulaire' du lecteur d'écran. L'exemple commence Créer un compte d’utilisateur Nom d’utilisateur Les mots de passe doivent correspondre. Mot de passe Retapez votre mot de passe Courriel Téléphone L'exemple finit Voir le HTML Début du code Créer un compte d’utilisateur Nom d’utilisateur Les mots de passe doivent correspondre. Mot de passe Retapez votre mot de passe Courriel Téléphone;j Fin du code Bon exemple : Instructions partagées associées à plusieurs champs de formulaire Dans certaines situations, les instructions partagées peuvent être associées à plusieurs champs de formulaire. L'exemple commence Créer un compte d’utilisateur Les champs Nom d'utilisateur et Mot de passe ne doivent PAS contenir de caractères spéciaux. Nom d’utilisateur Mot de passe Courriel Téléphone L'exemple finit Voir le HTML Début du code Créer un compte d’utilisateur Les champs Nom d'utilisateur et Mot de passe ne doivent PAS contenir de caractères spéciaux. Nom d’utilisateur Mot de passe Courriel Téléphone Fin du code Bon exemple : Fournir des instructions en texte clair avant le formulaire Dans cet exemple, les instructions générales du formulaire précèdent la balise d’ouverture , où les utilisateurs du lecteur d’écran peuvent facilement y accéder. Si les instructions en texte clair se trouvaient à l’intérieur de l’élément , les utilisateurs pourraient facilement les manquer puisque la navigation à l’intérieur d’un formulaire se limite aux éléments faciles à cibler (aussi appelés « mode formulaires »). L'exemple commence Choisissez les comptes source et destination ci-dessous pour effectuer votre virement de fonds: Virer des fonds Virer des fonds du compte Sélectionner un compte Compte d’épargne - 8888-999 Compte chèques - 9999-9999 Virer des fonds au compte Sélectionner un compte Compte d’épargne - 8888-999 Compte chèques - 9999-9999 Montant L'exemple finit HTML Début du code Choisissez les comptes source et destination ci-dessous pour effectuer votre virement de fonds: […] Fin du code ",
 href: '../module6/form-instructions-fr.html#instructions-for-groups'  ,
 title: "Instructions du formulaire - Module 6 - Formulaires" ,
 heading: " Les instructions relatives aux groupes"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.4.6 : En-têtes et étiquettes 3.3.2 : Étiquettes ou instructions 4.1.2 : Nom, rôle et valeur Techniques G131 : Fournir des étiquettes descriptives (en anglais) ARIA10 : Utiliser aria-labelledby pour fournir un équivalent textuel pour un contenu non textuel (en anglais) ARIA9 : Utiliser aria-labelledby pour concaténer une étiquette provenant de plusieurs nœuds de texte (en anglais) ARIA1 : Utiliser la propriété ARIA describedby pour fournir une étiquette descriptive aux contrôles de saisie (en anglais) G89 : Fournir de l'information sur le format des données attendu et des exemples (en anglais) G184 : Fournir des instructions textuelles au début d'un formulaire ou d'un ensemble de champs pour décrire les données requises (en anglais) H44 : Utiliser l'élément label pour associer les étiquettes avec les champs de formulaire (en anglais) H90 : Indiquer les champs de formulaire obligatoires (en anglais) H93 : S'assurer que les attributs id sont uniques sur une page Web (en anglais) ",
 href: '../module6/form-instructions-fr.html#form-instructions-wcag'  ,
 title: "Instructions du formulaire - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Topics Les formulaires servent à recueillir des renseignements auprès des utilisateurs. Ce module aborde les sujets suivants pour la conception de formulaires accessibles : Commandes d’étiquetage Regroupement des commandes Fournir des instructions claires Validation des saisies Avis aux utilisateurs Division des formulaires longs Création de commandes personnalisées Les formulaires doivent également être accessibles au clavier et accorder aux utilisateurs suffisamment de temps pour les remplir. S’il y a une limite de temps, assurez-vous que l’utilisateur est autorisé à la désactiver, à la modifier ou à la prolonger. Les formulaires accessibles profitent à tous, mais en particulier à ces utilisateurs : Les personnes ayant une déficience cognitive peuvent mieux comprendre le formulaire et la façon de le remplir. Les personnes qui utilisent la fonction de reconnaissance vocale peuvent utiliser les étiquettes pour activer les commandes et déplacer la cible. Les personnes ayant une dextérité réduite peuvent cibler les grandes zones cliquables qui comprennent les étiquettes. Les personnes qui utilisent des lecteurs d’écran peuvent identifier les commandes de formulaire en raison des étiquettes qui y sont associées. ",
 href: '../module6/forms-concepts-fr.html#topics'  ,
 title: "Concepts des formulaires - Module 6 - Formulaires" ,
 heading: " Topics"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 1.3.5 : Identifier la finalité de la saisie (en anglais) 2.1.1 : Clavier 2.2.1 : Réglage du délai 2.4.6 : En-têtes et étiquettes 2.5.3 : Étiquette dans le nom (en anglais) 3.3.1 : Identification des erreurs 3.3.2 : Étiquettes ou instructions 3.3.3 : Suggestion après une erreur 3.3.4 : Prévention des erreurs (juridiques, financières, de données) 4.1.2 : Nom, rôle et valeur ",
 href: '../module6/forms-concepts-fr.html#forms-concepts-wcag'  ,
 title: "Concepts des formulaires - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Regroupement de contrôles de formulaires Regrouper les commandes de formulaire pour faciliter la compréhension du formulaire par tous les utilisateurs. Les lecteurs d’écran annoncent le début et la fin du groupe et l’étiquette du groupe au fur et à mesure de la navigation dans les groupes. Le regroupement des commandes est particulièrement important pour les boutons radio et les cases à cocher connexes, car les étiquettes individuelles ne reflètent pas pleinement le sujet du groupe. Suivez les pratiques exemplaires suivantes pour étiqueter les commandes : Utiliser l’élément pour regrouper les commandes connexes dans un formulaire. Utiliser l’élément pour nommer l’élément . Faire en sorte que la légende soit aussi courte que possible, car certains lecteurs d’écran la déclarent avec chaque étiquette. Rendre les étiquettes individuelles explicites, car certaines technologies d’assistance ne déclarepas la . Ne pas répéter la légende dans une étiquette. Utiliser l’élément pour les éléments avec groupes d’options Utiliser ARIA role='group' et aria-labelledby pour regrouper et étiqueter les éléments de formulaire connexes lorsque vous ne pouvez pas utiliser les éléments HTML natifs et . Utiliser dans la mesure du possible pour prendre en charge le navigateur universel et le lecteur d’écran. ",
 href: '../module6/grouping-controls-fr.html#related-form-controls'  ,
 title: "Regroupement des commandes - Module 6 - Formulaires" ,
 heading: " Regroupement de contrôles de formulaires"
},{
 categories: 'module6',
 content: "  Bon exemple : Regrouper les commandes de cases connexes avec fieldset et legend L'exemple commence Choisissez votre disponibilité (cochez toutes les réponses qui s’appliquent): Avant-midi Après-midi Soir L'exemple finit HTML Début du code Choisissez votre disponibilité (cochez toutes les réponses qui s’appliquent): Avant-midi Après-midi Soir Fin du code ",
 href: '../module6/grouping-controls-fr.html#related-checkbox-controls'  ,
 title: "Regroupement des commandes - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Regrouper les commandes de cases connexes avec fieldset et legend"
},{
 categories: 'module6',
 content: "  Bon exemple : Regrouper les éléments de formulaire connexes avec ARIA Regroupez les éléments de formulaire connexes et nommez-les avec ARIA lorsque les éléments HTML natif et équivalents ne peuvent pas être utilisés. Définissez les champs de formulaire connexes dans un conteneur et attribuez au conteneur l’attribut role='group'. Nommez le conteneur du groupe avec un attribut aria-labelledby pointant vers la valeur attribut id de l’élément contenant le texte descriptif. L'exemple commence Informations de contact Nom Téléphone Courriel Adresse Ville Province Code postal L'exemple finit HTML Début du code Informations de contact Nom Téléphone […] Fin du code ",
 href: '../module6/grouping-controls-fr.html#related-form-elements'  ,
 title: "Regroupement des commandes - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Regrouper les éléments de formulaire connexes avec ARIA"
},{
 categories: 'module6',
 content: "  Bon exemple : Regrouper les options connexes avec optgroup L'exemple commence Choisir une voiture Ford Chevrolet Tesla Honda Toyota L'exemple finit HTML Début du code Choisir une voiture Ford Chevrolet Tesla Honda Toyota Fin du code ",
 href: '../module6/grouping-controls-fr.html#related-options'  ,
 title: "Regroupement des commandes - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Regrouper les options connexes avec optgroup"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.4.6 : En-têtes et étiquettes 3.3.2 : Étiquettes ou instructions 4.1.2 : Nom, rôle et valeur Techniques H71 : Fournir une description des groupes de champs à l'aide des éléments fieldset et legend (en anglais) H85 : Utiliser optgroup pour regrouper des éléments option dans un élément select (en anglais) ARIA9 : Utiliser aria-labelledby pour concaténer une étiquette provenant de plusieurs nœuds de texte (en anglais) ARIA16 : Utiliser aria-labelledby pour attribuer un nom à des commandes d’interface d’utilisateur (en anglais) ARIA17 : Utiliser des rôles de regroupement pour identifier des contrôles de formulaire connexes (en anglais) ",
 href: '../module6/grouping-controls-fr.html#grouping-wcag-resources'  ,
 title: "Regroupement des commandes - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Overview – Déterminer l’objet de la saisie Lorsqu'un champ de saisie de formulaire recueille des informations personnelles telles que le nom, le numéro de téléphone, l'adresse électronique et l'adresse postale de l'utilisateur, définissez sa sémantique de manière programmatique avec l'attribut autocomplete Les technologies d'assistance s'appuient sur la valeur de l'attribut autocomplete pour remplir automatiquement les formulaires, en s'appuyant sur les entrées antérieures de l'utilisateur stockées dans le navigateur. Cela évite à l'utilisateur d'avoir à taper l'information. Les technologies d'assistance exploitent également la valeur de autocomplete pour associer des icônes aux champs de saisie, pour les utilisateurs qui préfèrent utiliser des images pour communiquer. La valeur de l'attribut prend l'un des 53 noms de champs potentiels de la liste de WCAG: Input Purposes for User Interface Components. Les noms des champs sont soit larges, soit étroits. Par exemple, en ce qui concerne le nom de l'utilisateur, il est possible d'identifier l'objectif d'une entrée comme étant le nom complet, le prénom, le nom de famille ou le surnom. Vous pouvez affiner l'objectif en ajoutant à la valeur de autocomplete des éléments de détail séparés par des espaces : shipping billing home work mobile fax pager Utilisez autocomplete sur les éléments qui prennent une valeur textuelle ou numérique en entrée, les éléments et les éléments . La spécification HTML5 énumère les éléments appropriés à associer à chaque nom de champ autocomplete. (disponible en anglais seulement) ",
 href: '../module6/identifying-input-fr.html#overview'  ,
 title: "Déterminer l’objet de la saisie - Module 6 - Formulaires" ,
 heading: " Overview – Déterminer l’objet de la saisie"
},{
 categories: 'module6',
 content: "  Bon exemple : Utilisation de l’attribut autocomplete Il s'agit d'un formulaire simple qui recueille les coordonnées de l'utilisateur à l'aide de l'attribut autocomplete. Les noms des champs autocomplete utilisent des jetons pour faire la distinction entre la facturation et l'expédition, et entre le téléphone fixe et le téléphone mobile. Les champs ne se remplissent automatiquement que si le navigateur a enregistré les valeurs des noms de champs (par exemple, given-name, family-name) ors d'une précédente soumission de formulaire. Pour tester, saisissez quelques valeurs et appuyez sur 'Remplir le navigateur' pour stocker les valeurs des noms de champs dans le navigateur. Les données ne sont pas soumises, et nous ne les stockons pas. L'exemple commence Prénom Nom de famille Titre du poste Organisation Adresse d'expédition Rue Ville Province Téléphone portable pour la livraison Courriel L'adresse de facturation Rue Ville Province Téléphone Courriel L'exemple finit Visualisation simplifiée du HTML Ce balisage a été simplifié en supprimant les éléments de regroupement et les attributs de classe. HTML Début du code Prénom Nom de famille Titre du poste Organisation Adresse d'expédition Rue Ville Province Téléphone portable pour la livraison Courriel L'adresse de facturation Rue Ville Province Téléphone Courriel Fin du code ",
 href: '../module6/identifying-input-fr.html#autocomplete-attributes'  ,
 title: "Déterminer l’objet de la saisie - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Utilisation de l’attribut autocomplete"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.5 : Déterminer le but de la saisie (en anglais) Techniques H98 : Utiliser des attributs à saisie automatique HTML 5.2 (en anglais) Échecs F107 : Échec du critère de succès 1.3.5 en raison de valeurs d’attribut saisies automatiquement incorrectes (en anglais) ",
 href: '../module6/identifying-input-fr.html#wcag-resources'  ,
 title: "Déterminer l’objet de la saisie - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Pratiques exemplaires pour les contrôles d’étiquetage Les commandes de formulaire comprennent les champs de texte, les champs de sélection de fichiers, les cases à cocher, les boutons radio et les listes déroulantes. Suivez les pratiques exemplaires suivantes pour les en-têtes : Fournir des étiquettes pour décrire la fonction de commande de formulaire. Utiliser l’élément . Associer exactement l’attribut 'for' de l’étiquette à l’attribut 'id' de la commande de formulaire pour les associer explicitement. Voici les éléments qui utilisent des étiquettes explicitement associées : input type='text' input type='checkbox' input type='radio' input type='file' (champs de sélection de fichier) input type='password' textarea select (listes déroulantes) Ne pas utiliser l’élément pour les éléments suivants. Boutons Soumettre et Réinitialisation (input type='submit' ou input type='reset') Étiquette fournie par l’attribut de valeur Boutons image (input type='image') Étiquette fournie par l’attribut alt Champs de saisie masqués (input type='hidden') Boutons (éléments de bouton ou ) Étiquette fournie par le contenu de l’élément lui-même (texte) ou par l'attribut value, aria-label ou aria-labelledby. Utiliser des étiquettes ARIA (les attributs aria-labelledby et aria-label) lorsqu’il n’est pas possible d’utiliser Lorsque vous utilisez des étiquettes ARIA, ajoutez tout texte visible dans l’étiquette de commande. Utiliser l’attribut aria-labelledby pour extraire une étiquette du contexte, en faisant appel à un ou plusieurs éléments du contexte. Éviter d’utiliser l’attribut title pour identifier les commandes de formulaire. Ce n’est pas largement pris en charge par la technologie d'assistance. Le texte de l’étiquette doit être court et concis. Utilisez des valeurs d'étiquettes uniques sur une page. Placer les étiquettes visuellement à droite des boutons radio et des cases à cocher. Placer les étiquettes de façon visuelle, directement au-dessus des champs de formulaire (de préférence par la BOEW) ou à gauche (solution de rechange à la BOEW, lorsqu’il faut conserver un espace vertical). ",
 href: '../module6/labelling-controls-fr.html#labeling-controls'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: " Pratiques exemplaires pour les contrôles d’étiquetage"
},{
 categories: 'module6',
 content: "  Bon exemple : Associer explicitement les étiquettes en utilisant les attributs for/id Utiliser l’élément pour associer explicitement le texte aux éléments du formulaire, dans la mesure du possible. L’attribut for de l’étiquette doit correspondre exactement au id de la commande de formulaire. Privilégiez l'utilisation de l'élément HTML pour associer les commandes pour nommer les contrôles de formulaire plutôt que l'utilisation d'un label ARIA. L'exemple commence Prénom Marié(e) L'exemple finit HTML Début du code Prénom Marié(e) Fin du code ",
 href: '../module6/labelling-controls-fr.html#labels-attributes'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Associer explicitement les étiquettes en utilisant les attributs for/id"
},{
 categories: 'module6',
 content: "  Bon exemple : Masquer visuellement l’élément d’étiquette Masquez visuellement l'élément afin d'éviter la redondance pour les utilisateurs qui peuvent identifier le but visuellement. Dans cet exemple, la classe WET .wb-inv masque efficacement l'étiquette 'Search' aux utilisateurs voyants, mais l'élément est toujours présent dans le HTML et est rencontré par les utilisateurs de technologies d'assistance. L'exemple commence Search Search L'exemple finit HTML Début du code Search Search Fin du code CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code Utilisez la classe BOEW .wb-inv pour masquer visuellement un élément, conformément au guide de style de la BOEW : Contenu visible et invisible. ",
 href: '../module6/labelling-controls-fr.html#hiding-label-element'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Masquer visuellement l’élément d’étiquette"
},{
 categories: 'module6',
 content: "  Bon exemple : Utiliser aria-label Utiliser un attribut aria-label pour nommer les saisies et autres commandes directement avec du texte non visuel. Cette approche ne doit être utilisée que lorsque l’étiquette de la commande ne correspond pas au contenu environnant. L’information contenue dans aria-label n’est pas affichée visuellement. Dans cet exemple, un champ de saisie de recherche n'a pas besoin d'étiquette visuelle puisque le bouton d'envoi situé juste à côté porte l'étiquette 'Recherche'. Comme les utilisateurs non voyants rencontrent le contenu de manière linéaire, en lisant le champ de saisie avant le bouton, nous nommons le champ de saisie avec l'attribut aria-label. L'exemple commence Recherche L'exemple finit HTML Début du code Recherche Fin du code ",
 href: '../module6/labelling-controls-fr.html#aria-label'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Utiliser aria-label"
},{
 categories: 'module6',
 content: "  Bon exemple : Utilisation d’aria-labelledby pour concaténer une étiquette provenant de plusieurs sources Une ne peut pointer que vers une seule commande de formulaire. Avec aria-labelledby, un élément peut aider à étiqueter de nombreuses commandes de formulaire, et une commande de formulaire peut être étiquetée par de nombreux éléments. Utiliser un attribut aria-labelledby pour identifier les entrées de formulaires et autres commandes avec des noms extraits des éléments environnants. Cette approche ne doit être utilisée que lorsque l’étiquette de la commande ne correspond pas au contenu environnant. Dans cet exemple, chaque service est accompagné d’un bouton « Ajouter au panier ». Un attribut aria-labelledby permet de distinguer les boutons les uns des autres en concaténant un nom à partir du bouton lui-même et de l’en-tête qui précède (p. ex., « Ajouter au panier Service 1 »). L’attribut aria-labelledby contient les valeurs d’attribut id des éléments avec les noms descriptifs. Comme l’illustre cet exemple, l’attribut aria-labelledby peut construire un nom en partie à partir de son propre nom d’élément natif. L'exemple commence Service 1 [paragraphe descriptif] Ajouter au panier Service 2 [paragraphe descriptif] Ajouter au panier Service 3 [paragraphe descriptif] Ajouter au panier L'exemple finit HTML Début du code Service 1 [paragraphe descriptif] Ajouter au panier Service 2 [paragraphe descriptif] Ajouter au panier Service 3 [paragraphe descriptif] Ajouter au panier Fin du code ",
 href: '../module6/labelling-controls-fr.html#aria-labelledby'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Utilisation d’aria-labelledby pour concaténer une étiquette provenant de plusieurs sources"
},{
 categories: 'module6',
 content: "  Bon exemple : Utilisation d’aria-labelledby pour concaténer une étiquette provenant de plusieurs sources Dans l’exemple ci-dessous, les saisies de texte utilisent aria-labelledby pour faire référence aux cellules d’en-tête de ligne et d’en-tête de colonne. L'exemple commence Numéros de bureau et de téléphone Nom Numéro du bureau Téléphone Cyndi Jared Jonathan L'exemple finit Voir le HTML Début du code Nom Numéro du bureau Téléphone Cyndi Jared Jonathan Fin du code ",
 href: '../module6/labelling-controls-fr.html#aria-labelledby-concatenate'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Utilisation d’aria-labelledby pour concaténer une étiquette provenant de plusieurs sources"
},{
 categories: 'module6',
 content: "  Bon exemple : Boutons d’étiquetage L’élément crée un bouton cliquable. Dans le contenu de l’élément bouton, vous pouvez mettre du texte et des balises comme , , , , , etc. Vous pouvez également utiliser l'élément pour créer des boutons, auquel cas l'étiquette est définie dans l'attribut value de l'élément. Si vous utilisez , l’étiquette se trouve dans l’attribut alt. HTML Début du code Submit Cancel Activate Fin du code ",
 href: '../module6/labelling-controls-fr.html#labelling-buttons'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Boutons d’étiquetage"
},{
 categories: 'module6',
 content: "  Bon exemple : Bouton d’étiquetage des images utilisant l’attribut aria-label Dans cet exemple, un attribut aria-label nomme le bouton, au lieu de l’attribut alt de l’élément enfant . L’attribut alt est réglé à nul (vide): alt=''. L'exemple commence L'exemple finit HTML Début du code Fin du code ",
 href: '../module6/labelling-controls-fr.html#labelling-image-button'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Bouton d’étiquetage des images utilisant l’attribut aria-label"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.3.1 : Information et relations 2.4.6 : En-têtes et étiquettes 3.3.2 : Étiquettes ou instructions 4.1.2 : Nom, rôle et valeur Techniques G131 : Fournir des étiquettes descriptives (en anglais) G162 : Positionner les étiquettes afin de maximiser la prévisibilité des relations (en anglais) G167 : Utiliser un bouton adjacent pour identifier visuellement la fonction d'un champ (en anglais) H44 : Utiliser l'élément label pour associer les étiquettes avec les champs de formulaire (en anglais) H65 : Utiliser l'attribut title pour identifier un champ de formulaire quand l'élément label ne peut pas être utilisé (en anglais) H93 : S'assurer que les attributs id sont uniques sur une page Web (en anglais) ARIA6 : Utiliser aria-label pour attribuer des étiquettes aux objets (en anglais) ARIA9 : Utiliser aria-labelledby pour concaténer une étiquette provenant de plusieurs nœuds de texte (en anglais) ARIA16 : Utiliser aria-labelledby pour attribuer un nom à des commandes d’interface d’utilisateur (en anglais) Défaillances F68 : Échec du critère de succès 1.3.1 et 4.1.2 lié au fait que l'association entre l'étiquette et le composant d'interface utilisateur n'est pas déterminable par programmation (en anglais) ",
 href: '../module6/labelling-controls-fr.html#wcag-resources'  ,
 title: "Commandes d’étiquetage - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Conception de formulaires à plusieurs étapes Il est préférable de diviser un formulaire long en une série de formulaires plus petits avec validation à chaque étape. Les formulaires à étapes multiples peuvent être moins intimidants et plus faciles à comprendre et à corriger qu’un formulaire long. Les formulaires à étapes multiples peuvent être conçus d’une page à l’autre ou sur une même page. Suivez les pratiques exemplaires suivantes pour les formulaires à étapes multiples : Diviser le formulaire en fonction de ses groupes de commandes logiques (p. ex., coordonnées et questionnaire). Valider l’étape en cours avant d’exposer la suivante. Étiqueter les étapes facultatives et permettre aux utilisateurs de les sauter. S’assurer que la cible du clavier se déplace facilement d’une étape à l’autre, vers l’arrière et vers l’avant. À une nouvelle étape, cibler de préférence le prochain élément de formulaire pertinent, ou l’en-tête ou le conteneur pertinent (un en-tête ou un conteneur aurait besoin de l’attribut tabindex='-1' pour recevoir la cible par un programme). Éviter une limite de temps pour remplir le formulaire. Si une limite est requise, permettre à l’utilisateur de la modifier ou de la prolonger une limite. Si les étapes se trouvent sur plusieurs pages, répéter les instructions générales sur chaque page. Indiquer la progression dans le formulaire (« Étape x de y »). ",
 href: '../module6/multi-step-forms-fr.html#design'  ,
 title: "Formulaires à étapes multiples - Module 6 - Formulaires" ,
 heading: " Conception de formulaires à plusieurs étapes"
},{
 categories: 'module6',
 content: "  Indiquer la progression dans un formulaire à étapes multiples Chaque étape doit indiquer la progression de l’utilisateur. Les approches 1 et 2 s’appliquent uniquement aux formulaires multipages. Approche 1 : Utilisation du titre de la page Ajoutez une note indiquant la progression (p. ex., « Étape 2 de 4 : ») au début de l’élément , avant le nom de l’étape ou tout avis d’erreur. L’élément est la première chose déclarée aux utilisateurs du lecteur d’écran lors du chargement de la page et il fournit une rétroaction immédiate. HTML Début du code Étape 2 de 4 : Coordonnées – Sondage X – Entreprise Z Début du code Approche 2 : Utilisation de l’en-tête principal Ajoutez une note indiquant la progression (p. ex., « (Étape 2 de 4) » à la fin de l’en-tête principal de la page, ce qui rend l’information bien en vue et facilement repérable par balayage visuel. HTML Début du code Coordonnées (Étape 2 de 4) Fin du code Approche 3 : Utilisation de l’élément de progression HTML5 Vous pouvez utiliser un élément de HTML5 pour informer les utilisateurs de leur progression, comme premier élément à chaque étape. L'exemple commence Sondage (Étape 1 de 7) L'exemple finit HTML Début du code Sondage (Étape 1 de 7) Fin du code Certains systèmes d’exploitation animent l’élément , ce qui contrevient au critère de succès 2.2.2 des WCAG : Pause, Stop, Masquer. Vous pouvez arrêter l’animation en utilisant un style personnalisé avec les CSS spécifiques au navigateur, comme illustré ci-dessous. CSS Début du code /* Microsoft IE */ progress { color: #036; } /* Apple Safari et Google Chrome */ progress::-webkit-progress-bar { background-color: #036; } /* Mozilla Firefox */ progress::-moz-progress-bar { background-color: #036; } Fin du code Approche 4 : Utilisation d’un indicateur étape par étape Un indicateur étape par étape peut aider les utilisateurs à s’orienter dans un processus par étapes. Cet exemple utilise une liste ordonnée dont chaque étape est un élément de la liste. Le texte visuellement masqué, hors écran, mais encore rencontré par un technicien d’assistance, indique l’état actuel et l’état terminé des étapes (la classe WET .wb-inv masque visuellement le texte). Les étapes précédentes sont liées afin que les utilisateurs puissent les réviser. Toutes les données déjà entrées à l’étape en cours devraient être sauvegardées. EXAMPLE: Terminé: Adresse de facturation État actuel: Adresse de livraison Vérification de la commande Paiement Terminer l’achat L'exemple finit HTML Début du code Terminé : Adresse de facturation État actuel : Adresse de livraison Vérification de la commande Paiement Terminer l’achat Fin du code Voir le CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } .box-content { font-size: .7em; overflow: auto; padding: .5em; } .tlwrapper { display: table; width: 100%; } .timeline { display: table-row; counter-reset: timeline; } .timeline li.timeline-past { background-color: #ccc; } .timeline li:first-child { padding-left: 0; } .timeline li { display: table-cell; width: 20%; counter-increment: timeline; list-style: none; text-align: center; padding: .25em .5em; overflow: hidden; position: relative; background-color: #fff; padding-left: 25px; white-space: nowrap; } .timeline li.timeline-current > span, .timeline li.timeline-current a { color: #036; font-weight: bold; } .timeline li a, .timeline li > span { z-index: 100; position: relative; display: block; color: #555; } .timeline li.timeline-current > span:before { color: #fff; background-color: #036; border-color: #036; } .timeline li a:before, .timeline li > span:before { display: inline-block; color: #555; content: counter(timeline); background-color: transparent; border: 3px solid #555; margin-right: .25em; border-radius: 5px; padding: 0 .25em; } .timeline li:after { left: 0; top: 50%; border: solid transparent; content: ' '; height: 0; width: 0; position: absolute; pointer-events: none; border-color: rgba(151, 204, 237, 0); border-left-color: #ccc; border-width: 20px; margin-top: -20px; } Fin du code Autre approche : En utilisant aria-current='step' Cette approche remplace le texte visuellement caché « Current » par un attribut aria-current='step' appliqué à l’élément parent . Les lecteurs d’écran identifient l’étape courante (current step) en plus du texte de liste. Le soutien des agents utilisateurs pour aria-current (en anglais seulement) lorsqu’il est appliqué à un élément non ciblable comme (par opposition aux contrôles) est une question non résolue. En revanche, le texte visuellement caché est universellement soutenu. HTML Début du code […] Shipping Address […] Fin du code ",
 href: '../module6/multi-step-forms-fr.html#progress'  ,
 title: "Formulaires à étapes multiples - Module 6 - Formulaires" ,
 heading: " Indiquer la progression dans un formulaire à étapes multiples"
},{
 categories: 'module6',
 content: "  Bon exemple : Formulaire des étapes de la BOEW Le Formulaire des étapes de la BOEW (exemple) est un formulaire à étapes multiples de même page. La Documentation du formulaire des étapes décrit les exigences en matière de balisage des saisies. Les étapes du formulaire de la BOEW n’appuient pas encore les étapes facultatives au moyen d’un bouton « sauter ». Vous définissez chaque étape au sein d’un élément et vous la nommez avec un élément emboîté. Puis, imbriquez les éléments de formulaire dans un élément à l’intérieur de . Vous placez les éléments de formulaire de l'étape dans un suivant la . HTML Début du code Coordonnées (Les éléments du formulaire vont ici, masqués lorsqu’ils sont inactifs.) Questionnaire (Les éléments du formulaire vont ici, masqués lorsqu’ils sont inactifs.) Fin du code Le JavaScript masque la lorsque l’étape n’est pas sélectionnée. JavaScript ajoute également les boutons de navigation « suivant » et « précédent », qui déclenche la validation au clic. ",
 href: '../module6/multi-step-forms-fr.html#steps-form'  ,
 title: "Formulaires à étapes multiples - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Formulaire des étapes de la BOEW"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1 : Information et relations 2.2.1 : Réglage du délai 3.3.2 : Étiquettes ou instructions Techniques G133 : Proposer une case à cocher sur la première page d'un formulaire multipages permettant à l'utilisateur de demander une limite du temps de session plus longue ou un temps de session sans limite (en anglais) G180 : Fournir à l'utilisateur une façon de fixer la limite de temps à 10 fois la durée par défaut (en anglais) G198 : Fournir à l'utilisateur une façon de désactiver la limite de temps (en anglais) H71 : Fournir une description des groupes de champs à l'aide des éléments fieldset et legend (en anglais) SCR1 : Permettre à l'utilisateur de prolonger le délai par défaut (en anglais) SCR16 : Fournir un script qui avertit l'utilisateur que le délai va expirer (en anglais) ",
 href: '../module6/multi-step-forms-fr.html#resources'  ,
 title: "Formulaires à étapes multiples - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Conception de la notification aux utilisateurs Lorsqu’un utilisateur soumet un formulaire, avisez-le de la réussite ou de toute erreur. Assurez-vous que les messages d’erreur sont clairs et concis et fournissent des instructions simples pour résoudre l’erreur. Comme dans les exemples ci-dessous, fournissez de la rétroaction: dans l’en-tête principal (optional) dans l’élément du (optional) sous forme de liste d’erreurs avant le formulaire En ligne, associé de manière programmatique au contrôle de formulaire ",
 href: '../module6/user-notifications-fr.html#user-notification'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: " Conception de la notification aux utilisateurs"
},{
 categories: 'module6',
 content: "  Bon exemple 1 : Utilisation de l’en-tête principal HTML Début du code Votre formulaire a été soumis avec succès. Fin du code Bien qu’un message de réussite ait une page dédiée, des erreurs ramènent les utilisateurs au formulaire sur la même page. L’élément existant h1 doit encore décrire la fonction de la page, alors préfacez le sujet existant avec un court message d’erreur : HTML Début du code 2 Erreurs – Coordonnées Fin du code La validation des formulaires de la BOEW utilise un en-tête de niveau 2 réservé au message d’erreur (qui peut être configuré pour être inférieur) : HTML Début du code Le formulaire n’a pu être soumis parce que deux erreurs ont été détectées. Fin du code ",
 href: '../module6/user-notifications-fr.html#main-heading'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: "  Bon exemple 1 : Utilisation de l’en-tête principal"
},{
 categories: 'module6',
 content: "  Bon exemple 2 : Utilisation de l’élément du titre L’élément du , dans l’élément en de page, est la première chose que les utilisateurs du lecteur d’écran entendent lors du chargement de la page. En préfaçant la valeur du titre existant avec « Succès » ou « Erreurs » (ou « 4 erreurs » si vous avez le nombre), vous donnez une rétroaction immédiate à ces utilisateurs. HTML Début du code 2 Erreurs : Coordonnées – Inscription – Entreprise X […] Fin du code The WET form validation does not leverage the element. La validation du formulaire de la BOEW ne tire pas parti de l’élément du . ",
 href: '../module6/user-notifications-fr.html#title-element'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: "  Bon exemple 2 : Utilisation de l’élément du titre"
},{
 categories: 'module6',
 content: "  Bon exemple 3 : Liste des erreurs avant le formulaire Énumérez les erreurs avant le formulaire et sous un en-tête qui explique ce qui se passe. Chaque erreur indiquée doit : Faire référence à l’étiquette de la commande de formulaire correspondant. Fournir une description concise et facile à comprendre de l’erreur. Indiquer comment corriger les erreurs et rappeler aux utilisateurs les exigences en matière de format. Inclure dans la page un lien vers la commande de formulaire correspondante pour faciliter l’accès. La validation du formulaire de la BOEW numérote également chaque erreur dans la liste et dans la commande. L'exemple commence Titre (Ce champ est requis) Dr. Esq. Mr. Ms. Prénom (Ce champ est requis) Nom de famille (Ce champ est requis) Numéro de téléphone (y compris l’indicatif régional) (Ce champ est requis) L'exemple finit ",
 href: '../module6/user-notifications-fr.html#list-errors'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: "  Bon exemple 3 : Liste des erreurs avant le formulaire"
},{
 categories: 'module6',
 content: "  Bon exemple 4 : Rétroaction en ligne Fournir en ligne des commentaires sur la réussite et les erreurs, à même la commande du formulaire. Combiner un indicateur visuel et un message de rétroaction. Par exemple : Indiquer les champs de réussite avec le mot vert « OK » préfixé dans l’étiquette, une bordure verte sur la saisie et un crochet vert. Indiquer les champs d’erreurs avec le mot « Erreur » en rouge préfixé dans l’étiquette, une bordure rouge et des instructions en rouge sur la façon de les corriger. Dans cet exemple, chaque groupe d’étiquettes, de commandes et de messages est imbriqué dans une avec un nom de classe, soit « réussite » ou « erreur », qui établit la couleur par l’entremise de CSS. Le mot « OK » ou « Erreur » est inséré au début de l’étiquette, ce qui donne un équivalent textuel aux utilisateurs daltoniens. Une rétroaction plus longue est associée à la commande du formulaire au moyen de l’attribut aria-describedby, pointant vers la valeur d’attribut id du message, maintenue dans un élément . Le lecteur d’écran NVDA indique que le crochet est « activé ». Le traitement de la rétroaction en ligne de la validation des formulaires de la BOEW diffère, comme il est décrit à la section suivante. L'exemple commence OK: Nom d’utilisateur: ✓ Erreur: Date d’expiration: Utilisez le format MM/AAAA. L'exemple finit HTML Début du code OK: Nom d’utilisateur: ✓ Erreur: Date d’expiration: tilisez le format MM/AAAA. Soumettre Fin du code CSS Début du code .error { color: #900; } .success { color: #007a00; } .error input { border: 3px solid #900; } .success input { border: 3px solid #007a00; } label { display: block; } Fin du code ",
 href: '../module6/user-notifications-fr.html#in-line-feedback'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: "  Bon exemple 4 : Rétroaction en ligne"
},{
 categories: 'module6',
 content: "  Avis aux utilisateurs de la validation des formulaires de la BOEW La validation des formulaires de la BOEW génère des avis aux utilisateurs qui diffèrent des conseils fournis ci-dessus : Par défaut, la BOEW utilise un en-tête pour le sommaire des erreurs et on peut le configurer pour qu’il soit plus faible. Il ne peut pas être réglé à . La BOEW ne modifie pas l’élément du pour inclure un message de succès/erreur. La BOEW ne fournit pas de rétroaction en ligne sur le succès. La BOEW numérote les erreurs. Avec la rétroaction en ligne, la BOEW annexe tous les messages d’erreur dans l’étiquette, plutôt que de pointer vers le message avec l’attribut aria-describedby de la commande. Il s’agit d’un contenu verbeux pour une étiquette, mais l’utilisateur est assuré de voir l’information. The page d’exemple pour la validation des formulaires de la BOEW couvre toute la variété des saisies par l’utilisateur. Bon exemple : Rétroaction en ligne sur la BOEW L'exemple commence URL du site Web (https://www.url.com) (requis) Erreur 6 : Veuillez entrer une URL valide. L'exemple finit HTML Début du code URL du site Web (https://www.url.com) (requis) Erreur 6 : Veuillez entrer une URL valide. ",
 href: '../module6/user-notifications-fr.html#wet-form-validation'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: " Avis aux utilisateurs de la validation des formulaires de la BOEW"
},{
 categories: 'module6',
 content: "  Avis aux utilisateurs de la validation des formulaires de la BOEW La validation des formulaires de la BOEW génère des avis aux utilisateurs qui diffèrent des conseils fournis ci-dessus : Par défaut, la BOEW utilise un en-tête pour le sommaire des erreurs et on peut le configurer pour qu’il soit plus faible. Il ne peut pas être réglé à . La BOEW ne modifie pas l’élément du pour inclure un message de succès/erreur. La BOEW ne fournit pas de rétroaction en ligne sur le succès. La BOEW numérote les erreurs. Avec la rétroaction en ligne, la BOEW annexe tous les messages d’erreur dans l’étiquette, plutôt que de pointer vers le message avec l’attribut aria-describedby de la commande. Il s’agit d’un contenu verbeux pour une étiquette, mais l’utilisateur est assuré de voir l’information. The page d’exemple pour la validation des formulaires de la BOEW couvre toute la variété des saisies par l’utilisateur. Bon exemple : Rétroaction en ligne sur la BOEW L'exemple commence URL du site Web (https://www.url.com) (requis) Erreur 6 : Veuillez entrer une URL valide. L'exemple finit HTML Début du code URL du site Web (https://www.url.com) (requis) Erreur 6 : Veuillez entrer une URL valide. ",
 href: '../module6/user-notifications-fr.html#wet-in-line-feedback'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: "  Bon exemple : Rétroaction en ligne sur la BOEW"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.3.1 : Identification des erreurs 3.3.3 : Suggestion après une erreur Techniques G83 : Fournir une description textuelle pour identifier un champ obligatoire qui n'a pas été rempli (en anglais) G85 : Fournir une description textuelle quand la saisie de l'utilisateur n'entre pas dans les formats ou les valeurs requises (en anglais) G139 : Créer un mécanisme permettant à l'utilisateur d'aller directement aux erreurs (en anglais) (Advisory) G184 : Fournir des instructions textuelles au début d'un formulaire ou d'un ensemble de champs pour décrire les données requises (en anglais) G199 : Fournir un retour de réussite lorsque les données ont été envoyées avec succès (en anglais) (Advisory) ARIA18 : Utiliser aria-alertdialog pour identifier des erreurs (en anglais) ARIA19 : Utiliser ARIA role=alert ou des régions réelles pour identifier des erreurs (en anglais) ARIA21 : Utiliser ARIA-Invalid pour indiquer un champ d’erreur (en anglais) ",
 href: '../module6/user-notifications-fr.html#resources1'  ,
 title: "Avis à l’utilisateur - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module6',
 content: "  Aperçu : Validation des saisies Pour aider les utilisateurs à éviter les erreurs, HTML5 définit une gamme de fonctionnalités intégrées pour valider les types communs de saisie, comme les adresses de courriel et les dates. Certains scripts peuvent être nécessaires à la validation lors de l’utilisation de commandes personnalisées ou à la prise en charge des anciens navigateurs. Dans ces situations, les notifications aux utilisateurs doivent être accessibles, comme décrit à la section Notifications aux utilisateurs. Pour assurer la sécurité, les données doivent également être validées du côté client et du côté serveur. La plupart des données d’utilisateurs peuvent être validées au moyen des attributs de validation des contrôles de formulaire HTML5. Voici les attributs de validation communs : L'attribut required Indique si un champ de formulaire doit être rempli avant que le formulaire puisse être soumis. Voir Validation des saisies requises. L'attribut type Précise le type de données. Voir Validation des types de saisie commune. . L'attribut pattern Précise une expression régulière qui définit un modèle que les données saisies doivent suivre. Voir Validation des saisies de structure. L'attribut minlength et maxlength Indique la longueur minimale et maximale des données textuelles. Voir Validation de la longueur des saisies. L'attribut min et max Indique les valeurs minimales et maximales des types de saisies numériques. Voir Validation de la longueur des saisies. Si les règles spécifiées par les attributs de validation ne sont pas suivies, l’élément devient invalide et le navigateur bloque le formulaire et affiche un message d’erreur. ",
 href: '../module6/validating-input-fr.html#overview'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Aperçu : Validation des saisies"
},{
 categories: 'module6',
 content: "  Validation des saisies requises Identifiez les champs de formulaire requis à la fois visuellement dans l’étiquette et sémantiquement : Pour identifier visuellement les champs requis dans l’étiquette, ajoutez un astérisque (*) à l’étiquette et définissez l’astérisque au-dessus du formulaire, ou ajoutez le mot « requis » entre parenthèses. Pour identifier sémantiquement les champs requis, ajoutez l’attribut required à la commande. L’attribut required déclenche une validation côté client dans le navigateur. Les navigateurs Web actuels prennent en charge l’attribut et avisent l’utilisateur de toute entrée requise manquant au moyen d’une boîte de dialogue standard du navigateur Web. Ces dialogues respectent les paramètres et les préférences de l’utilisateur dans le navigateur et le système d’exploitation, comme la taille de police par défaut, les couleurs et la langue. La présence de l’attribut required permet d’utiliser la pseudoclasse :required pour le style CSS. Si l' requis n’a aucune valeur, il permet d’utiliser la pseudoclasse :invalid. Voir le bon exemple suivant. Bon exemple : Validation par le navigateur des saisies requises Dans cet exemple, le navigateur ne permet pas de soumettre le formulaire tant que le texte n’est pas entré dans le champ de saisis requis. La pseudoclasse :required applique un fond rose. La pseudoclasse :invalid applique une bordure pointillée lorsque n’a pas de cible. L'exemple commence Organisation (requis) L'exemple finit HTML Début du code Organisation (requis) Fin du code CSS Début du code input:invalid { border: 2px dashed red; } input:required { background-color: pink; } Fin du code ",
 href: '../module6/validating-input-fr.html#required-input'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Validation des saisies requises"
},{
 categories: 'module6',
 content: "  Validation des types de saisie communs HTML5 introduit de nouveaux types de données input, notamment email, url, number, tel (téléphone), date et range. Les navigateurs Web modernes permettent la validation intégrée des erreurs du côté client pour ces nouveaux types de saisie. Par exemple, une adresse URL mal formée déclenche le navigateur pour afficher un dialogue avec le message « Veuillez entrer une adresse URL ». Pour aider les utilisateurs à saisir des données plus facilement, HTML5 offre des commandes pour certains des nouveaux types de saisie, comme un sélecteur de date et des boutons de défilement pour augmenter ou réduire des chiffres. Par exemple, dans l’exemple ci-dessous, les navigateurs modernes affichent le champ de saisie « Numéro » avec des boutons pour augmenter ou réduire le nombre et affichent le champ de saisie « Plage » comme commande de défilement. Les anciens navigateurs Web qui ne prennent pas en charge les nouveaux types de saisie affichent un champ de texte simple. Types de saisie déjà utilisés lors de l'introduction de HTML5 text Cet élément de saisie définit un champ de saisie de texte d’une ligne password Cet élément définit un champ de saisie d’un mot de passe d’une ligne submit Cet élément définit un bouton Soumettre pour soumettre le formulaire au serveur reset Cet élément définit un bouton de réinitialisation pour réinitialiser toutes les valeurs du formulaire. radio Cet élément définit un bouton radio qui permet de sélectionner une option. checkbox Cet élément définit les cases à cocher qui permettent de sélectionner plusieurs formulaires d’options. button Cet élément définit un simple bouton-poussoir qui peut être programmé pour effectuer une tâche sur un événement. file Cet élément permet de sélectionner le fichier à partir du dispositif de stockage. image Cet élément définit un bouton Soumettre graphique. Types de saisie introduits avec HTML5 color Cet élément définit un champ de saisie d’une couleur spécifique. date Cet élément définit un champ de saisie pour la sélection de la date. datetime-local Cet élément définit un champ de saisie pour entrer une date sans fuseau horaire. email Cet élément définit un champ de saisie pour entrer une adresse électronique. month Cet élément définit une commande avec le mois et l’année, sans fuseau horaire. number Cet élément définit un champ de saisie servant à entrer un nombre. range Définit une valeur numérique qui ne doit pas être inférieure à une valeur donnée, ni supérieure à une autre valeur donnée. url Cet élément définit un champ pour saisir l’URL. week Cet élément définit un champ où saisir la date avec la semaine et l’année, sans fuseau horaire. search Cet élément définit un champ de texte simple pour saisir une chaîne de recherche. tel Cet élément définit un champ de saisie pour entrer le numéro de téléphone. Bon exemple : Types de saisie HTML5 L'exemple commence Courriel URL Numéro Plage Date Heure Continue L'exemple finit Voir le HTML Début du code Courriel Site Web Numéro Plage Date Heure Continue Fin du code ",
 href: '../module6/validating-input-fr.html#common-input'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Validation des types de saisie communs"
},{
 categories: 'module6',
 content: "  Validation des saisies structurées L’attribut pattern offre une autre fonction utile de validation. Il faut une expression régulière (regex) comme valeur, qui est utilisée pour faire correspondre les combinaisons de caractères dans la saisie de texte. Regex est idéal pour la validation des formulaires puisqu’il associe des types particuliers de structures de données comme les numéros de téléphone, les codes postaux et les numéros de série. Dans cet exemple, l’attribut pattern de l’élément utilise regex pour définir un format particulier qui correspond aux caractères d’une plaque d’immatriculation de voiture de l’Ontario (émise depuis 1997). La structure se compose de quatre lettres, suivies d’une espace et de trois chiffres. Le modèle ne capturera pas les valeurs des plaques d'immatriculation personnalisées. Bon exemple : Utilisation de l’attribut de structure pour obtenir une correspondance avec une plaque d’immatriculation de véhicule L'exemple commence Plaque d’immatriculation de l’Ontario (XXXX 999) L'exemple finit HTML Début du code Plaque d’immatriculation de l’Ontario (XXXX 999) Fin du code ",
 href: '../module6/validating-input-fr.html#patterned-input'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Validation des saisies structurées"
},{
 categories: 'module6',
 content: "  Validation de la longueur des saisies La longueur de caractères de tous les champs de texte créé par ou peut être limitée en utilisant les attributs minlength et maxlength. Un champ n’est pas valide si la valeur contient moins de caractères que la longueur minlength ou plus de caractères que la longueur maxlength. Pour les champs numériques, les attributs min et max peuvent être utilisés pour fournir une plage de valeurs valides. Bon exemple : Validation de la longueur des saisies L'exemple commence Carotte ou orange? Combien? (1 à 10) Soumettre L'exemple finit Voir le HTML Début du code Carotte ou orange? Combien? Soumettre Fin du code ",
 href: '../module6/validating-input-fr.html#length'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Validation de la longueur des saisies"
},{
 categories: 'module6',
 content: "  Tenir compte des différents formats de saisie Lors de la conception de la validation pour les différents types de données, il faut tenir compte autant que possible des différents formats de saisie. Tenez compte de l’internationalisation et de la personnalisation. Soyez permissif quant au format de saisie. Par exemple, les codes postaux et les numéros de téléphone dans différents pays suivent des tendances différentes. Les plaques d’immatriculation peuvent être personnalisées. Votre formulaire sera plus facile à utiliser s’il peut interpréter plusieurs notations. ",
 href: '../module6/validating-input-fr.html#input-formats'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Tenir compte des différents formats de saisie "
},{
 categories: 'module6',
 content: "  Avantages de la validation côté client La validation côté client améliore l’expérience utilisateur. En repérant les données non valides du côté client, l’utilisateur peut corriger le problème immédiatement, plutôt que d’attendre un aller-retour au serveur pour recevoir un message d’erreur. Le caractère immédiat rend les erreurs de validation plus compréhensibles. La validation côté client peut également réduire la charge du réseau et du serveur. La validation côté client est cependant facile à contourner, de sorte que les utilisateurs malveillants peuvent facilement envoyer des données erronées à votre serveur. Pour cette raison, vous devriez toujours valider le côté serveur également. ",
 href: '../module6/validating-input-fr.html#client-benefits'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Avantages de la validation côté client "
},{
 categories: 'module6',
 content: "  Validation par l’utilisateur Le fait de permettre à vos utilisateurs de vérifier et de corriger leurs saisies permet également de réduire les erreurs. Offrez cette fonction dans la mesure du possible, mais surtout lorsque les actions ont un caractère permanent, juridique, financier ou autrement critique, ou lorsque les données de l’utilisateur ne peuvent être vérifiées automatiquement. Exiger la confirmation de l’utilisateur Dans la mesure du possible, exigez la confirmation de l’utilisateur pour les actions irréversibles, comme la suppression permanente des données. Par exemple : Une application de messagerie Web comportant une action Soumettre irréversible pour l’envoi de dizaines de courriels invite l’utilisateur à confirmer. La confirmation est mise en œuvre sous forme de fenêtre modale (voir Module 12), ce qui exige que l’utilisateur confirme l’action avant de continuer. Avant de passer une commande en ligne, l’utilisateur examine et confirme un sommaire des produits commandés ainsi que les adresses de livraison et de facturation. Fonctionnalité d’annulation Dans la mesure du possible, assurez-vous que les actions Soumettre sont réversibles. Il existe plusieurs commandes d’interface utilisateur qui permettent habituellement aux gens de reculer à l’état précédent du système. Par exemple : Une option d’annulation permettra aux utilisateurs d’annuler les changements à un élément d’interface utilisateur. Un dossier « corbeille » qui restaure les fichiers supprimés. L’utilisation d’un lien Retour ramène les utilisateurs à une page ou à un écran précédents. Un bouton Annuler permet à l’utilisateur de quitter une tâche ou un processus en plusieurs étapes. Un bouton Fermer permet aux utilisateurs de fermer un affichage nouveau ou existant. ",
 href: '../module6/validating-input-fr.html#validation-user'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Validation par l’utilisateur"
},{
 categories: 'module6',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.3.1 : Identification des erreurs 3.3.4 : Prévention des erreurs (juridiques, financières, de données) Techniques G83 : Fournir une description textuelle pour identifier un champ obligatoire qui n'a pas été rempli (en anglais) G85 : Fournir une description textuelle quand la saisie de l'utilisateur n'entre pas dans les formats ou les valeurs requises (en anglais) G98 : Donner la possibilité à l'utilisateur de réviser et de corriger ses réponses avant de soumettre le formulaire (en anglais) G99 : Donner la possibilité de récupérer des informations supprimées (en anglais) G155 : Ajouter une case à cocher à un bouton de soumission (en anglais) G164 : Prévoir une période de temps déclarée où la transaction peut être mise à jour ou annulée par l'utilisateur suite à la soumission du formulaire (en anglais) G168 : Demander une confirmation avant de poursuivre l'action choisie (en anglais) SCR18 : Fournir une alerte de validation côté client (en anglais) ",
 href: '../module6/validating-input-fr.html#resources'  ,
 title: "Validation des saisies - Module 6 - Formulaires" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  Couleur Assurez-vous que l’information véhiculée par les différences de couleur est également disponible en texte. Incluez un indice textuel pour les étiquettes de formulaire en couleur. Assurez-vous qu’il y a des indices visuels supplémentaires lorsque des différences de couleur de texte sont utilisées pour transmettre de l’information. Assurez-vous que le rapport de contraste par rapport au texte environnant est de 3:1 et utilisez un indice visuel supplémentaire en cas de sélection de liens ou de commandes lorsque seule leur couleur les distingue. ",
 href: '../module7/best-practice-mod-7-fr.html#bp-colour'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Couleur"
},{
 categories: 'module7',
 content: "  Contraste Assurez-vous que le rapport de contraste du texte en petits caractères (police ordinaire de moins de 18 points ou caractères gras de moins de 14 points) est d’au moins 4,5:1 par rapport à l’arrière-plan. Assurez-vous que le rapport de contraste du texte en gros caractères (police standard d’au moins 18 points ou caractères gras de 14 points) est d’au moins 3:1 par rapport à l’arrière-plan. Assurez-vous que le rapport de contraste des composants actifs de l’interface utilisateur (c.-à-d. les commandes), leurs états et les graphiques significatifs est d’au moins 3:1 par rapport aux couleurs adjacentes. Dans la mesure du possible, augmentez le contraste et visez les valeurs maximales de 7:1 pour les textes en petits caractères et de 4,5:1 pour ceux en gros caractères. ",
 href: '../module7/best-practice-mod-7-fr.html#bp-contrast'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Contraste"
},{
 categories: 'module7',
 content: "  Proximité visuelle des étiquettes Placez les étiquettes relatives aux champs du formulaire immédiatement avant ceux-ci: soit au-dessus du champ (privilégié par le Guide de style de la BOEW); soit à gauche du champ, aligné à droite (privilégié par le Guide de style de la BOEW lorsqu’il faut conserver un espace vertical). Placez les étiquettes des boutons radio et des cases à cocher après le champ. ",
 href: '../module7/best-practice-mod-7-fr.html#visual-proximity-of-labels'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Proximité visuelle des étiquettes"
},{
 categories: 'module7',
 content: "  Espacement des textes Votre conception doit être suffisamment souple pour conserver son contenu et sa fonctionnalité lorsque l’utilisateur modifie l’espacement des textes, en tenant compte de ces contraintes: hauteur de ligne (espacement des lignes) à au moins 1,5 fois la taille de la police; espacement suivant les paragraphes d’au moins 2 fois la taille de la police; interlettrage (approche de groupe) d’au moins 0,12 fois la taille de la police; espacement entre les mots d’au moins 0,16 fois la taille de la police. Pour contourner l’espacement des textes dans votre conception : N’utilisez pas de contenants fixes dans vos styles de CSS. Veiller à ce que le contenu s’affiche sans chevauchement ou perte de texte. Utilisez des unités relatives de taille de police, de hauteur de ligne, d’espaces entre les caractères, les mots, les lignes et les paragraphes. ",
 href: '../module7/best-practice-mod-7-fr.html#text-spacing'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Espacement des textes"
},{
 categories: 'module7',
 content: "  Contenu produit par une CSS Masquer le contenu décoratif généré par des feuilles de style en cascade des lecteurs d’écrans en utilisant l’attribut aria-hidden='true'. Ne pas utiliser du texte généré par des feuilles de style en cascade. Exception : Utiliser du texte généré par des feuilles de style en cascade pour afficher les éléments mark, del, ins et s aux utilisateurs de lecteur d’écran. Concernant les icônes d’information générées par des feuilles de style en cascade : Configurer l’icône sur un élément , et : Le masquer sur le lecteur d’écran des utilisateurs avec l’attribut aria-hidden. Ajouter une étiquette visible pour les utilisateurs de souris en utilisant l’attribut title. Ajouter une étiquette pour les utilisateurs de lecteur d’écran dans un deuxième élément , masqué visuellement avec la classe CSS de la BOEW .wb-inv. ",
 href: '../module7/best-practice-mod-7-fr.html#css-generated-content'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Contenu produit par une CSS"
},{
 categories: 'module7',
 content: "  Masquer un contenu Il peut l’être pour trois groupes d’utilisateurs: Pour tous les utilisateurs, en utilisant l’attribut display:none ou visibility:hidden de la CSS. Lorsque vous masquez du contenu inactif, comme les fenêtres modales non déclenchées et les sous-menus non sélectionnés, vous devez le masquer pour tous les utilisateurs. Pour les utilisateurs d’une technologie d’aide, au moyen de l’attribut aria-hidden='true' pour supprimer l’élément de l’API d’accessibilité; Pour les utilisateurs voyants, par l’entremise de la classe .wb-inv de CSS de la BOEW pour masquer le contenu. ",
 href: '../module7/best-practice-mod-7-fr.html#hiding-content'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Masquer un contenu"
},{
 categories: 'module7',
 content: "  Affichage d’un contenu lorsqu’on le survole avec le pointeur ou qu’on le sélectionne avec le clavier Lorsque vous affichez un contenu masqué à l’aide du pointeur, assurez-vous que ce contenu satisfait aux trois critères suivants: Peut être ignoré L’utilisateur peut ignorer le contenu affiché sans déplacer le pointeur de la souris ou annuler la sélection avec le clavier, habituellement en appuyant sur la touche Escape. Peut être survolé L’utilisateur peut placer le pointeur de la souris sur le contenu affiché. Persistant Le contenu affiché ne disparaît pas tant que le pointeur ne l’a pas dépassé ou que la sélection avec le clavier n’est pas annulée. ",
 href: '../module7/best-practice-mod-7-fr.html#exposing-content-on-hover-or-focus'  ,
 title: "Pratiques exemplaire – Module 7 – Conception visuelle et couleurs" ,
 heading: " Affichage d’un contenu lorsqu’on le survole avec le pointeur ou qu’on le sélectionne avec le clavier"
},{
 categories: 'module7',
 content: "  Aperçu : Couleur La couleur améliore la conception du contenu Web en rehaussant son attrait esthétique, sa convivialité et son accessibilité. Aussi utile soit-elle, la couleur ne doit pas être la seule façon de transmettre l’information. La couleur transmet l’information lorsqu’elle met l’accent sur le texte, fait la distinction entre les éléments visuels et distingue les éléments interactifs des éléments statiques. Les personnes daltoniennes, malvoyantes ou aveugles doivent se voir offrir un équivalent textuel de l’information transmise par couleur. Il en va de même pour ceux qui utilisent uniquement du texte, des couleurs limitées ou des affichages monochromes. Pour répondre aux besoins de tous, assurez-vous que la couleur n’est pas la seule façon de transmettre l’information. Assurez-vous également que les utilisateurs peuvent personnaliser la conception de vos CSS en ce qui a trait aux couleurs afin qu’ils puissent compenser celles dont les contrastes sont extrêmement vifs ou faibles au moyen du système d’exploitation ou du navigateur en appliquant une feuille de style personnalisée. ",
 href: '../module7/colour-fr.html#couleur-apercu'  ,
 title: "Couleur – Module 7 – Conception visuelle et couleurs" ,
 heading: " Aperçu : Couleur"
},{
 categories: 'module7',
 content: "  Information transmise au moyen de couleurs Les renseignements transmis par des couleurs doivent avoir un équivalent textuel exact. Mauvais exemple : Données de tableau en couleur sans étiquette de texte Dans ce mauvais exemple, la couleur à elle seule communique la gravité. Il n’y a pas d’étiquette de texte. Les valeurs de gravité sont définies sous le tableau au moyen d’une légende ou d’une clé des couleurs. L'exemple commence Rapport de défaut # de défauts Sévérité Status 20 Ouvert 30 Fermé 15 En cours Rouge = Élevé, Jaune = Moyen, Vert = Faible Figure 1 : Tableau inaccessible qui utilise uniquement la couleur pour déterminer les niveaux de gravité. Aucune étiquette texte n’est fournie. L'exemple finit L'exemple commence Rapport de défaut # de défauts Sévérité Status 20 Ouvert 30 Fermé 15 En cours Rouge = Élevé, Jaune = Moyen, Vert = Faible Figure 2 : Couleurs de la figure 1 vues par un utilisateur atteint de protanopie (cécité au rouge). Bronze plutôt que rouge. Beige au lieu du jaune. Bronze légêrement plus foncé plutôt que vert. L'exemple finit L'exemple commence Rapport de défaut # de défauts Sévérité Status 20 Ouvert 30 Fermé 15 En cours Rouge = Élevé, Jaune = Moyen, Vert = Faible Figure 3 : Couleurs de la figure 1 vues par un utilisateur atteint de deutéranopie (cécité à la couleur verte). Brun au lieu du rouge. Beige au lieu du jaune. Brun légêrement plus foncé au lieu du vert. L'exemple finit Bon exemple : Données de tableau en couleur avec étiquettes de texte Le tableau utilise des couleurs pour transmettre l’information avec des étiquettes textuelles qui assurent que le sens est perceptible. L'exemple commence Rapport de défaut # de défauts Sévérité Status 20 Élevé Ouvert 30 Moyen Fermé 15 Faible En cours Figure 4 : Un tableau accessible qui combine la couleur et l'étiquette textuelle dans la même cellule pour transmettre de l’information. L'exemple finit Mauvais exemple : Champ d’erreur indiqué seulement par une couleur Dans ce mauvais exemple, le texte en rouge est la seule indication d’une erreur. Le rouge et le noir sont pratiquement indiscernables pour certains utilisateurs atteints de cécité aux couleurs. De plus, le texte rouge ne satisfait pas à l’exigence minimale de rapport de contraste de 4,5:1 des WCAG (rouge de base, ou #FF000, a un rapport de contraste de 4:1 par rapport à un fond blanc, #FFFFFF). Enfin, sans balisage sémantique supplémentaire, il serait impossible pour les utilisateurs de lecteurs d’écran de distinguer le champ problématique. L'exemple commence Veuillez remplir les champs indiqués en rouge Information d’ouverture de session de l’utilisateur (obligatoire) Nom d’utilisateur Mot de passe Courriel Téléphone L'exemple finit Bon exemple : Erreur de champ du formulaire surlignée avec texte explicatif Dans cet exemple, la validation met en évidence une erreur avec un fond coloré et un texte explicatif « Erreur 1 : Ce champ est obligatoire. » L'exemple commence Figure 5 : Après la validation, un message d’erreur en caractères gras sur un fond gris foncé s’affiche au champ problématique. L'exemple finit L'exemple commence Titre (obligatoire) Dr. Esq. Mr. Ms. Prénom (obligatoire) Nom de famille (obligatoire) Adresse courriel (votrenom@domain.com) L'exemple finit Cet exemple est tiré du Guide de la BOEW Mauvais exemple : Seule la couleur communique l’information Dans le mauvais exemple ci-dessous, la légende utilise uniquement la couleur pour différencier les colonnes de l’histogramme. L'exemple commence L'exemple finit Bon exemple : Information communiquée par la couleur et le motif Dans le bon exemple ci-dessous, la légende utilise la couleur et les motifs pour différencier les colonnes de l’histogramme. Le texte de remplacement décrit adéquatement les données véhiculées dans le diagramme. L'exemple commence Texte de remplacement : Histogramme illustrant les ventes de console de jeu au cours du premier trimestre de 2021 : en janvier 84 Nintendo, 66 PlayStation; en février 48 Nintendo, 22 PlayStation; en mars 25 Nintendo, 57 PlayStation L'exemple finit Mauvais exemple : Information codée par couleur non communiquée par un texte de remplacement Dans le mauvais exemple ci-dessous, la légende utilise la couleur et les motifs pour différencier les colonnes de l’histogramme. Toutefois, il n’existe pas de texte de remplacement pour les utilisateurs de lecteurs d’écran. L'exemple commence L'exemple finit HTML Début du code Fin du code ",
 href: '../module7/colour-fr.html#information-transmise-au-moyen-de-couleurs'  ,
 title: "Couleur – Module 7 – Conception visuelle et couleurs" ,
 heading: " Information transmise au moyen de couleurs"
},{
 categories: 'module7',
 content: "  Distinguer les liens et les contrôles du texte Les utilisateurs malvoyants et daltoniens ont besoin de distinguer les liens du texte voisin. La façon la plus simple de le faire consiste à souligner le lien et à doter une commande d’une bordure. Lorsqu’un lien est identifié uniquement par une couleur (ce qui signifie que le soulignement a été supprimé), deux conditions doivent être remplies: Contraste de 3:1 entre le corps du texte et le texte du lien. Un « indice visuel » (pas seulement un changement de couleur) qui apparaît lorsqu’on survole avec la souris ou qu’on le sélectionne avec le clavier. Pour ce faire, le plus souvent, le lien apparaît souligné lorsqu’on le survole ou qu’on le sélectionne, mais vous pouvez aussi ajouter une couleur d’arrière-plan, une bordure ou un contour. Notez que cela pose problème uniquement lorsque le lien et le corps du texte apparaissent ensemble. Cela ne s’applique pas aux liens dans l’en-tête ou superposés dans un menu, où ils sont interprétés comme des liens par leur position sur la page. Ces exigences s’ajoutent à l’exigence minimale de contraste de 4,5:1 entre le texte original et le fond. Il peut être difficile de trouver une couleur de lien qui présente un contraste de 3:1 avec le corps noir et un contraste de 4,5:1 avec un fond blanc. La technique G183 des WCAG énumère les valeurs de couleur qui satisfont aux critères de l’exemple 1. Bon exemple: Texte de l’hyperlien souligné Dans cet exemple, le texte de l’hyperlien se distingue du texte normal voisin par un soulignement. L'exemple commence Le Bureau de l’accessibilité des TI (BATI) demeure un fournisseur de technologies d’adaptation et un défenseur de l’inclusion des personnes handicapées en milieu de travail. L'exemple finit Bon exemple : Contraste élevé avec un effet visuel en cas de survol ou de sélection Cet exemple évite un soulignement statique en: Utilisant le bleu (#3333FF) comme couleur de lien, qui offre un contraste de 3,1:1 par rapport au texte noir voisin (dépasse tout juste le minimum de 3:1); un contraste de 6,9:1 avec le blanc de fond (bien supérieur au minimum 4,5:1). En tant qu’indice visuel supplémentaire sur le survol ou à la sélection, le texte du lien est réglé avec un contraste de blanc très élevé (21:1) par rapport au fond noir. L'exemple commence Le Bureau de l’accessibilité des TI (BATI) demeure un fournisseur de technologies d’adaptation et un défenseur de l’inclusion des personnes handicapées en milieu de travail. L'exemple finit Résultats de l’application Colour Contrast Analyser Figure 6 : L’’application Colour Contrast Analyseur indique un rapport de contraste de 3,1:1 entre le bleu des liens (hex #333FF) et le noir du texte voisin (hex #000000).). Figure 7 : L’application Colour Contrast Analyser indique un rapport de contraste de 6,9:1 entre le bleu des liens (hex #3333FF) et le blanc de fond (hex #FFFFFF). Après sélection à l’aide du clavier ou survol par le pointeur de la souris Figure 8 : L’application Colour Contrast Analyser indique un rapport de contraste de 21:1 entre le blanc des liens (hex #FFFFFF) et le noir du fond (hex #000000). Mauvais exemple : Seule la couleur distingue les liens du texte Dans ce mauvais exemple, la couleur bleue du premier plan indique que les deux dernières icônes sont des liens. Le bleu présente le contraste requis de 3:1 par rapport au noir du texte voisin, mais il n’a pas d’autre effet visuel en cas de survol ou de sélection. L'exemple commence Une nouvelle idée brillante La dernier modèle de Tesla Navigation Contactez-nous L'exemple finit Bon exemple : La bordure complète la couleur pour distinguer les liens du texte de base Dans ce bon exemple, l’apparition de bordures en cas de survol et de sélection indique que les deux dernières icônes sont des liens. L'exemple commence Une nouvelle idée brillante La dernier modèle de Tesla Navigation Contactez-nous L'exemple finit Personnalisation de la couleur et du contraste de l’interface Certains utilisateurs sensibles à la luminosité ou malvoyants s’attendent à pouvoir modifier les couleurs. Dans la mesure du possible, utilisez des fonctions et des contrôles natifs de HTML. Cela permet aux utilisateurs de personnaliser la couleur et le contraste de l’interface pour les composants visibles de l’interface utilisateur. Bon exemple : Bouton avec CSS Dans cet exemple, l’apparence du bouton est réglée avec les règles CSS, y compris les couleurs. Les valeurs peuvent facilement être remplacées par une feuille de style utilisateur personnalisée L'exemple commence Suivant L'exemple finit Voir le CSS Début du code .button-ex { background-color: #0065CB; border: none; color: white; padding: 10px 25px; text-align: center; text-decoration: none; display: inline-block; font-size: 36px; margin: 4px 2px; cursor: pointer; } Fin du code Mauvais exemple : Bouton utilisant une image de texte Lorsque les boutons utilisent une image de texte, les feuilles de style utilisateur ne peuvent pas personnaliser les propriétés du texte, notamment les couleurs d’avant et d’arrière-plan. En grossissant le texte, il est pixélisé et devient flou dans les images, ce qui diminue la lisibilité. L'exemple commence L'exemple finit HTML Début du code Fin du code ",
 href: '../module7/colour-fr.html#distinguer-les-liens-et-les-controles-du-texte'  ,
 title: "Couleur – Module 7 – Conception visuelle et couleurs" ,
 heading: " Distinguer les liens et les contrôles du texte"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.1 : Utilisation de la couleur 1.4.3 : Contraste (Minimum) 1.4.11 : Contraste du contenu non textuel (en anglais) 1.3.3 : Caractéristiques sensorielles Techniques G18 : S'assurer qu'un rapport de contraste d'au moins 4,5 pour 1 existe entre le texte (et le texte sous forme d'image) et l'arrière-plan du texte (en anglais) G145 : S'assurer qu'un rapport de contraste d'au moins 3 pour 1 existe entre le texte (et le texte sous forme d'image) et l'arrière-plan du texte (en anglais) G182 : S'assurer que des indices visuels additionnels sont disponibles quand les différences de couleur sont utilisées pour véhiculer une information (en anglais) G183 : Utiliser un rapport de contraste de 3 pour 1 avec le texte environnant et fournir des indices visuels additionnels au focus pour les liens et les composants d'interface quand ils ne sont identifiables que par la couleur (en anglais) G195 : Utiliser un indicateur de focus à haute visibilité fourni par l'auteur (en anglais) G207 : S’assurer qu’il y a un rapport de contraste de 3:1 pour les icônes (en anglais) G209 : Offrir un contraste suffisant aux bordures, entre les couleurs adjacentes (en anglais) Échecs F13 : Échec du critère de succès 1.1.1 et 1.4.1 consistant à offrir un équivalent textuel qui n'inclut pas l'information véhiculée par les différences de couleur dans l'image (en anglais) F73 : Échec du critère de succès 1.4.1 consistant à créer des liens qui ne sont pas distinguable visuellement sans la vision des couleur (en anglais) F81 : Échec du critère de succès 1.4.1 consistant à identifier les champs obligatoires ou les champs en erreur par la couleur seulement (en anglais) ",
 href: '../module7/colour-fr.html#color-wcag'  ,
 title: "Couleur – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  Conception avec un contraste suffisant Si le texte, y compris sous forme d’image, n’offre pas un contraste suffisant par rapport à son arrière-plan, il ne sera pas lisible pour les utilisateurs malvoyants ou daltoniens. Les commandes et les graphiques significatifs exigent également un bon contraste. Pour respecter le critère de succès du niveau AA des WCAG en matière de contraste minimal, suivez les pratiques exemplaires suivantes : Assurez-vous que le texte en petits caractères (moins de 18 points [24 pixels] en police ordinaire ou moins de 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 4,5:1 avec l’arrière-plan. Assurez-vous que le texte en gros caractères (au moins 18 points [24 pixels] en police ordinaire ou 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 3:1 avec l’arrière-plan. S’assurer que le contenu non textuel – les composants d’interface utilisateur actifs (c.-à-d. les commandes) et leurs états et les graphiques significatifs – a un rapport de contraste d’au moins 3:1 avec les couleurs adjacentes. Il est souvent difficile de satisfaire aux critères du niveau AAA des WCAG, mais ce n’est pas le cas avec un contraste accru. Nous devrions nous y efforcer autant que possible. Pour satisfaire au critère de succès de niveau AAA des WCAG pour un contraste accru, augmenter le rapport de contraste entre les textes en petits et gros caractères comme suit : Assurez-vous que le texte en petits caractères (moins de 18 points [24 pixels] en police ordinaire ou moins de 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 7:1 avec l’arrière-plan. Assurez-vous que le texte en gros caractères (au moins 18 points [24 pixels] en police ordinaire ou 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 4,5:1 avec l’arrière-plan. Pour les composants d’interface utilisateur, le rapport de contraste de 3:1 avec les couleurs adjacentes: s’applique à une commande et à l’information sur son état, par exemple si un composant est survolé ou sélectionné; s’applique à la limite visuelle indiquant la zone touchée, à moins que la commande contienne du texte qui respecte le rapport de contraste de 4,5:1; ne s’applique pas si l’apparence de la commande et de ses états sont contrôlés par l’agent utilisateur et non modifiés par l’auteur; ne s’applique pas si la commande est désactivée. Vérifier manuellement le contraste à l’aide de l’outil Colour Contrast Analyzer (CCA). Les outils automatisés vérifient le contraste de fond, mais une inspection manuelle est nécessaire lorsque le fond est un gradient, une image, une animation ou une vidéo. Si l’arrière-plan change au fil du temps ou au fur et à mesure que l’utilisateur fait défiler ou que l’affichage change, le contraste devrait persister, même si de brefs intervalles (une seconde) de mauvais contraste ne nuiront pas à l’expérience utilisateur. Le rapport de contraste de 3:1 pour les couleurs adjacentes s’applique également aux graphiques significatifs, qui comprennent des icônes informatives, des lignes dans des graphiques linéaires et des tranches dans des graphiques à secteurs : Vérifiez le contraste de l’objet graphique par rapport aux couleurs adjacentes. S’il y a plusieurs couleurs ou un gradient, effectuez le test dans la zone au contraste le plus faible. Si la zone au contraste le plus faible affiche un rapport inférieur à 3:1, dites-vous qu’elle sera invisible. L’objet graphique est-il toujours compréhensible? S’il y a suffisamment d’objets graphiques pour comprendre, il réussit, sinon il échoue. Mauvais exemple : Faible contraste par rapport au fond (texte) Dans cet exemple, le texte gris foncé (# 777) sur un fond gris (#ccc) a un rapport de contraste de 2,8:1, ce qui est inférieur au rapport requis de 4,5:1. L'exemple commence Protection des renseignements personnels L'exemple finit Mauvais exemple : Faible contraste avec l’arrière-plan (contrôle) La couleur grise de la case à cocher (#9D9D9D) a un rapport de contraste de 2,7:1 par rapport au fond blanc, ce qui est insuffisant pour permettre à certains utilisateurs de distinguer la case à cocher. La bordure grise de l’entrée (#CCCCCC) a un rapport de contraste de 1,6:1 par rapport au fond blanc, ce qui est inférieur au rapport de 3:1 requis pour le contenu non textuel. L'exemple commence Étiquette 1 Étiquette 2 L'exemple finit L’exemple des champs d’entrée est la mise en œuvre actuelle de la BOEW (2021). Vous devez donc remplacer la feuille de style de la BOEW par la couleur d’entrée indiquée dans 'Bon exemple : Contraste suffisant (contrôle)'. Voici le problème du CSS : CSS Début du code .form-control { border: 1px solid #ccc; } Fin du code Bon exemple : Contraste suffisant (contrôle) La bordure grise de la saisie (#93958A) a un rapport de contraste de 3:1, qui satisfait tout juste au critère de succès des WCAG 1.4.11 : Contraste du contenu non textuel (en anglais) L'exemple commence Étiquette 1 Étiquette 2 L'exemple finit CSS Début du code .form-control { border: 1px solid #93958A; } Fin du code Mauvais exemple : Faible contraste avec une couleur adjacente (graphique) Ce graphique d’alerte est composé d’une icône en forme de triangle rouge avec un point d’exclamation blanc sur fond gris. Le triangle est habituellement réservé aux alertes comme celles-ci, donc les deux formes sont importantes. Il y a deux rapports de contraste à considérer avec cette icône: Le rapport de contraste entre le point d’exclamation blanc et le triangle rouge, qui est de 5:1. Le rapport de contraste entre le triangle rouge et le fond gris, qui est de 2:1. Le triangle rouge et le fond gris ne présentent pas de contraste suffisant. Voir d’autres exemples dans le critère de succès 1.4.11: Contraste du contenu non textuel (en anglais). Le mauvais exemple 'Faible contraste avec une couleur adjacente (graphique)' est tiré de Contrast and Colour Accessibility, © WebAIM, 2021. ",
 href: '../module7/contrast-fr.html#conception-avec-un-contraste-suffisant'  ,
 title: "Contraste – Module 7 – Conception visuelle et couleurs" ,
 heading: " Conception avec un contraste suffisant"
},{
 categories: 'module7',
 content: "  Conception avec un contraste suffisant Si le texte, y compris sous forme d’image, n’offre pas un contraste suffisant par rapport à son arrière-plan, il ne sera pas lisible pour les utilisateurs malvoyants ou daltoniens. Les commandes et les graphiques significatifs exigent également un bon contraste. Pour respecter le critère de succès du niveau AA des WCAG en matière de contraste minimal, suivez les pratiques exemplaires suivantes : Assurez-vous que le texte en petits caractères (moins de 18 points [24 pixels] en police ordinaire ou moins de 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 4,5:1 avec l’arrière-plan. Assurez-vous que le texte en gros caractères (au moins 18 points [24 pixels] en police ordinaire ou 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 3:1 avec l’arrière-plan. S’assurer que le contenu non textuel – les composants d’interface utilisateur actifs (c.-à-d. les commandes) et leurs états et les graphiques significatifs – a un rapport de contraste d’au moins 3:1 avec les couleurs adjacentes. Il est souvent difficile de satisfaire aux critères du niveau AAA des WCAG, mais ce n’est pas le cas avec un contraste accru. Nous devrions nous y efforcer autant que possible. Pour satisfaire au critère de succès de niveau AAA des WCAG pour un contraste accru, augmenter le rapport de contraste entre les textes en petits et gros caractères comme suit : Assurez-vous que le texte en petits caractères (moins de 18 points [24 pixels] en police ordinaire ou moins de 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 7:1 avec l’arrière-plan. Assurez-vous que le texte en gros caractères (au moins 18 points [24 pixels] en police ordinaire ou 14 points [19 pixels] en caractères gras) a un rapport de contraste d’au moins 4,5:1 avec l’arrière-plan. Pour les composants d’interface utilisateur, le rapport de contraste de 3:1 avec les couleurs adjacentes: s’applique à une commande et à l’information sur son état, par exemple si un composant est survolé ou sélectionné; s’applique à la limite visuelle indiquant la zone touchée, à moins que la commande contienne du texte qui respecte le rapport de contraste de 4,5:1; ne s’applique pas si l’apparence de la commande et de ses états sont contrôlés par l’agent utilisateur et non modifiés par l’auteur; ne s’applique pas si la commande est désactivée. Vérifier manuellement le contraste à l’aide de l’outil Colour Contrast Analyzer (CCA). Les outils automatisés vérifient le contraste de fond, mais une inspection manuelle est nécessaire lorsque le fond est un gradient, une image, une animation ou une vidéo. Si l’arrière-plan change au fil du temps ou au fur et à mesure que l’utilisateur fait défiler ou que l’affichage change, le contraste devrait persister, même si de brefs intervalles (une seconde) de mauvais contraste ne nuiront pas à l’expérience utilisateur. Le rapport de contraste de 3:1 pour les couleurs adjacentes s’applique également aux graphiques significatifs, qui comprennent des icônes informatives, des lignes dans des graphiques linéaires et des tranches dans des graphiques à secteurs : Vérifiez le contraste de l’objet graphique par rapport aux couleurs adjacentes. S’il y a plusieurs couleurs ou un gradient, effectuez le test dans la zone au contraste le plus faible. Si la zone au contraste le plus faible affiche un rapport inférieur à 3:1, dites-vous qu’elle sera invisible. L’objet graphique est-il toujours compréhensible? S’il y a suffisamment d’objets graphiques pour comprendre, il réussit, sinon il échoue. Mauvais exemple : Faible contraste par rapport au fond (texte) Dans cet exemple, le texte gris foncé (# 777) sur un fond gris (#ccc) a un rapport de contraste de 2,8:1, ce qui est inférieur au rapport requis de 4,5:1. L'exemple commence Protection des renseignements personnels L'exemple finit Mauvais exemple : Faible contraste avec l’arrière-plan (contrôle) La couleur grise de la case à cocher (#9D9D9D) a un rapport de contraste de 2,7:1 par rapport au fond blanc, ce qui est insuffisant pour permettre à certains utilisateurs de distinguer la case à cocher. La bordure grise de l’entrée (#CCCCCC) a un rapport de contraste de 1,6:1 par rapport au fond blanc, ce qui est inférieur au rapport de 3:1 requis pour le contenu non textuel. L'exemple commence Étiquette 1 Étiquette 2 L'exemple finit L’exemple des champs d’entrée est la mise en œuvre actuelle de la BOEW (2021). Vous devez donc remplacer la feuille de style de la BOEW par la couleur d’entrée indiquée dans 'Bon exemple : Contraste suffisant (contrôle)'. Voici le problème du CSS : CSS Début du code .form-control { border: 1px solid #ccc; } Fin du code Bon exemple : Contraste suffisant (contrôle) La bordure grise de la saisie (#93958A) a un rapport de contraste de 3:1, qui satisfait tout juste au critère de succès des WCAG 1.4.11 : Contraste du contenu non textuel (en anglais) L'exemple commence Étiquette 1 Étiquette 2 L'exemple finit CSS Début du code .form-control { border: 1px solid #93958A; } Fin du code Mauvais exemple : Faible contraste avec une couleur adjacente (graphique) Ce graphique d’alerte est composé d’une icône en forme de triangle rouge avec un point d’exclamation blanc sur fond gris. Le triangle est habituellement réservé aux alertes comme celles-ci, donc les deux formes sont importantes. Il y a deux rapports de contraste à considérer avec cette icône: Le rapport de contraste entre le point d’exclamation blanc et le triangle rouge, qui est de 5:1. Le rapport de contraste entre le triangle rouge et le fond gris, qui est de 2:1. Le triangle rouge et le fond gris ne présentent pas de contraste suffisant. Voir d’autres exemples dans le critère de succès 1.4.11: Contraste du contenu non textuel (en anglais). Le mauvais exemple 'Faible contraste avec une couleur adjacente (graphique)' est tiré de Contrast and Colour Accessibility, © WebAIM, 2021. ",
 href: '../module7/contrast-fr.html#sufficient-contrast'  ,
 title: "Contraste – Module 7 – Conception visuelle et couleurs" ,
 heading: "  Bon exemple : Contraste suffisant (contrôle)"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.3 : Contraste (Minimum) 1.4.6 : Contraste (amélioré) (Niveau AAA) 1.4.11 : Contraste du contenu non textuel (en anglais) Techniques G17 : S'assurer qu'un rapport de contraste d'au moins 7 pour 1 existe entre le texte (et le texte sous forme d'image) et l'arrière-plan du texte (en anglais) (Niveau AAA, petit texte) G18 : S'assurer qu'un rapport de contraste d'au moins 4,5 pour 1 existe entre le texte (et le texte sous forme d'image) et l'arrière-plan du texte (en anglais) (Niveau AA, petit texte; Niveau AAA, grand text) G145 : S'assurer qu'un rapport de contraste d'au moins 3 pour 1 existe entre le texte (et le texte sous forme d'image) et l'arrière-plan du texte (en anglais) (Niveau AA, grand text) G195 : Utiliser un indicateur de focus à haute visibilité fourni par l'auteur (en anglais) G207 : S’assurer qu’il y a un rapport de contraste de 3:1 pour les icônes (en anglais) G209 : Offrir un contraste suffisant aux bordures, entre les couleurs adjacentes (en anglais) ",
 href: '../module7/contrast-fr.html#contrast-wcag'  ,
 title: "Contraste – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  Conception avec du contenu généré par une CSS Une CSS peut générer du texte et des icône au moyen des pseudo-classes ::before et ::after. Cependant, les DACW 2.1 ne permettent pas d’utiliser du contenu non décoratif généré par des feuilles de style en cascade (CSS), car il peut être écrasé par des feuilles de style d’utilisateur (utilisées par des utilisateurs malvoyants), il manque un rôle, et il est invisible pour la fonctionnalité de recherche du navigateur; voici, entre autres, les raisons évoquées dans le document defense of WCAG Failure F87. Cela dit, il existe un scénario d’utilisation pour du texte supplémentaire généré par des feuilles de style en cascade ainsi qu’une technique généralement accessible pour les icônes d’information. Veuillez suivre les pratiques exemplaires suivantes en présence d’un contenu généré par des feuilles de style en cascade : Masquer le contenu décoratif généré par des feuilles de style en cascade des lecteurs d’écrans en utilisant l’attribut aria-hidden='true'. Ne pas utiliser du texte généré par des feuilles de style en cascade. Exception : Utiliser du texte généré par des feuilles de style en cascade pour afficher les éléments mark, del, ins et s aux utilisateurs de lecteur d’écran. Concernant les icônes d’information générées par des feuilles de style en cascade : Configurer l’icône sur un élément , et : Le masquer sur le lecteur d’écran des utilisateurs avec l’attribut aria-hidden. Ajouter une étiquette visible pour les utilisateurs de souris en utilisant l’attribut title. Ajouter une étiquette pour les utilisateurs de lecteur d’écran dans un deuxième élément , masqué visuellement avec la classe CSS de la BOEW .wb-inv. Cette approche diffère du modèle d’icônes du Guide de style de la BOEW du fait de l’ajout des attributs title et aria-hidden. Elle ne tient pas compte des besoins des utilisateurs de clavier malvoyants. Les DACW 2.1 proposent également une technique d’icônes informatives CSS, ARIA24 : Semantically identifying a font icon with role='img', mais elle nécessite une déclaration de style particulière dans la feuille de style de l’utilisateur, déclaration conçue pour protéger la déclaration de la famille de polices de l’icône contre l’écrasement. Bien que cela ne soit pas mentionné dans les DACW 2.1, l’utilisation de la technique ARIA24 suppose que l’on fasse connaître cette technique aux utilisateurs malvoyants. De même, le document defense of WCAG Failure F87 laisse pensé que la solution ARIA24 ne dispose pas de la sémantique nécessaire. Il n’existe pas de technique idéale pour les polices d’icônes générées par des feuilles de style en cascade. ",
 href: '../module7/css-generated-fr.html#contenu-genere-par-une-CSS'  ,
 title: "Contenu généré par les feuilles de style en cascade CSS – Module 7 – Conception visuelle et couleurs" ,
 heading: " Conception avec du contenu généré par une CSS"
},{
 categories: 'module7',
 content: "  Bon exemple : Déclarations de limite générées par CSS pour des éléments non présentés aux lecteurs d’écran Les rôles de l’élément et des éléments rédactionnels , et ne sont pas déclarés par les lecteurs d’écran. Pour signaler leur présence aux utilisateurs de lecteur d’écran, un texte visuellement masqué généré par CSS signale le début et la fin de chaque rôle. CSS Début du code mark::before { content: ' [mise en évidence du début] '; } mark::after { content: ' [mise en évidence de la fin] '; } del::before { content: ' [suppression du début] '; } del::after { content: ' [suppression de la fin] '; } ins::before { content: ' [insertion du début] '; } ins::after { content: ' [insertion de la fin] '; } s::before { content: ' [début d’un texte biffé] '; } s::after { content: ' [fin d’un texte biffé] '; } /* masque visuellement le contenu généré */ mark::before, mark::after, del::before, del::after, ins::before, ins::after, s::before, s::after { clip-path: inset(100%); clip: rect(1px, 1px, 1px, 1px); height: 1px; width: 1px; overflow: hidden; position: absolute; white-space: nowrap; } Fin du code Billet de blogue d’Adrian Roselli F87: CSS Generated Content and WCAG Conformance. 24 février, 2019. ",
 href: '../module7/css-generated-fr.html#css-boundaries'  ,
 title: "Contenu généré par les feuilles de style en cascade CSS – Module 7 – Conception visuelle et couleurs" ,
 heading: "  Bon exemple : Déclarations de limite générées par CSS pour des éléments non présentés aux lecteurs d’écran "
},{
 categories: 'module7',
 content: "  Bon exemple : Icône CSS informative Dans cet exemple, l’icône de marteau Font Awesome est utilisée pour représenter une tâche. L’élément avec les classes .fas et .fa-hammer affiche l’icône par l’entremise d’une pseudo-classe de CSS, :before. Son attribut title contient une infobulle pour les utilisateurs de souris, « Tâche ». Son attribut aria-hidden='true' cache l’élément aux lecteurs d’écran, car leur support de l'attribut title est incohérent. Juste après l’icône on trouve un élément visuellement masqué qui porte le nom « Tâche », et qui se déclare sur tous les lecteurs d’écran. L'exemple commence Tâche Remplir la demande L'exemple finit Si leurs feuilles de style personnalisées écrasent la déclaration font-family de l’icône, les utilisateurs de souris malvoyants peuvent accéder au nom de l’icône en survolant le carré du paramètre fictif, ce qui active l’infobulle de l’attribut title. HTML Début du code Tâche Remplir la demande Fin du code CSS Début du code .fa-hammer:before { content: '\f6e3'; } .fas { font-family: 'Font Awesome 5 Free'; } .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code ",
 href: '../module7/css-generated-fr.html#informative-css'  ,
 title: "Contenu généré par les feuilles de style en cascade CSS – Module 7 – Conception visuelle et couleurs" ,
 heading: "  Bon exemple : Icône CSS informative"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel Techniques G94 : Fournir un court équivalent textuel pour un contenu non textuel qui a la même fonction et présente la même information que le contenu non textuel (en anglais) ARIA6 : Utiliser aria-label pour attribuer des étiquettes aux objets (en anglais) Échecs F87 : Échec du critère de succès 1.3.1 consistant à utiliser les pseudo-éléments :before et :after et la propriété content en CSS (en anglais) ",
 href: '../module7/css-generated-fr.html#css-generated-wcag'  ,
 title: "Contenu généré par les feuilles de style en cascade CSS – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  Masquer un contenu Il peut l’être pour trois groupes d’utilisateurs : pour tous, en utilisant la déclaration display:none ou visibility:hidden de CSS; pour les utilisateurs d’une technologie d’aide, au moyen de l’attribut aria-hidden='true' pour supprimer l’élément de l’API d’accessibilité; pour les utilisateurs voyants, par l’entremise de la classe .wb-inv de CSS de la BOEW pour masquer le contenu. Lorsque vous masquez du contenu inactif, comme les fenêtres modales non déclenchées et les sous-menus non sélectionnés, vous devez le masquer pour tous les utilisateurs. Les développeurs introduisent fréquemment un obstacle en dissimulant visuellement ce contenu hors écran par l’entremise du positionnement CSS, ce qui laisse le contenu affiché à l’API d’accessibilité, où les utilisateurs des lecteurs d’écran et d’autres personnes le voient. S’il faut le masquer pour les utilisateurs voyants, il doit également l’être pour les utilisateurs de lecteurs d’écran. Utilisez l’attribut aria-hidden avec prudence et uniquement pour améliorer l’expérience des utilisateurs de technologies d’aide en éliminant l’information redondante ou superflue. Si vous utilisez aria-hidden pour masquer un contenu visible important, vous devez vous assurer que la signification et les fonctionnalités identiques ou équivalentes sont exposées aux technologies d’aide. Le texte masqué visuellement peut : fournir un nom où les étiquettes ARIA ne fonctionnent pas parce que l’élément n’est pas sélectionné. Ce cas est illustré dans l’exemple du contenu généré par une CSS à la section précédente. La même approche s’appliquerait à une image d’arrière-plan en CSS ayant besoin d’un nom; par exemple, une liste contenant des logos définis comme images d’arrière-plan de CSS pourrait utiliser un nom masqué visuellement dans chaque élément de liste; nommer ou préciser le nom des éléments comme solution de rechange aux étiquettes ARIA. Par exemple, sur une page comportant plusieurs liens « En savoir plus », pour distinguer la fonction de chacun d’eux, le texte du titre qui précède est inséré comme élément masqué dans le texte du lien. Bon exemple: Texte masqué visuellement L'exemple commence Comment présenter une demande [Paragraphe d’accroche.] Comment présenter une demande En savoir plus L'exemple finit HTML Début du code Comment présenter une demande [Paragraphe d’accroche.] Comment présenter une demande En savoir plus Fin du code CSS Début du code .wb-inv { clip: rect(1px,1px,1px,1px); height: 1px; margin: 0; overflow: hidden; position: absolute; width: 1px; } Fin du code ",
 href: '../module7/hiding-content-fr.html#masquer-un-contenu'  ,
 title: "Masquer ou afficher un contenu – Module 7 – Conception visuelle et couleurs" ,
 heading: " Masquer un contenu"
},{
 categories: 'module7',
 content: "  Afficher le contenu lorsqu’on le survole ou qu’on le sélectionne Lorsque vous affichez du contenu masqué avec le pointeur ou le clavier, assurez-vous que le contenu affiché possède les trois propriétés suivantes : Peut être ignoré L’utilisateur peut ignorer le contenu affiché sans déplacer le pointeur de la souris ou annuler la sélection avec le clavier, habituellement en appuyant sur la touche Escape. Peut être survolé L’utilisateur peut placer le pointeur de la souris sur le contenu affiché. Persistant Le contenu affiché ne disparaît pas tant que le pointeur ne l’a pas dépassé ou que la sélection avec le clavier n’est pas annulée. Pour en savoir plus, consultez le module 10 : Méthodes de saisie de données > Saisie avec la souris > Contenu sur survol ou cible ",
 href: '../module7/hiding-content-fr.html#exposing-hidden-content'  ,
 title: "Masquer ou afficher un contenu – Module 7 – Conception visuelle et couleurs" ,
 heading: " Afficher le contenu lorsqu’on le survole ou qu’on le sélectionne"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.1.1 : Contenu non textuel 1.4.13 : Contenu au survol ou au focus (en anglais) Techniques G94 : Fournir un court équivalent textuel pour un contenu non textuel qui a la même fonction et présente la même information que le contenu non textuel (en anglais) SCR39 : Rendre possible le survol, le rejet et la persistance de l’affichage contextuel ouvert par survol ou ciblage clavier (en anglais) ",
 href: '../module7/hiding-content-fr.html#hiding-content-wcag'  ,
 title: "Masquer ou afficher un contenu – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  À propos de la conception visuelle et des couleurs Ce module traite de sujets visant à rendre la conception de l’interface utilisateur et la conception visuelle plus accessibles aux personnes handicapées. Le sujet comprend la couleur, le contraste, les étiquettes de positionnement, l’espacement des textes, le contenu généré par une CSS, le masquage du contenu ou l’affichage de celui-ci en le survolant avec le pointeur ou en le sélectionnant avec le clavier. La conception visuelle accessible profite à tous, y compris aux personnes handicapées : Les personnes présentant une déficience visuelle ou daltoniennes en tirent parti lorsque l’information véhiculée par la couleur est offerte par d’autres moyens visuels. Les personnes malvoyantes et daltoniennes peuvent lire des textes qui respectent un rapport de contraste minimal. Les personnes dyslexiques peuvent augmenter l’espace entre les lignes, les mots et les lettres pour améliorer la lecture. Les personnes qui utilisent un lecteur d’écran profitent de l’accès à des équivalents textuels du contenu produit par CSS. Les personnes qui utilisent un lecteur d’écran ont avantage à cacher le contenu inactif et redondant. Ces préoccupations relatives à la conception visuelle sont abordées dans le module 3 : Indicateur visuel de la cible Distinguer les liens du texte ",
 href: '../module7/introduction-fr.html#about-visual-design-and-colours'  ,
 title: "Introduction – Module 7 – Conception visuelle et couleurs" ,
 heading: " À propos de la conception visuelle et des couleurs"
},{
 categories: 'module7',
 content: "  Ressources liées aux WCAG Ressources liées aux WCAG Critères de succès 1.1.1 : Contenu non textuel 1.4.1 : Utilisation de la couleur 1.4.3 : Contraste (Minimum) 1.4.11 : Contraste du contenu non textuel (en anglais) 1.4.12 : Espacement du texte (en anglais) 1.4.13 : Contenu au survol ou au focus (en anglais) 3.3.2 : Étiquettes ou instructions ",
 href: '../module7/introduction-fr.html#resources1'  ,
 title: "Introduction – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources liées aux WCAG"
},{
 categories: 'module7',
 content: "  Espacement de texte accessible L’espace accru entre les paragraphes, les lignes, les mots et les lettres facilite la lecture à certains utilisateurs malvoyants et aide ceux atteints de dyslexie à lire plus rapidement. Votre conception doit être suffisamment souple pour conserver son contenu et sa fonctionnalité lorsque l’utilisateur modifie l’espacement des textes, en tenant compte de ces contraintes : hauteur de ligne (espacement des lignes) à au moins 1,5 fois la taille de la police; espacement suivant les paragraphes d’au moins 2 fois la taille de la police; interlettrage (approche de groupe) d’au moins 0,12 fois la taille de la police; espacement entre les mots d’au moins 0,16 fois la taille de la police. Les utilisateurs modifient l’espacement du texte de votre conception en utilisant une feuille de style personnalisée, un signet ou un autre outil. Mettez votre conception à l’essai avec ce bookmarklet sur l'espacement des textes Il applique les styles d’espacement élargi. Soyez à l’affût du texte tronqué et qui se chevauche, illustré dans les exemples négatifs ci-dessous. Pour contourner l’espacement des textes dans votre conception : N’utilisez pas de contenants fixes dans vos styles de CSS. Veiller à ce que le contenu s’affiche sans chevauchement ou perte de texte. Utilisez des unités relatives de taille de police, de hauteur de ligne, d’espaces entre les caractères, les mots, les lignes et les paragraphes. Mauvais exemple : Espacement du texte Les images suivantes illustrent certains types de problèmes lorsque les auteurs omettent le fait que des utilisateurs peuvent annuler l’espacement. Texte coupé La partie inférieure des mots « Vos besoins » est coupée dans un titre, ce qui rend le texte de la figure 1 illisible. On devrait y lire « We provide a Mobile Application Service to Meet Your Needs ». L'exemple commence Figure 1. Le texte coupé horizontalement pose problème. L'exemple finit Dans la figure 2, le titre est coupé en trois parties côte à côte où il manque la fin du texte. Dans la première, on devrait lire « A cog in the wheel », mais on ne voit que « A cog in the whe ». On ne voit que la moitié du deuxième « e » et la lettre « l » a complètement disparu. Dans la deuxième, au lieu de « A penny for your thoughts », on lit « A penny for your ». Dans la troisième, on devrait lire « Back to the drawing board », mais on y lit « Back to the drawi ». L'exemple commence Figure 2 Le texte verticalement coupé pose problème. L'exemple finit Chevauchement de texte Dans la figure 3, les trois derniers mots « Groups and Programs » du tire « Technologists Seeking Input from Groups and Programs » chevauchent la phrase suivante. Celle-ci devrait indiquer « You are invited to share ideas and areas of interest related to the integration of technology from a group or program perspective », mais les mots « You are invited to share ideas and areas » sont obscurcis et illisibles. L'exemple commence Figure 3 Le chevauchement des textes pose problème. L'exemple finit « Mauvais exemples : Espacement du texte » est tirée du critère de succès: 1.4.12: Espacement du texte (en anglais seulement) ",
 href: '../module7/textspacing-fr.html#espacement-de-texte-accessible'  ,
 title: "Espacement du texte – Module 7 – Conception visuelle et couleurs" ,
 heading: " Espacement de texte accessible"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.12 : Espacement du texte (en anglais) Techniques C36 : Permettre le contournement de l’espacement du texte (en anglais) C35 : Permettre l’espacement du texte sans emballage (en anglais) ",
 href: '../module7/textspacing-fr.html#textspacing-wcag'  ,
 title: "Espacement du texte – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module7',
 content: "  Étiquettes de positionnement Rendez vos formulaires plus compréhensibles en positionnant les étiquettes des champs de formulaire là où l’utilisateur s’y attend visuellement : au-dessus du champ ou à gauche du champ, aligné à droite. Les étiquettes des boutons radio et des cases à cocher sont placées après le champ. Bon exemple : Étiquette au-dessus du champ Le Guide de style de la BOEW – Étiquettes de formulaire privilégie cette disposition. Les utilisateurs peuvent traiter l’information deux fois plus rapidement que les étiquettes alignées à gauche. Les étiquettes sont placées au-dessus des champs du formulaire. L'exemple commence Étiquette 1 Étiquette 2 L'exemple finit Bon exemple : Étiquette à gauche du champ, aligné à droite Le Guide de style de la BOEW privilégie cette disposition lorsqu’il faut conserver l’espace vertical. Les étiquettes sont positionnées à gauche des champs du formulaire et alignées à droite. Mauvais exemple : Étiquette à gauche du champ, alignée à gauche Cette disposition positionne les étiquettes loin des commandes. Il peut être difficile de les afficher côte à côte à l’écran si l’on grossit de texte, ce qui oblige à utiliser le défilement horizontal. ",
 href: '../module7/visual-proximity-fr.html#etiquettes-de-positionnement'  ,
 title: "Proximité visuelle des étiquettes – Module 7 – Conception visuelle et couleurs" ,
 heading: " Étiquettes de positionnement"
},{
 categories: 'module7',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 3.3.2 : Étiquettes ou instructions Techniques G162 : Positionner les étiquettes afin de maximiser la prévisibilité des relations (en anglais) ",
 href: '../module7/visual-proximity-fr.html#visual-proximity-wcag'  ,
 title: "Proximité visuelle des étiquettes – Module 7 – Conception visuelle et couleurs" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module8',
 content: "  Zoom Le contenu devrait apparaître dans une seule colonne sans défilement horizontal et sans perte d’information ou de fonctionnalité lors du réglage de la fenêtre de votre navigateur : à 320 pixels de largeur sur 256 pixels de hauteur, ou à 1280 pixels de largeur sur 1024 pixels de hauteur, puis zoomer le contenu à 400 %. Mettre en œuvre une conception adaptative. Lorsque vous concevez du contenu à reformater dans une seule colonne : Le contenu principal remplit la zone d’affichage. Le défilement horizontal ne se fait pas. Évitez d’utiliser plusieurs colonnes. La longueur de ligne courte est difficile à lire. Évitez d’utiliser des flotteurs CSS. Ils créent également une longueur de ligne courte, sauf si l’élément flotté est très petit. Évitez d’utiliser des largeurs fixes et minimales CSS. Elles ont tendance à provoquer un défilement horizontal. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-zoom'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Zoom"
},{
 categories: 'module8',
 content: "  Conception adaptée Utilisez les « requêtes média » CSS pour déterminer la taille de l’écran de l’utilisateur et servir des configurations distinctes selon différentes largeurs d’écran aux points d’interruption. Réglez la zone d’affichage à l’aide du méta-élément dans l’en-tête : HTML DÃ©but du code Fin du code width=device-width indique que la page correspond à la largeur de l’appareil, ce qui permet à la page de recharger le contenu pour qu’il corresponde à différentes tailles d’écran. initial-scale=1.0 établit le niveau de zoom par défaut de la page. maximum-scale=2.0 établit un zoom maximal de 200 % sur le zoom par pincement pour l’appareil mobile. user-scalable=1 permet à l’utilisateur de zoomer par pincement sur son mobile. Testez les points d’interruption à l’aide d’émulateurs de zone d’affichage. Les utilisateurs malvoyants font souvent un zoom pour déclencher des configurations mobiles sur de grands affichages, ce qui donne du texte assez volumineux. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-design'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception adaptée"
},{
 categories: 'module8',
 content: "  Formulaires adaptés À mesure que la taille de la zone d’affichage change, assurez-vous que : les champs de formulaire ne débordent pas, et les champs de formulaire et les étiquettes ne sont pas séparés par de larges zones d’espace blanc : Dans le mode bureau par défaut, les étiquettes sont positionnées à gauche de la commande et sont alignées à droite. (Cette disposition est préférable lorsqu’il est nécessaire de conserver un espace vertical.) En mode petit écran, les étiquettes sont positionnées directement au-dessus de la commande afin de maximiser la zone de l’écran pour chaque étiquette. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-forms'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Formulaires adaptés"
},{
 categories: 'module8',
 content: "  Images adaptées les images peuvent être adaptées de quatre façons : Technique 1 – Styliser l’image avec la CSS : width: 100% Technique 2 – Styliser l’image avec la CSS : max-width: 100% Technique 3 – Servir différentes tailles d’image à différentes tailles d’écran en utilisant l’attribut srcset Technique 4 – Servir différentes images à différentes tailles d’écran en utilisant l’élément picture. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-images'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Images adaptées"
},{
 categories: 'module8',
 content: "  Texte adapté Les conteneurs de texte doivent être redimensionnés à mesure que la taille de la zone d’affichage change pour empêcher le texte de déborder. Éviter les conteneurs fixes et statiques. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-text'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Texte adapté"
},{
 categories: 'module8',
 content: "  Objets et modules d’extension adaptés Les objets et les modules d’extension peuvent être redimensionnés à mesure que la taille de la zone d’affichage change afin qu’ils ne débordent pas la zone d’affichage. Régler CSS max-width='100%' sur le conteneur. Utilisez l’élément pour intégrer une image, l’élément pour intégrer HTML et les éléments et pour intégrer le contenu média. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-objects'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Objets et modules d’extension adaptés"
},{
 categories: 'module8',
 content: "  Tableaux adaptés Les tableaux de grande taille qui débordent de la zone d’affichage ne sont pas adaptés. Suivre ces conseils pour éviter les débordements: Utiliser un pourcentage plutôt que des pixels fixes pour définir la largeur des colonnes et des tableaux Diviser les tableaux de grande taille ou largeur en plusieurs tableaux plus petits ou étroits Afficher une barre de défilement horizontale si l’écran est trop petit ou afficher le tableau complet Rendre les tableaux plus étroits comme suit: Réduire le nombre de colonnes Fusionner des colonnes Utiliser des acronymes ou des abréviations pour les mots longs Ajouter d’un tiret conditionnel &shy; pour couper les mots longs Redimensionner les tableaux en fonction de la zone d’affichage) ",
 href: '../module8/best-practice-mod-8-fr.html#bp-tables'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Tableaux adaptés"
},{
 categories: 'module8',
 content: "  Composantes d’interface utilisateur adaptées Réorganiser et redimensionner les composantes de l’interface utilisateur pour maintenir la lisibilité. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-uicomp'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Composantes d’interface utilisateur adaptées"
},{
 categories: 'module8',
 content: "  Vidéo adaptées Les vidéos sont redimensionnées à mesure que la taille de la zone d’affichage change afin qu’elles ne débordent pas de la zone d’affichage. Soit en : réglant la propriété CSS max-width: 100% sur l’élément conteneur de la vidéo, ou en réglant la propriété CSS width: 100% sur l’élément Les dimensionnements statiques peuvent rompre les configurations de la page. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-videos'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Vidéo adaptées"
},{
 categories: 'module8',
 content: "  Orientation Permettre aux utilisateurs de visualiser votre contenu dans l’orientation (portrait ou paysage) qu’ils préfèrent. Ne pas limiter l’orientation de la page. ",
 href: '../module8/best-practice-mod-8-fr.html#bp-orientation'  ,
 title: "Pratique exemplaire - Module 8 - Zoom et conception adaptée" ,
 heading: " Orientation"
},{
 categories: 'module8',
 content: "  Conception pour l’orientation Conformément au critère de succès 1.3.4 des WCAG 2.1 : Orientation, le contenu ne limite pas sa vue et son fonctionnement à une orientation d’affichage unique, comme un portrait ou un paysage, à moins qu’une orientation d’affichage particulière soit essentielle. Permettre aux utilisateurs de visualiser votre contenu dans l’orientation (portrait ou paysage) qu’ils préfèrent. Il est possible de restreindre l’orientation, mais cela peut créer des problèmes. Par exemple, certains utilisateurs font installer leurs appareils mobiles dans une orientation fixe (p. ex. sur le bras d’un fauteuil roulant électrique). Le critère de succès permet de restreindre ou de verrouiller l’orientation si elle est essentielle à l’application, comme une orientation paysage pour représenter des touches de piano ou prendre une photo d’un chèque. ",
 href: '../module8/orientation-fr.html#orientation'  ,
 title: "Orientation - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception pour l’orientation"
},{
 categories: 'module8',
 content: "  Mauvais exemple : Verrouillage de l’orientation de l’écran Dans cet exemple, le contenu ne peut être affiché en mode paysage par une requête média CSS qui détectnnne l’orientation paysage et une règle de style de transformation qui fait tourner le contenu à 90 degrés (avec prise en charge des styles). CSS Début du code @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) { html { transform: rotate(-90deg); transform-origin: left top; width: 100vh; overflow-x: hidden; position: absolute; top: 100%; left: 0; } } Fin du code Source: Orientation Lock ",
 href: '../module8/orientation-fr.html#screen-orientation'  ,
 title: "Orientation - Module 8 - Zoom et conception adaptée" ,
 heading: "  Mauvais exemple : Verrouillage de l’orientation de l’écran"
},{
 categories: 'module8',
 content: "  Bon exemple : Orientation adaptée à l’écran Dans cet exemple, la page affichant la Norme sur l’accessibilité des sites Web du gouvernement du Canada ne comporte aucun code touchant l’orientation de l’écran. La page tourne par défaut dans les appareils mobiles. L'exemple commence L'exemple finit ",
 href: '../module8/orientation-fr.html#resp-orientation'  ,
 title: "Orientation - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Orientation adaptée à l’écran"
},{
 categories: 'module8',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.4 : Orientation (en anglais) Échecs F97 : Échec dû au verrouillage de l’orientation en vue paysage ou portrait (en anglais) ",
 href: '../module8/orientation-fr.html#resources1'  ,
 title: "Orientation - Module 8 - Zoom et conception adaptée" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module8',
 content: "  Aperçu – Conception adaptée La conception Web adaptée utilise HTML et CSS pour redimensionner, masquer, réduire ou agrandir automatiquement un site Web, en s’assurant que la conception est bonne et que l’information et la fonctionnalité sont préservées pour tous les appareils de toutes tailles d’écran. ",
 href: '../module8/responsive-design-fr.html#overview-responsive-design'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Aperçu – Conception adaptée"
},{
 categories: 'module8',
 content: "  Requêtes média CSS La technique s’appuie sur les « requêtes média » CSS, qui effectue des tests pour déterminer la taille de l’écran des utilisateurs, puis servent des configurations distinctes à différentes largeurs d’écran. Une stratégie typique cible les trois grandes catégories d’affichage des appareils : grands écrans, tablettes et téléphones. Les versions HTML et CSS des composantes de la page sont adaptées pour éviter le défilement horizontal, comme il est décrit dans les sections suivantes. Les points auxquels une requête média est présentée et la configuration est modifiée sont appelés « points d’interruption ». Voici la syntaxe : CSS Début du code @media media type and (condition: breakpoint) { // CSS rules } Fin du code Les types de médias disponibles pour les requêtes média comprennent : all pour tous les appareils print pour les imprimantes screen pour les écrans d’ordinateur, y compris les tablettes, les téléphones, etc. speech pour les lecteurs d’écran ",
 href: '../module8/responsive-design-fr.html#css-media-queries'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Requêtes média CSS"
},{
 categories: 'module8',
 content: "  Points d’interruption Bon exemple : Point d’interruption unique Dans cet exemple, le type de média est screen et le point d’interruption est 480 pixels. Si la largeur d’un appareil est de 480 pixels ou moins, la rè de style .button est appliquée. CSS Début du code @media screen and (max-width: 480px) { .button { background-color: red; } } Fin du code Points d’interruption du gouvernement du Canada Les spécifications techniques relatives à la présence Web et mobile du Secrétariat du Conseil du Trésor du gouvernement du Canada précisent deux points d’interruption pour les grands et petits écrans à 768 pixels. Ces requêtes média ciblent le type « écran », de sorte que leurs règles ne sont pas appliquées à la sortie d’impression. CSS Début du code @media screen and (min-width: 768px) { /* styles pour les appareils à grand écran */ } @media screen and (max-width: 767px) { /* styles pour les appareils à petit écran */ } Fin du code Styles pour les appareils à grand écran et les petits écrans Points d’interruption de la BOEW La Boîte à outils de l’expérience Web offre une conception adaptée aux appareils mobiles. Elle met en œuvre les points d’interruption de Bootstrap 3 : Très très petit – inférieur à 480 pixels Très petit - entre 480 pixels et 768 pixels Petit – entre 768 pixels et 992 pixels – Taille mobile Moyen – entre 992 pixels et 1 200 pixels – Format tablette Grand – entre 1 200 pixels et 1 600 pixels – Format ordinateur de bureau Très grand – supérieur à 1 600 pixels Points d’interruption courants Petit (téléphones) 320 pixels à 480 pixels : Appareils mobiles Moyen (tablettes) 481 pixels à 768 pixels : ipads, tablettes Grands (ordinateurs de bureau) 769 pixels à 1024 pixels : Petits écrans, ordinateurs portables 1 025 pixels à 1 200 pixels : Ordinateurs de bureau, grands écrans 1 201 pixels et plus – Très grands écrans Bon exemple : Reformater le contenu Voir cet exemple en action (S'ouvre dans un nouvel onglet). Rétrécir la fenêtre de votre navigateur pour déclencher les configurations adaptées. Voir les captures d'écran de la mise en page réactive Ordinateur de bureau : @media (min-width:960px) Tablette : @media (min-width:481px) and (max-width:959px) Téléphone : @media (max-width:480px) Notez que le flotteur est retiré des images. Voir le HTML Début du code Responsive Tips... One Size Doesn't Fit All! Lorem ipsum dolor sit amet One Speed Doesn't Work for Everyone! Lorem ipsum dolor sit amet Assistive Technologies... Lorem ipsum dolor sit amet Fin du code Voir le CSS Début du code article { margin: 0 auto; } header { margin: 0 auto; text-align: center; } .columns { display: flex; flex-wrap: wrap; } section { background-color: white; color: black; border: 1px solid black; padding: 1%; margin:1%; } h2 { margin: 0; } section img { width: 100px; float: left; } @media (min-width:960px) { article { width:960px; } #a { flex: 2; } #b { flex: 1; } #c { flex: 1; } } @media (min-width:481px) and (max-width:959px) { article { width:100%; } #a, #b, #c { flex:100%; } } @media (max-width:480px){ article { width:100%; } section img { float: none; } #a, #b, #c { flex:100%; } } Fin du code ",
 href: '../module8/responsive-design-fr.html#breakpoints'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Points d’interruption"
},{
 categories: 'module8',
 content: "  Configurer la zone d’affichage Les pages optimisées pour une variété d’appareils doivent inclure un élément dans le du document, précisant quelques propriétés de la zone d’affichage. Une balise meta de zone d’affichage indique au navigateur comment contrôler les dimensions et la mise à l’échelle de la page. Sans cette balise, une page n’est pas adaptée sur les appareils mobiles. HTML Début du code […] Fin du code Le paramètre width=device-width indique que la page correspond à la largeur d’écran de l’appareil. Cela permet à la page de reformater le contenu pour qu’il corresponde à différentes tailles d’écran. Le paramètre initial-scale définit le niveau de zoom par défaut de la page. Le réglage initial-scale=1 demande aux navigateurs d’établir une relation 1:1 entre les pixels CSS et les pixels de la zone d’affichage. Cette propriété est en grande partie nécessaire pour contrer un bogue de redimensionnement et de coupure de contenu dans certains appareils déclenché par l’utilisation de width=device-width et la visualisation de la page en mode paysage. Les pages mobiles doivent prendre en charge la fonction « zoom par pincement » afin de permettre aux utilisateurs d’agrandir les petits textes et les commandes et de compenser le faible contraste. Pour activer la fonction zoom par pincement, réglez user-scalable=1 et maximum-scale=2.0. Il s’agit d’une valeur de 200 %, soit le zoom minimum requis pour respecter les WCAG. Vous pouvez activer un zoom plus important en réglant maximum-scale à une valeur plus élevée ou en supprimant le paramètre maximum-scale pour supprimer entièrement la limite de zoom. Bon exemple : Réglage du zoom par pincement à un grossissement de 200 % Dans cet exemple, la page est configurée pour permettre un zoom maximal de 200 % au moyen de la propriété maximum-scale. 200 % est la valeur minimale de zoom exigée par les WCAG. HTML Début du code Fin du code Mauvais exemple : Désactivation du réglage du zoom par pincement Les développeurs désactivent souvent la fonction zoom par pincement en réglant deux paramètres sur l’élément meta de la zone d’affichage : user-scalable=no et maximum-scale=1.0. HTML Début du code Fin du code ",
 href: '../module8/responsive-design-fr.html#set-the-viewport'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Configurer la zone d’affichage"
},{
 categories: 'module8',
 content: "  Émulateurs de zone d’affichage Vous pouvez tester les points d’interruption à l’aide d’émulateurs de zone d’affichage pour représenter correctement votre requête média et votre style, en gardant à l’esprit que les émulateurs ne représentent pas la fonctionnalité ou les caractéristiques du navigateur. Vous pouvez également tester les points d’interruption à l’aide du service en ligne Viewport Emulator, comme dans l’exemple ci-dessous. Bon exemple : Vérification du Bureau de l’accessibilité des TI à l’aide de l’émulateur de zone d’affichage Dans cet exemple, le Bureau de l’accessibilité des TI est testé au moyen de l’ Émulateur de zone d’affichage en ligne. L'exemple commence L'exemple finit Bon exemple : Vérification du Bureau de l’accessibilité des TI à l’aide de l’émulateur Chrome Il est possible d’accéder à l’émulateur mobile Chrome à partir de ses options d’outils de développement en utilisant des raccourcis clavier: Commande + Option + I (Mac) OU Ctrl + Shift + I (Windows). L'exemple commence L'exemple finit ",
 href: '../module8/responsive-design-fr.html#viewport-emulators'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Émulateurs de zone d’affichage"
},{
 categories: 'module8',
 content: "  Avantages d’une conception adaptative pour les utilisateurs malvoyants De nombreux utilisateurs malvoyants ne peuvent pas agrandir suffisamment les petits écrans pour les lire. Ils lisent plutôt des sites sûrs de gros appareils et agrandissent l’écran. Au fur et à mesure que l’utilisateur agrandit, la fenêtre du navigateur devient plus petite par rapport à la taille du contenu, ce qui déclenche des points d’interruption CSS pour des configurations d’écran plus petites. Sur un grand appareil, une configuration de petit écran optimisée pour afficher en une seule colonne peut prendre toute la largeur du grand écran, ce qui permet un texte assez volumineux. ",
 href: '../module8/responsive-design-fr.html#benefits-to-low-vision-users'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Avantages d’une conception adaptative pour les utilisateurs malvoyants"
},{
 categories: 'module8',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.10 : Redistribution (en anglais) Techniques C32 : Utiliser les requêtes des médias et la grille CSS pour reformater les colonnes (en anglais) C31 : Utiliser la CSS Flexbox pour reformater le contenu (en anglais) ",
 href: '../module8/responsive-design-fr.html#mod8-responsive-design-wcag'  ,
 title: "Conception adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module8',
 content: "  Conception de formulaires adaptés À mesure que la taille de la zone d’affichage change, assurez-vous que: les champs de formulaire ne débordent pas, et les champs de formulaire et les étiquettes ne sont pas séparés par de larges zones d’espace blanc. Il s’agit d’un obstacle pour les utilisateurs ayant une vision tubulaire et pour les utilisateurs de grossissement d’écran. Bon exemple : Formulaire adapté Dans cet exemple, un point d’interruption CSS à 768 pixels introduit les styles pour les grands écrans. Les différences essentielles: En mode petit écran, les étiquettes sont positionnées directement au-dessus de la commande afin de maximiser la zone de l’écran pour chaque étiquette. En mode bureau, les étiquettes sont positionnées à gauche de la commande, alignées à droite, pour maximiser l’espace vertical. Rétrécissez l’écran de votre navigateur à moins de 768 pixels pour voir les styles de petit écran (par défaut). Cet exemple utilise le formulaire HTML de la BOEW (avec l’ajout d’une enveloppe div. .forms-group à l’élément mais des CSS différents et simplifiés pour établir les règles adaptées. L'exemple commence Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Courriel (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres L'exemple finit Voir le HTML Début du code Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Email address (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres Fin du code Voir le CSS Début du code .form-group { margin-bottom: 1em; } strong.required { color: #e31c3d; } .form-group fieldset { max-width: 28em; } .form-control { display: block; } @media screen and (min-width: 768px) { .form-group, .checkbox { clear: left; } .form-group label, .form-group legend { float: left; width: 18em; text-align: right; } .form-group fieldset label { float: none; width: auto; text-align: left; margin-left: 19em; } .form-control { position: relative; display: inline-block; margin-left: 1em; } .btn { margin-left: 5em; } } Fin du code Mauvais exemple : Formulaire non adapté Dans cet exemple, les étiquettes sont positionnées à gauche des champs de formulaire et alignées à gauche, tandis que les champs de formulaire sont flottés à droite, ce qui crée un grand écart entre les champs d’étiquette et de formulaire. L’écart est un obstacle pour les utilisateurs ayant une vision tubulaire ou les utilisateurs malvoyants qui agrandissent considérablement l’écran. Début du code Fin du code ",
 href: '../module8/responsive-forms-fr.html#conception-de-formulaires-adaptes'  ,
 title: "Formulaires adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception de formulaires adaptés"
},{
 categories: 'module8',
 content: "  Conception de formulaires adaptés À mesure que la taille de la zone d’affichage change, assurez-vous que: les champs de formulaire ne débordent pas, et les champs de formulaire et les étiquettes ne sont pas séparés par de larges zones d’espace blanc. Il s’agit d’un obstacle pour les utilisateurs ayant une vision tubulaire et pour les utilisateurs de grossissement d’écran. Bon exemple : Formulaire adapté Dans cet exemple, un point d’interruption CSS à 768 pixels introduit les styles pour les grands écrans. Les différences essentielles: En mode petit écran, les étiquettes sont positionnées directement au-dessus de la commande afin de maximiser la zone de l’écran pour chaque étiquette. En mode bureau, les étiquettes sont positionnées à gauche de la commande, alignées à droite, pour maximiser l’espace vertical. Rétrécissez l’écran de votre navigateur à moins de 768 pixels pour voir les styles de petit écran (par défaut). Cet exemple utilise le formulaire HTML de la BOEW (avec l’ajout d’une enveloppe div. .forms-group à l’élément mais des CSS différents et simplifiés pour établir les règles adaptées. L'exemple commence Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Courriel (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres L'exemple finit Voir le HTML Début du code Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Email address (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres Fin du code Voir le CSS Début du code .form-group { margin-bottom: 1em; } strong.required { color: #e31c3d; } .form-group fieldset { max-width: 28em; } .form-control { display: block; } @media screen and (min-width: 768px) { .form-group, .checkbox { clear: left; } .form-group label, .form-group legend { float: left; width: 18em; text-align: right; } .form-group fieldset label { float: none; width: auto; text-align: left; margin-left: 19em; } .form-control { position: relative; display: inline-block; margin-left: 1em; } .btn { margin-left: 5em; } } Fin du code Mauvais exemple : Formulaire non adapté Dans cet exemple, les étiquettes sont positionnées à gauche des champs de formulaire et alignées à gauche, tandis que les champs de formulaire sont flottés à droite, ce qui crée un grand écart entre les champs d’étiquette et de formulaire. L’écart est un obstacle pour les utilisateurs ayant une vision tubulaire ou les utilisateurs malvoyants qui agrandissent considérablement l’écran. Début du code Fin du code ",
 href: '../module8/responsive-forms-fr.html#good-example-responsive-form'  ,
 title: "Formulaires adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Formulaire adapté"
},{
 categories: 'module8',
 content: "  Conception de formulaires adaptés À mesure que la taille de la zone d’affichage change, assurez-vous que: les champs de formulaire ne débordent pas, et les champs de formulaire et les étiquettes ne sont pas séparés par de larges zones d’espace blanc. Il s’agit d’un obstacle pour les utilisateurs ayant une vision tubulaire et pour les utilisateurs de grossissement d’écran. Bon exemple : Formulaire adapté Dans cet exemple, un point d’interruption CSS à 768 pixels introduit les styles pour les grands écrans. Les différences essentielles: En mode petit écran, les étiquettes sont positionnées directement au-dessus de la commande afin de maximiser la zone de l’écran pour chaque étiquette. En mode bureau, les étiquettes sont positionnées à gauche de la commande, alignées à droite, pour maximiser l’espace vertical. Rétrécissez l’écran de votre navigateur à moins de 768 pixels pour voir les styles de petit écran (par défaut). Cet exemple utilise le formulaire HTML de la BOEW (avec l’ajout d’une enveloppe div. .forms-group à l’élément mais des CSS différents et simplifiés pour établir les règles adaptées. L'exemple commence Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Courriel (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres L'exemple finit Voir le HTML Début du code Titre (requis) Monsieur Madame Mademoiselle Prénom (requis) Nom (requis) Email address (tonnom@courriel.com) Animal préféré (requis) Chien Chat Poisson Autres Fin du code Voir le CSS Début du code .form-group { margin-bottom: 1em; } strong.required { color: #e31c3d; } .form-group fieldset { max-width: 28em; } .form-control { display: block; } @media screen and (min-width: 768px) { .form-group, .checkbox { clear: left; } .form-group label, .form-group legend { float: left; width: 18em; text-align: right; } .form-group fieldset label { float: none; width: auto; text-align: left; margin-left: 19em; } .form-control { position: relative; display: inline-block; margin-left: 1em; } .btn { margin-left: 5em; } } Fin du code Mauvais exemple : Formulaire non adapté Dans cet exemple, les étiquettes sont positionnées à gauche des champs de formulaire et alignées à gauche, tandis que les champs de formulaire sont flottés à droite, ce qui crée un grand écart entre les champs d’étiquette et de formulaire. L’écart est un obstacle pour les utilisateurs ayant une vision tubulaire ou les utilisateurs malvoyants qui agrandissent considérablement l’écran. Début du code Fin du code ",
 href: '../module8/responsive-forms-fr.html#bad-example-responsive-forms'  ,
 title: "Formulaires adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: "  Mauvais exemple : Formulaire non adapté"
},{
 categories: 'module8',
 content: "  Concevoir des images adaptées Une image qui est plus large que son conteneur débordera, ce qui peut introduire un défilement horizontal. Pour éviter cela, les images peuvent être adaptées de l’une des quatre façons suivantes: Technique 1 – Styliser l’image avec le CSS width:100% Technique 2 – Styliser l’image avec le CSS max-width:100% Technique 3 – Servir différentes tailles d’image à différentes tailles d’écran en utilisant l’attribut srcset Technique 4 – Servir différentes images à différentes tailles d’écran en utilisant l’élément picture. ",
 href: '../module8/responsive-images-fr.html#concevoir-images'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Concevoir des images adaptées"
},{
 categories: 'module8',
 content: "  Technique 1 : Styliser l’image avec le CSS width:100% Si le width de l’image est réglée via CSS à un pourcentage et que la propriété de height est réglée à auto, l’image s’adapte aux dimensions de son conteneur. Habituellement, le height de l’image est réglée à 100 %. Redimensionner la fenêtre du navigateur pour voir l’échelle d’image. L'exemple commence Fin du code CSS Début du code #technique-1 { width: 50%; border: 5px dotted black; } #technique-1 img { width: 100%; height: auto; } Fin du code HTML Début du code Fin du code ",
 href: '../module8/responsive-images-fr.html#css-width'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Technique 1 : Styliser l’image avec le CSS width:100%"
},{
 categories: 'module8',
 content: "  Technique 2 : Styliser l’image avec le CSS max-width:100% Si la propriété CSS max-width est réglée via CSS à 100 %, l’image sera réduite, mais jamais augmentée pour être plus grande que sa taille originale. Redimensionner la fenêtre du navigateur pour voir l’échelle de l’image. L'exemple commence Fin du code CSS Début du code #technique-2 { width: 50%; } #technique-2 img { max-width: 100%; height: auto; } Fin du code HTML Début du code Fin du code ",
 href: '../module8/responsive-images-fr.html#css-max-width'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Technique 2 : Styliser l’image avec le CSS max-width:100%"
},{
 categories: 'module8',
 content: "  Technique 3 : Servir différentes tailles d’image à différentes tailles d’écran en utilisant l’attribut srcset Cette technique sert différentes tailles d’images, plus grande ou plus petite, selon l’appareil. L’attribut srcset contient une liste séparée par des virgules de versions différentes d’une même image, chaque élément de liste comprenant le nom du fichier et la largeur réelle de l’image (l’unité w équivaut aux pixels). L’attribut sizes contient une liste séparée par des virgules de tailles différentes de créneaux pour les images à différentes largeurs d’écran. La largeur de la fente est souvent exprimée à l'aide de l'unité de largeur de la fenêtre d'affichage Viewport (vw), mais des unités absolues et relatives peuvent également être utilisées. Chaque unité vw représente 1% de la largeur de la fenêtre d'affichage. Une condition média vérifie la largeur de l’écran. La dernière largeur de créneau n’a aucune condition média; c’est la valeur par défaut qui est choisie lorsqu’aucune condition média n’est vraie. Cet exemple comporte un emplacement de 50vw de large (50% de la largeur de la fenêtre d'affichage) pour les écrans de moins de 900 pixels de large, et un emplacement de 700 pixels de large pour les autres. L’attribut src contient le nom du fichier image par défaut. L’attribut alt contient le texte de remplacement. HTML Début du code <img srcset='deer-320-labelled.jpg 320w, deer-700-labelled.jpg 700w' sizes='(max-width: 900px) 50vw, 700px' src='deer-320.jpg' alt='Un cerf qui pâture dans un petit pré dans une forêt.'> Fin du code Une fois ces attributs en place, le navigateur : Vérifiera la largeur de l’appareil. Déterminera quelle condition média dans la liste sizes est la première à être vraie. Vérifiera la taille du créneau donné à cette requête média. Chargera l’image mentionnée dans la liste srcset qui a la même taille que le créneau ou, s’il n’y en a pas, la première image qui est plus grande que la taille du créneau choisi. Pour voir l'échelle de l'image, réduisez la fenêtre du navigateur, effacez le cache du navigateur (si l'image de 700px de large est déjà téléchargée, il faut l'effacer), et rafraîchissez la fenêtre du navigateur. L'exemple commence L'exemple finit Ressource : Générateur d’image adaptée Le Responsive Image Generator (générateur d’image adaptée) est un outil en ligne qui vous permet de téléverser une image et de générer diverses dimensions d’images pour les points d’interruption adaptés. ",
 href: '../module8/responsive-images-fr.html#css-src-att'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Technique 3 : Servir différentes tailles d’image à différentes tailles d’écran en utilisant l’attribut srcset"
},{
 categories: 'module8',
 content: "  Technique 4 : Servir différentes images à différentes tailles d’écran en utilisant l’élément picture Un petit objet d’intérêt dans une grande image est difficile à discerner si cette même image est rétrécie pour convenir à un appareil mobile. Le cadrage enlève les zones extérieures inutiles d’une image pour se rapprocher de l’objet d’intérêt. L’élément est couramment utilisé dans la conception adaptative pour « Direction artistique », où différents cadrages d’une même image, souvent à différents rapports de forme, sont servis à différentes tailles d’écran. L’élément contient deux balises : une ou plusieurs balises et une balise . Le navigateur recherche le premier élément avec une requête média correspondant à la zone d’affichage actuel, puis affiche l’image spécifiée dans l’attribut srcset. L’élément sert de solution de rechange si aucune des balises ne correspond. Il fournit également le texte de remplacement pour toutes les variantes de l’image. Avec cette technique, vous pourriez servir des images différentes et proposer plusieurs résolutions pour chacune : peut prendre un attribut srcset avec de nombreuses images référencées, ainsi qu’un attribut sizes. Toutefois, puisque toutes les variations partagent un attribut alt, les différentes valeurs alt devraient être gérées à l'aide de requêtes multimédias avec JavaScript (en Anglais seulement). Autrement, il y a peu de choix : les variations doivent représenter la même chose. Bon exemple : Utilisation de la direction artistique Dans cet exemple, un cadrage de la photo est servi aux petits appareils. Les éléments comprennent une condition média. La première condition qui s’avère est affichée : si la largeur de zone d’écran est de 799 pixels moins, l’image du premier élément est affichée; si la largeur de la zone d’affichage est de 800 pixels ou plus, l’image du deuxième élément est affichée. Redimensionner la fenêtre du navigateur pour voir l’échelle d’image. L'exemple commence L'exemple finit HTML Début du code Fin du code Image recadrée servie pour les petits écrans Image originale servie pour les grands écrans Mauvais exemple : Image non adaptée Dans la capture d’écran ci-dessous, une image d’une largeur de 1 600 pixels, dépourvue de tout balisage réactif, s’affiche dans sa largeur originale. Comme elle est plus large que la fenêtre d’affichage, une barre de défilement horizontale doit apparaître. HTML L'exemple commence L'exemple finit Alt text: Les papillons monarques volent sous les pins. HTML Début du code Fin du code Image de cntravaler.com ",
 href: '../module8/responsive-images-fr.html#css-pic-element'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Technique 4 : Servir différentes images à différentes tailles d’écran en utilisant l’élément picture"
},{
 categories: 'module8',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.10 : Redistribution (en anglais) Techniques C32 : Utiliser les requêtes des médias et la grille CSS pour reformater les colonnes (en anglais) C31 : Utiliser la CSS Flexbox pour reformater le contenu (en anglais) C33 : Permettre le reformatage avec des URL longues et des chaînes de texte (en anglais) C38 : Utiliser la largeur CSS, la largeur maximale et Flexbox pour ajuster des étiquettes et des entrées (en anglais) SCR34 : Calculer la taille et la position d'une manière qui va s'agrandir avec le texte (en anglais) G206 : Fournir des options à l’intérieur du contenu pour passer à une mise en page qui n’exige pas que l’utilisateur défile horizontalement pour lire une ligne de texte (en anglais) Échecs F102 : Échec du critère de succès 1.4.10 en raison de la disparition du contenu et du fait qu’il n’est pas disponible lorsque le contenu est reformaté (en anglais) ",
 href: '../module8/responsive-images-fr.html#responsive-images-wcag'  ,
 title: "Images adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module8',
 content: "  Conception de tableaux adaptés Les tableaux de grande taille qui débordent de la zone d’affichage ne sont pas adaptés. Il est difficile pour les utilisateurs de se rappeler quelle information ils regardent si les en-têtes de ligne et de colonne défilent hors de vue. Suivre ces conseils pour éviter les débordements: Utiliser un pourcentage plutôt que des pixels fixes pour définir la largeur des colonnes et des tableaux Diviser les tableaux de grande taille ou largeur en plusieurs tableaux plus petits ou étroits Afficher une barre de défilement horizontale si l’écran est trop petit ou afficher le tableau complet (exemple de débordement) Rendre les tableaux plus étroits comme suit: Réduire le nombre de colonnes Fusionner des colonnes Utiliser des acronymes ou des abréviations pour les mots longs Ajouter d’un tiret conditionnel &shy; pour couper les mots longs Redimensionner les tableaux en fonction de la zone d’affichage (exemple de redimensionnement) Veuillez noter que le critère de succès des WCAG 1.4.10: Reflow exempte les tableaux de données des exigences de reformatage. Il est acceptable de faire défiler les tableaux de données. Le système de conception de Canada.ca et la BOEW ne comportent aucune fonctionnalité permettant de transformer et de réorganiser les tableaux, comme le montrent les exemples ci-dessous. ",
 href: '../module8/responsive-tables-fr.html#resp-tables'  ,
 title: "Tableaux adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception de tableaux adaptés"
},{
 categories: 'module8',
 content: "  Bon exemple : Débordement du tableau avec barre de défilement horizontale Dans cet exemple, un grand tableau débordant force une barre de défilement horizontale sur l’élément parent, générée par la déclaration CSS overflow-x: auto. Le utilise l’attribut tabindex='0' pour s’assurer que la barre de défilement reçoit la cible du clavier (conformément à la règle W3C-IAW TIA Scrollable element is keyboard accessible (l’élément de défilement est accessible au clavier)). Comme le est un taquet de tabulation, nous l'identifions aux utilisateurs de lecteurs d'écran avec un nom (le titre du tableau 'Sprints' via aria-labelledby) et un rôle ('group'). Il est toujours préférable de diviser les grands tableaux en plusieurs petits tableaux. L'exemple commence Sprints Sprint # Fermé En cours Nouveau Refaire un test Réouverture Par sévérité Par priorité Par sprint Par sortie 101 234 55 75 121 33 566 343 577 976 102 344 33 65 887 66 564 344 76 543 103 290 32 77 93 82 138 532 293 202 L'exemple finit HTML Début du code Sprints […] Fin du code Voir les captures d'écran Bureau Cellulaire ",
 href: '../module8/responsive-tables-fr.html#overflow-table'  ,
 title: "Tableaux adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Débordement du tableau avec barre de défilement horizontale"
},{
 categories: 'module8',
 content: "  Bon exemple : Reformater en une liste imbriquée Dans l’exemple ci-dessous, il y a deux structures distinctes - une liste et une table. Mais une seule est visible à l’écran à la fois. Le tableau se transforme en une liste imbriquée si la largeur de l’affichage du navigateur est inférieure à 768 pixels. La liste imbriquée demeure dans la zone d’affichage pour éviter le défilement horizontal. Redimensionner la fenêtre du navigateur pour voir l’effet. L'exemple commence Résumé du compte Compte Date d'échéance Balance Date du relevé Mastercard - 5555 04/01/2021 $5,390 03/01/2021 - 03/31/2021 Visa - 5155 03/01/2020 $2,013 02/01/2020 - 02/29/2020 AMEX - 9010 03/01/2020 $3,251 02/01/2020 - 02/29/2020 Capital One - 8800 02/01/2021 $4,842 01/01/2021 - 01/31/2021 Résumé du compte Mastercard – 5555 Date d'échéance: 04/01/2021 Balance: $5,390 Date du relevé: 03/01/2021 - 03/31/2021 Visa – 5155 Date d'échéance: 03/01/2020 Balance: $2,013 Date du relevé: 02/01/2020 - 02/29/2020 AMEX – 9010 Date d'échéance: 03/01/2020 Balance: $3,251 Date du relevé: 02/01/2020 - 02/29/2020 Capital One – 8800 Date d'échéance: 02/01/2021 Balance: $4,842 Date du relevé: 01/01/2021 - 01/31/2021 L'exemple finit Voir les captures d'écran de la mise en page réactive Desktop L'exemple commence L'exemple finit Mobile L'exemple commence L'exemple finit Voir le CSS Début du code #desktop-table { display:none; } #mobile-list { display:block; } #mobile-list ul { position: relative; } #mobile-list ul { list-style-type: none; } #mobile-list ul li { font-weight:bold; } #mobile-list ul li ul li { font-weight:normal; } #desktop-table { border: 0px solid #777; border-collapse: collapse; padding: 0px; width: 100%; table-layout: fixed; } #desktop-table caption { font-size: 1.2em; margin: .5em 0 .75em; } #desktop-table th,td { padding: .625em; text-align: center; border: 1px solid #777; background-color:white; } #desktop-table thead th{ letter-spacing: .1em; text-transform: uppercase; border-bottom: 3px solid #777; } @media screen and (min-width: 767px) { #desktop-table { display:block; } #mobile-list { display:none; } } Fin du code Voir le HTML Début du code Résumé du compte Compte Date d'échéance Balance Date du relevé Mastercard - 5555 04/01/2021 $5,390 03/01/2021 - 03/31/2021 Visa - 5155 03/01/2020 $2,013 02/01/2020 - 02/29/2020 AMEX - 9010 03/01/2020 $3,251 02/01/2020 - 02/29/2020 Capital One - 8800 02/01/2021 $4,842 01/01/2021 - 01/31/2021 Résumé du compte Mastercard – 5555 Date d'échéance: 04/01/2021 Balance: $5,390 Date du relevé: 03/01/2021 - 03/31/2021 Visa – 5155 Date d'échéance: 03/01/2020 Balance: $2,013 Date du relevé: 02/01/2020 - 02/29/2020 AMEX – 9010 Date d'échéance: 03/01/2020 Balance: $3,251 Date du relevé: 02/01/2020 - 02/29/2020 Capital One – 8800 Date d'échéance: 02/01/2021 Balance: $4,842 Date du relevé: 01/01/2021 - 01/31/2021 Fin du code ",
 href: '../module8/responsive-tables-fr.html#reflow-list'  ,
 title: "Tableaux adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Reformater en une liste imbriquée"
},{
 categories: 'module8',
 content: "  Mauvais example: Reformater le tableau en une seule colonne Dans l’exemple ci-dessous, le tableau est reformaté à une colonne si la largeur du navigateur est inférieure à 768 pixels, ce qui maintient la lisibilité sans qu’un défilement horizontal soit nécessaire. La technique consiste à empiler les cellules du tableau les unes sur les autres, à masquer les en-têtes de colonne et à les reproduire à gauche de la cellule comme des en-têtes de rangée. Les en-têtes de rangée sont créés avec le contenu généré par CSS, en s’appuyant sur la valeur d’un attribut personnalisé data-label. Malheureusement, comme indiqué dans le module 7, le texte généré par CSS échoue aux WCAG. HTML Début du code Mastercard - 5555 Fin du code CSS Début du code @media screen and (max-width: 767px) { table td::before { content: attr(data-label); float: left; font-weight: bold; text-transform: uppercase; } } Fin du code Redimensionner la fenêtre du navigateur pour voir l’effet. L'exemple commence Résumé du compte Compte Date d'échéance Balance Date du relevé Mastercard - 5555 04/01/2021 $5,390 03/01/2021 - 03/31/2021 Visa - 5155 03/01/2020 $2,013 02/01/2020 - 02/29/2020 AMEX - 9010 03/01/2020 $3,251 02/01/2020 - 02/29/2020 Capital One - 8800 02/01/2021 $4,842 01/01/2021 - 01/31/2021 L'exemple finit Voir les captures d'écran de la mise en page réactive Bureau L'exemple commence L'exemple finit Cellulaire L'exemple commence L'exemple finit Voir le CSS Début du code table { border: 1px solid #ccc; border-collapse: collapse; margin: 0; padding: 0; width: 100%; table-layout: fixed; } table caption { font-size: 1.2em; margin: .5em 0 .75em; } table th, table td { padding: .625em; text-align: center; border: 1px solid #CCC; } table thead th { letter-spacing: .1em; text-transform: uppercase; } @media screen and (max-width: 767px) { table { border: 0; } table caption { font-size: 1.2em; } table thead { border: none; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; } table tr { border-bottom: 3px solid #ddd; display: block; margin-bottom: 1em; } table td, table tbody th { border-bottom: 1px solid #ddd; display: block; text-align: right; width:95%; } table td::before, table tbody th::before { content: attr(data-label); float: left; font-weight: bold; text-transform: uppercase; } table td:last-child { border-bottom: 0; } } Fin du code Voir le HTML Début du code Résumé du compte Compte Date d'échéance Balance Date du relevé Mastercard - 5555 04/01/2021 $5,390 03/01/2021 - 03/31/2021 Visa - 5155 03/01/2020 $2,013 02/01/2020 - 02/29/2020 AMEX - 9010 03/01/2020 $3,251 02/01/2020 - 02/29/2020 Capital One - 8800 02/01/2021 $4,842 01/01/2021 - 01/31/2021 Fin du code ",
 href: '../module8/responsive-tables-fr.html#reflow-table'  ,
 title: "Tableaux adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: "  Mauvais example: Reformater le tableau en une seule colonne"
},{
 categories: 'module8',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.3.1: Information et relations Échecs F87 : Échec du critère de succès 1.3.1 consistant à utiliser les pseudo-éléments :before et :after et la propriété content en CSS (en anglais) ",
 href: '../module8/responsive-tables-fr.html#wcag'  ,
 title: "Tableaux adaptés - Module 8 - Zoom et conception adaptée" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module8',
 content: "  Conception de texte adapté Les conteneurs de texte doivent être redimensionnés à mesure que la taille de la zone d’affichage change pour empêcher le texte de déborder. Évitez les conteneurs fixes et statiques. ",
 href: '../module8/responsive-text-fr.html#resp-text'  ,
 title: "Texte adapté - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception de texte adapté"
},{
 categories: 'module8',
 content: "  Bon exemple : Le conteneur de texte est redimensionné avec la zone d’affichage Dans cet exemple, le conteneur de texte a une valeur de width de 75 %. Le texte se reformate à mesure que l’utilisateur modifie la taille de la zone d’affichage. Début du code Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis massa id justo egestas egestas in a urna. Cras et nunc fringilla, feugiat nisl tempus, aliquam nisi. Quisque rhoncus eros sed malesuada tincidunt. In commodo dignissim nulla ac porta. Nunc scelerisque quam sit amet sapien hendrerit sollicitudin. Curabitur tristique, tortor et ultricies dignissim, sem arcu tempor libero, sed aliquet tellus ex non lectus. Vestibulum maximus dolor ante, eget tincidunt mi accumsan a. Fusce euismod mauris neque, vitae sagittis ex faucibus eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fin du code HTML Début du code Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis massa id justo egestas egestas in a urna. Cras et nunc fringilla, feugiat nisl tempus, aliquam nisi. Quisque rhoncus eros sed malesuada tincidunt. In commodo dignissim nulla ac porta. Nunc scelerisque quam sit amet sapien hendrerit sollicitudin. Curabitur tristique, tortor et ultricies dignissim, sem arcu tempor libero, sed aliquet tellus ex non lectus. Vestibulum maximus dolor ante, eget tincidunt mi accumsan a. Fusce euismod mauris neque, vitae sagittis ex faucibus eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fin du code ",
 href: '../module8/responsive-text-fr.html#cont-resize'  ,
 title: "Texte adapté - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Le conteneur de texte est redimensionné avec la zone d’affichage"
},{
 categories: 'module8',
 content: "  Mauvais exemple : Le conteneur de texte utilise une largeur fixe Dans cet exemple, le conteneur de texte est réglé avec une valeur de width de 800 pixels. Le texte ne se reformate pas lorsque l’utilisateur modifie la taille de la zone d’affichage. L'exemple commence Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis massa id justo egestas egestas in a urna. Cras et nunc fringilla, feugiat nisl tempus, aliquam nisi. Quisque rhoncus eros sed malesuada tincidunt. In commodo dignissim nulla ac porta. Nunc scelerisque quam sit amet sapien hendrerit sollicitudin. Curabitur tristique, tortor et ultricies dignissim, sem arcu tempor libero, sed aliquet tellus ex non lectus. Vestibulum maximus dolor ante, eget tincidunt mi accumsan a. Fusce euismod mauris neque, vitae sagittis ex faucibus eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. L'exemple finit HTML Début du code Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis massa id justo egestas egestas in a urna. Cras et nunc fringilla, feugiat nisl tempus, aliquam nisi. Quisque rhoncus eros sed malesuada tincidunt. In commodo dignissim nulla ac porta. Nunc scelerisque quam sit amet sapien hendrerit sollicitudin. Curabitur tristique, tortor et ultricies dignissim, sem arcu tempor libero, sed aliquet tellus ex non lectus. Vestibulum maximus dolor ante, eget tincidunt mi accumsan a. Fusce euismod mauris neque, vitae sagittis ex faucibus eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fin du code ",
 href: '../module8/responsive-text-fr.html#cont-fix-width'  ,
 title: "Texte adapté - Module 8 - Zoom et conception adaptée" ,
 heading: "  Mauvais exemple : Le conteneur de texte utilise une largeur fixe"
},{
 categories: 'module8',
 content: "  Conception de composantes d’interface utilisateur adaptée Réorganiser et redimensionner les composants de l’interface utilisateur de la page pour maintenir la lisibilité lorsque la zone d’affichage change. ",
 href: '../module8/responsive-ui-fr.html#resp-UI'  ,
 title: "Composantes d’interface utilisateur adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception de composantes d’interface utilisateur adaptée"
},{
 categories: 'module8',
 content: "  Bon exemple : Redimensionnement des composants de l’interface utilisateur de la fenêtre Ces captures d’écran montrent comment, lorsque l’écran se rétrécit du mode bureau à celui du téléphone, les médias sociaux et les menus globaux deviennent visibles ou masqués au moyen d’un bouton de menu « hamburger ». La structure du hamburger est abordée au module 12. L'exemple commence Figure 1: Mode bureau L'exemple finit L'exemple commence Figure 2: Mode téléphone L'exemple finit ",
 href: '../module8/responsive-ui-fr.html#example'  ,
 title: "Composantes d’interface utilisateur adaptées - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Redimensionnement des composants de l’interface utilisateur de la fenêtre"
},{
 categories: 'module8',
 content: "  Conception d’une vidéo adaptée Assurez-vous que les vidéos sont redimensionnées à mesure que la taille de la zone d’affichage change afin qu’elles ne débordent pas. Vous pouvez y parvenir soit en: réglant la propriété CSS max-width:100% sur l’élément du conteneur de la vidéo, ou en réglant la propriété CSS width: 100% sur l’élément video Les dimensionnements statiques peuvent briser les configurations de la page. ",
 href: '../module8/responsive-video-fr.html#resp-video'  ,
 title: "Vidéo adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: " Conception d’une vidéo adaptée"
},{
 categories: 'module8',
 content: "  Bon exemple : Vidéo de largeur 100 % Dans cet exemple, la vidéo utilise la CSS width:100% et est redimensionnée dans tous les modes. Pour voir la conception adaptée en action, consultez le TED Talk Ron McCallum : How technology allowed me to read et redimensionnez la fenêtre de votre navigateur. Voir les captures d'écran de la vidéo adaptée Mode bureau de la vidéo L'exemple commence L'exemple finit Mode tablette de la vidéo L'exemple commence L'exemple finit Mode téléphone de la vidéo L'exemple commence L'exemple finit ",
 href: '../module8/responsive-video-fr.html#width-video'  ,
 title: "Vidéo adaptée - Module 8 - Zoom et conception adaptée" ,
 heading: "  Bon exemple : Vidéo de largeur 100 %"
},{
 categories: 'module8',
 content: "  Reformater le contenu Certains utilisateurs malvoyants ont besoin d’agrandir considérablement le texte et de le lire dans une seule colonne. Lorsque ces utilisateurs effectuent un zoom sur le navigateur pour régler le contenu à 400 %, les WCAG exigent que le contenu soit reformaté dans une seule colonne afin qu’il ne soit pas nécessaire de le faire défiler dans plus d’une direction. Le critère de succès pertinent se lit comme suit : Critère de succès 1.4.10 Reformatage (niveau AA) : Le contenu peut être présenté sans perte d’information ou de fonctionnalité et sans besoin de défilement en deux dimensions pour : Défilement vertical qui a une largeur équivalente à 320 pixels en CSS Défilement horizontal qui à une hauteur équivalente à 256 pixels en CSS Sauf pour les parties du contenu qui nécessitent une mise en page bidimensionnelle pour l’utilisation ou la signification. 320 pixels en CSS équivalent à une largeur de zone d’affichage de départ de 1 280 pixels en CSS qui est d’une largeur approximative à un zoom de 400 %. Pour le contenu Web conçu pour un défilement horizontal (p. ex., avec du texte vertical), 256 pixels CSS équivalent à une hauteur de zone d’affichage de départ de 1 024 pixels en CSS avec un zoom de 400 %. Vous pouvez tester ce critère de succès en modifiant la fenêtre de votre navigateur : à 320 pixels de largeur sur 256 pixels de hauteur, ou à 1280 pixels de largeur sur 1024 pixels de hauteur, puis zoomer le contenu à 400 %. Le contenu devrait apparaître dans une seule colonne sans défilement horizontal et sans perte d’information ou de fonctionnalité. Vous pouvez également utiliser l’émulateur mobile intégré Firefox (Control + Shift + M) ou Chrome (Control + Shift + I) pour afficher différentes tailles de zone d’affichage. Vous satisfaites à ce critère de succès en mettant en œuvre une conception adaptée, comme décrit à la section suivante. Avec une conception adaptée, vous simplifiez de plus en plus l’interface utilisateur pour des écrans de plus petite taille, principalement en utilisant HTML et CSS, mais avec un peu de JavaScript pour les widgets qui affichent ou masquent le contenu. Par exemple, un bouton hamburger sur mobile permettant de basculer dans un menu entièrement affiché sur le bureau offre des renseignements et des fonctionnalités équivalents. Il est important d’éviter le défilement horizontal pour dévoiler des parties de lignes coupées par la zone d’affichage, car ce défilement augmente considérablement l’effort de lecture. Il est également important que le contenu ne soit pas masqué hors écran. Gardez à l’esprit ces pratiques exemplaires lorsque vous concevez du contenu à reformater dans une seule colonne : Le contenu principal remplit la zone d’affichage. Le défilement horizontal ne se fait pas. Éviter d’utiliser plusieurs colonnes. La longueur de ligne courte est difficile à lire. Éviter d’utiliser des flotteurs CSS. Ils créent également une longueur de ligne courte, sauf si l’élément flotté est très petit. Éviter d’utiliser des largeurs fixes et minimales CSS. Elles ont tendance à provoquer un défilement horizontal. Il est parfois impossible d’empêcher le défilement horizontal. Le critère de succès exclut les gros tableaux de données qui ne peuvent être simplifiés et les barres d’outils comportant beaucoup de boutons. Notez que ce ne sont pas tous les utilisateurs malvoyants qui profitent du grossissement. Un utilisateur ayant une vision tubulaire peut être en mesure de lire très bien le texte d’un paragraphe tout en profitant d’autres considérations de conception, comme placer des champs de formulaire près de leurs étiquettes. Bon exemple : Reformater le contenu Dans cet exemple, lorsque la page est réduite à 320 pixels, la barre de navigation horizontale s’effondre en une pile verticale dans une seule colonne. Voir cet exemple en action (S'ouvre dans un nouvel onglet). Rétrécissez la fenêtre du navigateur pour déclencher la disposition de la colonne unique. Afficher les captures d'écran de la mise en page réactive Mode bureau L'exemple commence L'exemple finit Vue de l’émulateur mobile à une largeur de 320 pixels L'exemple commence L'exemple finit Code Voir le CSS Début du code h1 { font-size: 1.5rem; } #navbar { list-style: none; margin: 0; padding: 0; background-color: #F3F2F1; } #navbar a { display: block; color: white; background-color: #0e6591; border-radius: 1px 5px 5px 1px; padding: 5px; text-decoration: none; } #navbar a:hover, #navbar a:focus, #navbar [aria-current] { color: #000000; background-color: #56d5f5; } #navbar a:hover, #navbar a:focus { text-decoration: underline; } /* MEDIA QUERY 1 - For viewports 960px and wider */ @media (min-width: 960px) { main, nav { width: 950px; margin: auto; } main { clear: left; overflow: auto; margin-top: 1rem; } #navbar { } #navbar li { margin-right: 1em; float: left; } #navbar a { padding-right: 0.5em; } } /* END MEDIA QUERY 1 */ /* MEDIA QUERY 2 - For viewports 959px and narrower */ @media (max-width: 959px) { main, nav { width: 100%; } #navbar a { width: 66%; margin-bottom: 5px; } #navbar a:hover, #navbar a:focus { border-radius: 5px 25px 25px 5px; } } /* END MEDIA QUERY 2 */ Fin du code Voir le HTML Début du code […] Home Search Contact Login Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Fin du code Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.10 : Redistribution (en anglais) Techniques C32 : Utiliser les requêtes des médias et la grille CSS pour reformater les colonnes (en anglais) C31 : Utiliser la CSS Flexbox pour reformater le contenu (en anglais) ",
 href: '../module8/zoom-fr.html#reflow-content'  ,
 title: "Zoom - Module 8 - Zoom et conception adaptée" ,
 heading: " Reformater le contenu"
},{
 categories: 'module8',
 content: "  Redimensionner le texte Certains utilisateurs malvoyants configurent la taille du texte par défaut de leur navigateur pour qu’elle soit considérablement plus grande. Conformément au critère de succès 1.4.4 des WCAG 2.1 : Redimensionner le texte. Si la taille du texte de la conception augmente de 200 %, s’assurer qu’il n’y a pas de chevauchement ou de coupure du contenu, ni perte d’information ou de fonctionnalité. Ce critère exigeait auparavant que votre conception soit testée avec la taille du texte (seule) augmentée à 200 %. Toutefois, l’échec connexe des WCAG Failure F69 (lien ci-dessous) a été révisé pour permettre la mise à l’essai avec zoom de base : Le groupe de travail a découvert de nombreux malentendus sur la façon de tester cette défaillance. Nous prévoyons deréviser cette défaillance dans une prochaine mise à jour. D’ici là, si le contenu satisfait au critère de succès en utilisant l’une des techniques suffisantes énumérées, il ne satisfait pas à cette défaillance. Une des techniques suffisantes pour satisfaire aux critères de succès 1.4.4 : Redimensionner le texte consiste simplement à utiliser HTML5, pour lequel tous les navigateurs modernes prennent en charge le zoom (la technique WCAG G142, dont le lien est indiqué ci-dessous). Le zoom par défaut du navigateur n’est pas un zoom texte seulement, mais il est suffisant pour satisfaire au critère de succès. Toutefois, les conceptions mobiles doivent tout de même permettre le zoom par pincement, comme décrit dans la section Conception adaptée > Définir la zone d’affichage, ci-dessous. Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.4 : Redimensionnement du texte Techniques G142 : Utiliser une technologie qui permet l'utilisation du zoom dans des agents utilisateur communément disponibles (en anglais) C28 : Spécifier la taille des conteneurs de texte en utilisant des unités em (en anglais) G179 : S'assurer qu'il n'y a aucune perte de contenu ou de fonctionnalité lorsque le texte est redimensionné et que les conteneurs ne le sont pas (en anglais) Échecs F69 : Échec du critère de succès 1.4.4 survenant quand le texte agrandi jusqu'à 200 % fait en sorte que le texte, les images ou les composants d'interface sont rognés, tronqués ou masqués (en anglais) Règles d’essai meta viewport allows for zoom ",
 href: '../module8/zoom-fr.html#resize-text'  ,
 title: "Zoom - Module 8 - Zoom et conception adaptée" ,
 heading: " Redimensionner le texte"
},{
 categories: 'module9',
 content: "  Animation provenant d’interactions Les personnes atteintes de troubles vestibulaires (de l’oreille interne) ont besoin de contrôle sur les mouvements déclenchés par des interactions. Les mouvements peuvent déclencher des réactions de troubles vestibulaires, notamment des distractions, des étourdissements, des maux de tête et des nausées. Les directives WCAG exigent (au niveau AAA) que toute les animations de mouvement déclenchent une interaction puisse être désactivée à moins que l’animation soit essentielle à la fonctionnalité ou à l’information transmise. Il est essentiel de déplacer tout nouveau contenu dans la clôture pour le faire défiler. Comme c’est l’utilisateur qui contrôle le mouvement de défilement essentiel, cette approche est permise. Si le défilement d’une page entraîne le déplacement d’éléments (autre que le mouvement essentiel associé au défilement), cela posera problème. Le « défilement par parallaxe » pose également problème. Il se produit lorsque l’arrière-plan se déplace à une vitesse différente de celle de l’avant-plan. Les Directives WCAG recommandent de choisir l’une des trois solutions de rechange pour réduire les risques de déclencher un trouble vestibulaire: Évitez d’utiliser une animation inutile; Offrir une commande permettant aux utilisateurs de désactiver les animations non essentielles des interactions avec l’utilisateur (à l’échelle du site); Tirez profit de la fonction de mouvement réduit intégrée au système utilisateur-agent ou au système d’exploitation avec la requête média CSS prefers-reduced-motion: CSS Début du code @media (prefers-reduced-motion: reduce) { /* la commande CSS pour désactiver le mouvement est insérée ici */ } Fin de code Bon exemple : Combinaison de la fonction de mouvement réduit du système d’exploitation et d’une requête média CSS CSS offre une requête média prefers-reduced-motion qui respecte les paramètres de mouvement spécifiés par l’utilisateur. Cet exemple illustre un mouvement de tressautement :hover et :focus sur un bouton. Le mouvement est désactivé lorsque : la requête CSS média prefers-reduced-motion est fixée à reduce l’agent utilisateur ou le système d’exploitation intègre les fonctionnalités de mouvement réduit. Exemple : Mouvement déclenché par une interaction de l’utilisateur CSS Début du code button:focus, button:hover { animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both; } @media (prefers-reduced-motion: reduce) { button:focus, button:hover { animation: none; } } Fin de code Veuillez noter que Windows 10 permet de désactiver l’affichage des animations. L'exemple commence L’option Show animations in Windows est désactivée dans les paramètres Ease of Access de Windows 10 sous Display > Simplify and personalise Windows. L'exemple finit Vous pouvez plutôlt imiter la fonction de mouvement réduit du système d’exploitation dans un navigateur qui propose l’option. Par exemple, dans le menu Outils de Chrome, le sous-menu Rendu propose « Emulate CSS media feature prefers-reduced-motion » (Imiter la fonction CSS « Préférer les médias à mouvement réduit »). L’activation de cette option équivaut à modifier les paramètres du système d’exploitation. L'exemple commence L'exemple finit ",
 href: '../module9/animation-motion-fr.html#animation-from-interactions'  ,
 title: "Animations et mouvements - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Animation provenant d’interactions"
},{
 categories: 'module9',
 content: "  Parallaxe Le défilement en parallaxe se produit lorsque l’arrière-plan se déplace à une vitesse différente de celle de l’avant-plan. Il est lié à des animations non essentielles additionnelles qui apparaissent lorsque l’utilisateur fait défiler l’écran. Des éléments décoratifs se déplacent horizontalement tandis que le contenu essentiel de la page défile verticalement. Pour certaines personnes, ce mouvement peut déclencher des troubles vestibulaires comme des étourdissements, des nausées et des maux de tête. Évitez le défilement en parallaxe ou ajoutez une commande pour le désactiver.0 Les utilisateurs de clavier doivent pouvoir accéder à la zone cachée d’une zone de défilement en parallaxe et utiliser toutes les fonctionnalités de la page Web. Si dans CSS le contenu caché est réglé à display: none, les utilisateurs de clavier pourraient ne pas avoir accès aux éléments cachés du contenu. Le texte doit être lisible devant l’arrière-plan et doit être conforme aux directives WCAG en matière de contraste, soit 4.5:1 pour le texte de petite taille et 3:1 pour le texte de grande taille ou en caractères gras. Mauvais exemple : Utilisation du défilement en parallaxe Exemple: défilement en parallaxe Source: Démo - Comment créer un site Web à défilement parallaxe (en anglais seulement). ",
 href: '../module9/animation-motion-fr.html#parallax'  ,
 title: "Animations et mouvements - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Parallaxe"
},{
 categories: 'module9',
 content: "  Vidéos ou animations en arrière-plan Les vidéos et les animations en arrière-plan présentent des informations supplémentaires et améliorent le contenu Web. Si des informations essentielles sont communiquées dans une vidéo en arrière-plan, la vidéo doit être entièrement accessible, avec des sous-titres et une transcription descriptive. Assurez-vous qu’aucun contenu ne commence à jouer automatiquement au chargement de la page. Permettez aux utilisateurs de contrôler la lecture et l’arrêt du contenu en mouvement ou du contenu audio. Les Directives WCAG de niveau AA permettent la lecture automatique des vidéos pendant un maximum de 5 secondes, mais si un contenu doit être joué pendant plus de 5 secondes, un mécanisme doit être intégré pour mettre en pause, arrêter ou masquer le contenu. Bon exemple : Vidéo en arrière-plan avec fonction de lecture/pause L'exemple commence L'exemple finit ",
 href: '../module9/animation-motion-fr.html#background-videos-or-animations'  ,
 title: "Animations et mouvements - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Vidéos ou animations en arrière-plan"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.2.2 : Mettre en pause, arrêter, masquer 2.3.3 : Animation résultant d’interactions (en anglais) (Niveau AAA) Techniques G4 : Permettre de mettre le contenu en pause et de redémarrer là où il a été mis en pause (en anglais) G186 : Placer un élément d'interface dans la page pour arrêter le contenu en mouvement, clignotant ou mis à jour automatiquement (en anglais) C39 : Utiliser la requête de réduction de mouvement CSS pour empêcher le mouvement (en anglais) Échecs F16 : Échec du critère de succès 2.2.2 consistant à inclure un contenu défilant lorsque le mouvement n'est pas essentiel à l'activité sans inclure aussi un mécanisme pour mettre ce contenu en pause et pour le redémarrer (en anglais) ",
 href: '../module9/animation-motion-fr.html#animation-motion-wcag'  ,
 title: "Animations et mouvements - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Donner à l’utilisateur le contrôle d’une piste audio qui se déclenche automatiquement Le son qui joue est automatiquement en concurrence avec la sortie vocale du logiciel de lecture d’écran, ce qui rend difficile la compréhension de l’une ou l’autre des sources audio. Si la fonction audio est activée automatiquement lors du chargement de la page pendant plus de 3 secondes, permettre à l’utilisateur : de suspendre ou d’arrêter le fichier audio; ou de contrôler le volume indépendamment du volume du système. Il est également possible de lire des fichiers audio uniquement sur demande de l’utilisateur. ",
 href: '../module9/audio-control-fr.html#audio-control-user'  ,
 title: "Contrôle du son - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Donner à l’utilisateur le contrôle d’une piste audio qui se déclenche automatiquement"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.4.2 : Contrôle du son Techniques G60 : Jouer un son qui s'arrête automatiquement dans les 3 secondes (en anglais) G170 : Fournir un élément d'interface près du début de la page Web permettant d'arrêter le son qui démarre automatiquement (en anglais) G171 : Jouer les sons seulement sur demande de l'utilisateur (en anglais) Échecs F23 : Échec du critère de succès 1.4.2 consistant à jouer un son pendant plus de 3 secondes sans mécanisme pour l'arrêter (en anglais) F93 : Échec du critère de succès 1.4.2 en raison de l'absence d'un moyen de mettre en pause ou d'arrêter un élément media HTML5 qui se diffuse automatiquement. ",
 href: '../module9/audio-control-fr.html#audio-control-wcag'  ,
 title: "Contrôle du son - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Sous-titres Ajouter des sous-titres pour les vidéos préenregistrées et en direct avec piste audio Utiliser l’élément pour spécifier des pistes de texte chronométrées pour les éléments ou . Les sous-titres sont synchronisés avec l’audio. Les sous-titres sont affichés en lettres minuscules et majuscules. Les sous-titres ne comportent pas plus de trois lignes à la fois. Placez une nouvelle phrase sur une nouvelle ligne. Le nombre maximal de caractères par ligne est de 32 caractères. Insérez les sauts de ligne des sous-titres à des points logiques plutôt qu’au milieu d’une phrase. Les couleurs par défaut sont le texte blanc sur fond noir. Le rapport de contraste par défaut entre la couleur de police et la couleur de fond est d’au moins 3:1 (taille de police d’au moins 18 points). La taille de la police par défaut est d’au moins 22 points. Placez les sous-titres de manière à ne pas masquer le texte à l’écran, le visage des gens et d’autres informations visuelles importantes. Assurez-vous que l’intervalle entre les sous-titres est d’au moins 1,5 seconde. Supprimez les sous-titres des longs intervalles silencieux. Les sous-titres ont une durée maximale de 6 secondes. ",
 href: '../module9/best-practice-mod-9-fr.html#captions'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Sous-titres"
},{
 categories: 'module9',
 content: "  Transcriptions Les transcriptions de base sont une version texte de l’information audio parlée et non parlée. Les transcriptions descriptives comprennent également une description textuelle de l’information visuelle. Fournir des transcriptions descriptives des vidéos préenregistrées avec piste audio. Fournir des transcriptions descriptives ou une audiodescription pour le contenu vidéo seulement préenregistré. Fournir une transcription de base pour un contenu audio seulement préenregistré Fournir une transcription de base ou des sous-titres pour un contenu audio seulement en direct Les transcriptions interactives permettant à l’utilisateur de cliquer sur une phrase n’importent où dans la transcription pour se rendre à ce point précis dans la vidéo (ou l’audio). Les transcriptions interactives sont produites à partir de fichiers texte chronométré spécifiés dans l’élément . Placez la transcription ou un lien vers celle-ci directement en dessous ou à côté du lecteur multimédia. Si la transcription se trouve sur une autre page, fournissez un lien vers le fichier audio ou vidéo. Ajoutez la transcription en HTML pour assurer une accessibilité maximale pour les utilisateurs et les moteurs de recherche. Si vous utilisez un fichier de sous-titres, combinez plusieurs lignes en paragraphes sensés. ",
 href: '../module9/best-practice-mod-9-fr.html#transcripts'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Transcriptions"
},{
 categories: 'module9',
 content: "  Transcription de l’audio en texte La pratique exemplaire en matière de transcription est presque identique pour les sous-titres et les transcriptions. Lors de la transcription, l’objectif est d’être le plus exact possible : Ne paraphrasez pas et n’omettez jamais de mots (et ne censurez pas). Ne remplacez jamais des mots. Ne réorganisez jamais l’ordre des paroles. Ne corrigez ni ne modifiez jamais la grammaire. Ne fournissez jamais de précisions dans les sous-titres (vous pouvez le faire dans la transcription). Transcrivez tous les sons parlés et non parlés (rires, grognements, soupirs, cris, ratés d’un moteur de voiture, bruits de pas, grands cris au loin) Identifiez les personnes qui parlent. Utilisez le nom complet la première fois et le nom simple par la suite. Si une personne n’est pas identifiée, utilisez Personne + numéro (p. ex. Personne 1, Personne 2) ou utilisez un rôleou un titre sans numéro (p. ex. intervieweur, médecin). Exclure les paroles non pertinentes et les bruits de fond non pertinents. Ne pas divulguer les informations qui sont intentionnellement masquées avant le moment opportun. Inclure des renseignements pertinents au sujet du discours, p. ex. (chuchotement), (silencieusement). Mettre les sons non parlés entre parenthèses, en italiques, en minuscules et avec un espace avant et après, p. ex. ( bavardage au loin) Utiliser la ponctuation pour exprimer l’emphase. Pour des paroles interrompues, utiliser un tiret au bout de la ligne. Utiliser des mots en majuscules pour indiquer un cri. Lorsque le discours est inintelligible ou inaudible, transcrire [inaudible] Indiquer les longues périodes de silence ainsi : (silence). Inclure la musique de fond si elle est importante pour comprendre le contenu : Identifier la musique avec l’étiquette en majuscules MUSIQUE (ou un verbe laissant entendre de la musique), suivie d’un deux-points et du titre entre guillemets suivi de l’artiste. Transcrire les paroles importantes avec des notes de musique de chaque côté, p. ex. ♪ A long, long time ago ♪ Décrire toute musique qui ne fait pas partie de l’action, mais qui contribue à l’ambiance : ♪ musique effrayante ♪ Pratiques exemplaires propres aux transcriptions : Pour les transcriptions descriptives, inclure toute l’information audio pertinente ainsi qu’une description de toutes les informations visuelles pertinentes. Si votre transcription est générée à partir de fichiers texte chronométré, assurez-vous que les descriptions correspondent à des intervalles libres dans le contenu audio principal, ou utilisez un lecteur permettant de faire une pause pendant la description. Les transcriptions affichent du texte à l’écran dans les vidéos. Les sous-titres n’affichent pas de texte à l’écran. Assurez-vous que les transcriptions indiquent la source des sons plutôt que de simplement les décrire. Dans certains cas, comme les dépositions judiciaires, la transcription doit être rendue intégralement, y compris les « ums », les « ahs » et les pauses. L’utilisation d’en-têtes, de sujets et de liens peut rendre la transcription plus facile à utiliser. Incluez des estampilles temporelles seulement lorsque cela est utile. Ajoutez une estampille temporelle au contenu audio inaudible. ",
 href: '../module9/best-practice-mod-9-fr.html#transcribing-audio-to-text'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Transcription de l’audio en texte"
},{
 categories: 'module9',
 content: "  Description de l’information visuelle Fournir une audiodescription pour un contenu vidéo préenregistré avec piste audio. Fournir une audiodescription ou une transcription descriptive pour un contenu vidéo seulement Concevoir de nouvelles vidéos avec descriptions intégrées (le script comprend toute l’information visuelle pertinente) pour éviter la nécessité d’une audiodescription S’assurer que les éléments visuels importants sont décrits de façon appropriée et objective pour comprendre ce que la vidéo communique. Rédiger la description de l’information visuelle au temps présent en utilisant une voix active et un style narratif à la troisième personne. S’assurer d’inclure l’ensemble du texte, p. ex. le texte du titre au début, les liens et adresses courriel, le nom de la personne qui parle et le texte affiché dans une présentation. ",
 href: '../module9/best-practice-mod-9-fr.html#description-of-visual-information'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Description de l’information visuelle"
},{
 categories: 'module9',
 content: "  Accessibilité du lecteur multimédia Le lecteur multimédia idéal offre la prise en charge intégrée des sous-titres, des audiodescriptions et des transcriptions. Accessibilité par clavier : Toutes les commandes peuvent être focalisées au moyen de la touche de tabulation. Les commandes comportent un indicateur visible de focus du clavier. L’ordre des commandes activées par la touche de tabulation correspond à l’ordre visuel, de gauche à droite. Toutes les commandes peuvent être activées par le clavier. Le texte, les commandes et les arrière-plans présentent un contraste suffisant entre les couleurs. Accessibilité des lecteurs d’écran : Chaque commande présente aux lecteurs d’écran son nom, son rôle et sa valeur (si une ou plusieurs sont définies). ",
 href: '../module9/best-practice-mod-9-fr.html#media-player-accessibility'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Accessibilité du lecteur multimédia"
},{
 categories: 'module9',
 content: "  Contenu clignotant S’assurer que le contenu clignotant : Ne clignote pas à plus de 3 fois par seconde. Ne dépasse pas 21 824 pixels carrés. Ne présente pas de contraste élevé. Évaluer le contenu clignotant à l’aide d’un outil comme Photosensitive Epilepsy Analysis Tool (PEAT). ",
 href: '../module9/best-practice-mod-9-fr.html#flashing-content'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Contenu clignotant"
},{
 categories: 'module9',
 content: "  Animations et mouvements Permettre aux utilisateurs de désactiver les animations de mouvement. Éviter les animations inutiles. ",
 href: '../module9/best-practice-mod-9-fr.html#animation-and-motion'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Animations et mouvements"
},{
 categories: 'module9',
 content: "  Mettre en pause, arrêter ou masquer Pour tout contenu en mouvement, clignotant et défilant qui démarrent automatiquement, durent plus de cinq secondes et est présentées en parallèle avec d’autres contenus, offrez à l’utilisateur un moyen de le mettre en pause, de l’arrêter ou de le masquer. Pour toute information actualisée automatiquement, offrir à l’utilisateur un moyen de mettre en pause, d’arrêter ou de masquer le contenu ou encore, offrez à l’utilisateur un moyen de contrôler la fréquence des actualisations. Un « bouton pause » accessible par clavier ou d’autres mécanismes peuvent être utilisés pour mettre le contenu en pause. Éviter les déplacements, les clignotements, les défilements ou les actualisations automatiques inutiles. ",
 href: '../module9/best-practice-mod-9-fr.html#play-stop-hide'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Mettre en pause, arrêter ou masquer"
},{
 categories: 'module9',
 content: "  Contrôle du son Si la fonction audio est activée automatiquement lors du chargement de la page pendant plus de 3 secondes, permettre à l’utilisateur : de suspendre ou d’arrêter le fichier audio; ou de contrôler le volume indépendamment du volume du système. Il est également possible de lire des fichiers audio uniquement sur demande de l’utilisateur. ",
 href: '../module9/best-practice-mod-9-fr.html#audio-control'  ,
 title: "Pratique exemplaire - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Contrôle du son"
},{
 categories: 'module9',
 content: "  Aperçu – Sous-titres Les sous-titres sont une version texte des paroles et d’autres éléments audio nécessaires pour comprendre un contenu. Ils sont synchronisés avec l’audio et généralement affichés dans un lecteur multimédia lorsque l’utilisateur active cette fonctionnalité. Les sous-titres aident les utilisateurs sourds, les utilisateurs malentendants et les utilisateurs qui éprouvent des difficultés à traiter l’information auditive. Les sous-titres sont également utilisés par des personnes sans incapacité dans diverses situations: Dans les environnements bruyants où les utilisateurs ne peuvent pas entendre l’audio. Dans les environnements silencieux où les utilisateurs ne peuvent pas activer l’audio. Pour les utilisateurs qui comprennent mieux la langue écrite que la langue parlée. Pour les utilisateurs qui apprennent à lire une nouvelle langue. Pour mieux comprendre le contenu contenant des éléments audio et textuels redondants, ce qui aide les utilisateurs à se concentrer et à retenir l’information. Pour faciliter la recherche d’un document. Les sous-titres codés sont indexés par les moteurs de recherche, ce qui rend la page plus facile à trouver. Les sous-titres sont habituellement affichés dans un lecteur multimédia lorsque l’utilisateur active cette fonctionnalité, appelée « sous-titrage codé ». On peut aussi utiliser des « sous-titres visibles » qui sont toujours affichés et qui ne peuvent pas être désactivés (ni personnalisés). ",
 href: '../module9/captions-fr.html#sous-titres'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu – Sous-titres"
},{
 categories: 'module9',
 content: "  Utilisations de l’expression « sous-titres » L’expression « sous-titres » peut être utilisée différemment dans différentes parties du monde. Aux fins du présent document : Les sous-titres (en anglais, « captions ») présentent les dialogues parlés et d’autres renseignements audio nécessaires pour comprendre un contenu, y compris les effets sonores, la musique, les rires, l’identification de la personne qui parle et son emplacement. Ils sont habituellement affichés dans la même langue que l’audio parlé, mais des traductions peuvent être offertes dans des pistes de sous-titrage distinctes. Dans l’autre utilisation de cette expression, les sous-titres (en anglais, « subtitles ») communiquent uniquement les dialogues parlés, à l’intention des personnes non sourdes qui ont de la difficulté à comprendre la langue de la vidéo. Il s’agit souvent d’une traduction vers une langue différente. Ces deux utilisations de l’expression sous-titres sont invoquées par un élément (kind='captions' ou kind='subtitles') pointant vers un fichier texte chronométré (voir Utilisation de l’élément ci-dessous). ",
 href: '../module9/captions-fr.html#caps-subtitles'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Utilisations de l’expression « sous-titres »"
},{
 categories: 'module9',
 content: "  Avez-vous besoin de sous-titres? Pour les contenus pré-enregistrés : Les contenus vidéo avec audio nécessitent des sous-titres. Les contenus vidéo seulement ne comportent aucune information audio nécessitant des sous-titres (sans objet). Les contenus audio seulement ne nécessitent pas de sous-titres; ils nécessitent cependant une transcription. Pour les diffusions en direct sur le Web : Les contenus vidéo avec audio nécessitent des sous-titres. Les contenus audio seulement nécessitent des sous-titres ou une transcription. ",
 href: '../module9/captions-fr.html#avez-vous-besoin-de-sous-titres'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Avez-vous besoin de sous-titres?"
},{
 categories: 'module9',
 content: "  Que comprennent les sous-titres? Pour déterminer les éléments à inclure dans les sous-titres, consultez la page Transcription de l’audio en texte. ",
 href: '../module9/captions-fr.html#que-comprennent-les-sous-titres'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Que comprennent les sous-titres?"
},{
 categories: 'module9',
 content: "  Sous-titres en direct La traduction en temps réel des communications (CART) est la transcription en directe mot pour mot de la parole au texte, qui permet aux auditeurs de lire ce qui se dit au cours d’une discussion de groupe. Un rédacteur CART professionnel transcrit les mots parlés en anglais ou en français à l’aide d’une sténotype, d’un ordinateur portable et d’un logiciel de communication en temps réel. Le texte est ensuite affiché sur un site Web sécurisé ou un ordinateur portable, ou projeté sur un écran de grande taille. Les services CART sont habituellement fournis sur place lors de formations en direct, de réunions, d’événements, de congrès et de conférences. Toutefois, les services CART peuvent également être fournis à distance pour des événements comme une webdiffusion. Lorsque des services CART sont fournis à distance, le rédacteur CART assiste à la réunion à partir d’un lieu externe pour écouter et transcrire les mots. Le texte est transmis en continu vers un site Web sécurisé pour consultation. Plusieurs utilisateurs peuvent se connecter simultanément au site Web sécurisé pour afficher le texte sur leur ordinateur, tablette ou appareil mobile. Le sous-titrage en direct peut être sauvegardé et modifié pour être utilisé comme fichier de sous-titrage pour tout enregistrement vidéo publié par la suite. Des sous-titres automatisés en direct sont également disponibles dans les réunions Microsoft Teams. MS Teams peut détecter ce qui se dit pendant une réunion et afficher des sous-titres automatisés en temps réel. Pour utiliser les sous-titres en direct pendant une réunion, accédez aux commandes de la réunion et cliquez sur le bouton More options… > Turn on live captions. Voir la section Sous-titres automatisés ci-dessous. Voir le section Sous-titres automatisés. L'exemple commence L'exemple finit Capture d'écran MS Teams de l'Université de l'Iowa, Closed Captioning in Microsoft Teams. (disponible en anglais seulement) Mauvais exemple : Annonce en direct sans sous-titres Cet exemple illustre les désagréments liés aux annonces en direct et aux difficultés que cela pourrait causer aux personnes ayant de la difficulté à entendre. Cette vidéo d’annonce de vol en direct ne comporte pas de sous-titres pour donner aux personnes sourdes des renseignements équivalents. L'exemple commence L'exemple finit ",
 href: '../module9/captions-fr.html#sous-titres-en-direct'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Sous-titres en direct"
},{
 categories: 'module9',
 content: "  Sous-titres automatisés Recherche sur l'exactitude du sous-titrage automatisé text-to-speech contemporain fait en 2021 (en anglais seulement) a conclu que le taux était supérieur à 90 %, Google et Microsoft affichant des taux de précision supérieurs à 95 %. Si les « sous-titres » n’incluent pas tous les dialogues (mot à mot ou essentiellement) ni tous les sons importants, alors ce ne sont pas de véritables sous-titres. Néanmoins, les sous-titres automatisés peuvent servir de point de départ pour élaborer des sous-titres et des transcriptions exacts. ",
 href: '../module9/captions-fr.html#auto-captions'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Sous-titres automatisés"
},{
 categories: 'module9',
 content: "  Formats de fichier de sous-titrage Il existe de nombreux formats de fichiers de sous-titrage. Ces trois formats sont pris en charge par le lecteur multimédia de la BOEW et le lecteur vidéo MS Stream : Données HTML5 : solution personnalisée utilisée par le lecteur multimédia de la BOEW qui combine sous-titres et transcription descriptive dans une seule source. Bon exemple : Sous-titres Voir ci-dessus. TTML : pris en charge par le lecteur multimédia de la BOEW. Allez voir Bon exemple: Sous-titres à l'aide de TTML, ci-dessous. WebVTT : pris en charge par Microsoft Stream (le seul format qu’il prend en charge). WebVTT est également le format standard recommandé par la spécification HTML5. Allez voir Bon exemple: Format de fichier de sous-titres WebVTT, ci-dessous. Vous pouvez utiliser ce convertisseur de sous-titres en ligne gratuit pour convertir différents formats de fichiers de sous-titres. Les formats de fichier de base nécessitent seulement des codes temporels. Ces formats de fichier évolués vous permettent de mieux maîtriser le style et le positionnement de vos sous-titres. Formats de fichier de base Les types de fichiers de base n’ont pas de style. Formats de fichier de base Nom du format Extension de fichier Renseignements supplémentaires SubRip .srt Seules les versions de base de ces fichiers sont prises en charge. Aucune information sur le style (balisage) n’est reconnue. Le fichier doit être conforme à la norme UTF-8. SubViewer .sbv or .sub Seules les versions de base de ces fichiers sont prises en charge. Aucune information sur le style (balisage) n’est reconnue. Le fichier doit être conforme à la norme UTF-8. MPsub (MPlayer subtitle) .mpsub Le paramètre 'FORMAT=' est pris en charge. LRC .lrc Aucune information sur le style (balisage) n’est reconnue. Formats de fichier avancés Utilisez ces formats de fichier si vous voulez avoir plus de contrôle sur le style (balisage) ou le positionnement de vos sous-titres. Formats de fichier avancés Nom du format Extension de fichier Renseignements supplémentaires SAMI (Synchronized Accessible Media Interchange) .smi or .sami Seuls les codes temporels, le texte et le balisage simple (, , , et l’attributcolor= dans un élément ) sont pris en charge. Le positionnement n’est pas pris en charge. RealText .rt Seuls les codes temporels, le texte et le balisage simple (, , , et l’attributcolor= dans un élément ) sont pris en charge. Le positionnement n’est pas pris en charge. WebVTT .vtt Dans une mise en œuvre initiale, le positionnement est pris en charge, mais le style est limité à , , puisque les noms de classes CSS ne sont pas encore normalisés. TTML (Timed-Text Markup Language) .ttml Dans une mise en œuvre partielle. Extensions SMPTE-TT prises en charge pour les caractéristiques CEA-608. Le format de fichier iTunes Timed Text (iTT) est pris en charge; iTT est un sous-ensemble du langage TTML, version 1.0. Le style et le positionnement sontpris en charge. DFXP (Distribution Format Exchange Profile) .ttml or .dfxp Ces types de fichiers sont interprétés comme des fichiers TTML. Bon exemple : Format de fichier de sous-titres WebVTT L'exemple commence WEBVTT 00:02.500 --> 00:06.340 Bonjour, je m'appelle Eric, et je suis un employé de Service Canada. 00:06.340 --> 00:08.210 Vous avez peut-être entendu le vieux dicton selon lequel, 00:08.21 --> 00:10.040 quand vous êtes au chômage, trouver un emploi est votre priorité 00:10.040 --> 00:11.75 à plein temps. L'exemple finit Bon exemple : Format de fichier de sous-titrage TTML Début du code Bonjour, je m'appelle Eric, et je suis un employé de Service Canada. Vous avez peut-être entendu le vieux dicton selon lequel, quand vous êtes au chômage, trouver un emploi est votre priorité à plein temps. […] ",
 href: '../module9/captions-fr.html#formats-de-fichier-de-sous-titrage'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Formats de fichier de sous-titrage"
},{
 categories: 'module9',
 content: "  Sous-titres pour vidéo préenregistrée avec audio Bon exemple : Sous-titres en utilisant le HTML en ligne Le lecteur multimédia de la BOEW peut intégrer des sous-titres et des transcriptions descriptives dans le code HTML en ligne, dans l’élément: les éléments une transcription descriptive utilisent l’attribut class='wet-boew-vd' l’attribut. les éléments contenant des sous-titres utilisent class='wd-tmtxt', data-begin and data-dur les attributs. JavaScript identifie les sous-titres par ces attributs et affiche les sous-titres de façon dynamique dans un directement sous la vidéo. Le lecteur multimédia de la BOEW est décrit ci-dessous dans la page accessibilité du lecteur multimédia. Trouver un emploi - Transcription et Sous-Titres HTML5 (La vidéo débute par une image de l'animatrice s'avançant vers la caméra. Un trait rouge suit le texte « Trouver un emploi ».) Bonjour, je m'appelle Amélie et je travaille à Service Canada. (Coupure et plan moyen de l'animatrice. DESSIN AU TRAIT : Le bonhomme-allumettes apparaît à l'écran.) Vous savez que trouver un emploi est un travail à temps plein qui exige beaucoup d'efforts (DESSIN AU TRAIT : Le bonhomme-allumettes penche la tête en signe de découragement, mais la relève ensuite avec énergie en regardant l'écran d'ordinateur qui apparaît à l'écran.) mais il ne faut pas vous laisser décourager par l'ampleur de la tâche. Nous avons mis à votre disposition de nombreux outils et programmes en ligne pour vous aider à trouver un emploi. (Gros plan de l'animatrice. Une page du site Guichet emplois apparaît à l'écran. Les mots « Guichet emplois » apparaissent à l'intérieur d'une bulle.) Peu importe l'emploi que vous cherchez, vous trouverez sur Internet de nombreux sites Web où les employeurs affichent leurs postes vacants. (DESSIN AU TRAIT : Le bonhomme-allumettes se place de profil. Les mots « mis à jour quotidiennement » et « 48 heures » apparaissent à l'intérieur d'une bulle sous « Guichet emplois ».) L'un de ces sites, Guichet emplois, est mis à jour quotidiennement. Vous y trouverez des occasions d'emploi partout au pays. Et puisque le site est mis à jour quotidiennement, n'oubliez pas d'y jeter un coup d'oeil régulièrement. Vous y trouverez les postes affichés au cours des dernières 48 heures. (Les mots « faites valoir vos compétences » et « liste des emplois correspondant à vos critères de recherche par courriel » apparaissent à l'intérieur d'une bulle sous « Guichet emplois ».) Guichet emplois vous permet également de faire valoir vos compétences, et de vous inscrire pour recevoir par courriel une liste des emplois qui correspondent à vos critères de recherche. (Gros plan de l'animatrice. Une photo de l'édifice du Parlement apparaît en arrière-plan. DESSIN AU TRAIT : L'adresse « emplois.gc.ca » apparaît sur une pancarte plantée dans la pelouse devant le Parlement, et le bonhomme-allumettes pointe vers la pancarte.) Si vous voulez travailler a gouvernement du Canada, consultez le site emplois.gc.ca, qui répertorie les postes ouverts au public dans l'ensemble de la fonction publique fédérale. Notez que certains ministères, comme l'Agence du revenu du Canada et Parcs Canada, affichent aussi les postes vacants sur leur propre site. (Plan moyen de l'animatrice. DESSIN AU TRAIT : Le bonhomme-allumettes pointe vers une page du site Guichet emplois où les mots « Nom d'utilisateur » et « Mot de passe » sont mis en évidence.) Vous aurez fort probablement à préparer un curriculum vitae et une lettre de présentation lorsque vous ferez une demande d'emploi, et bien entendu, vous voudrez faire bonne impression. (Les mots « Concepteur de CV » apparaissent à l'intérieur d'une bulle.) Nous pouvons vous aider! Grâce à l'outil Concepteur de CV, que vous trouverez sur le site Guichet emplois, vous pourrez obtenir des conseils, choisir un modèle et créer un curriculum vitae d'allure professionnelle. (Gros plan de l'animatrice. Une page du site Guichet emplois apparaît à l'écran. Les mots « Navigation carrière » apparaissent à l'intérieur d'une bulle.) Si vous ne savez pas quel type d'emploi vous intéresse, consultez l'outil Navigation carrière, qui pourra vous aider à choisir une carrière qui vous convient. (DESSIN AU TRAIT : Le bonhomme-allumettes parle à un autre bonhomme-allumettes assis derrière un bureau surmonté d'un panneau où figurent les mots « orientation professionnelle ».) Aussi, le gouvernement de votre province ou territoire offre sans doute un service d'orientation professionnelle qui pourrait vous aider dans vos démarches. (Gros plan de l'animatrice. DESSIN AU TRAIT : Le logo de Service Canada apparaît et le bonhomme-allumettes fait un salut.) À Service Canada, nous sommes au service des gens. (L'écran devient noir.) Voir le HTML Début du code Looking for a Job - HTML5 Transcript/Sous-titres (Animated pen draws a red line that leads into the text Looking for A Job) (Cut to a medium shot of the Host. LINE DRAWING GRAPHIC: Stick person appears and waves.) Hi, my name is Eric, and I'm a Service Canada employee. You may have heard the old saying that, when you're out of work, finding a job is your full-time occupation. […] Fin du code Bon exemple : Sous-titres avec TTML En plus des sous-titres HTML5 en ligne, le lecteur multimédia de la BOEW prend en charge les formats de fichier de sous-titrage en langage de balisage texte chronométré (TTML – une variation du langage XML). Utilisez l’élément pour préciser les pistes de texte pour les éléments ou . L'équipement de protection individuelle contre l'exposition au virus Ebola : risque élevé – vidéo Avec vidéo description Transcription (ouvre dans un nouvel onglet) Voir le HTML Début du code Fin du code Voir le TTML Fichier complet: ppe-high-risk-epi-risque-eleve-eng.xml Début du code <style id='defaultSpeaker' tts:fontSize='12px' tts:fontFamily='SansSerif' tts:fontWeight='normal' tts:fontStyle='normal' tts:textDecoration='none' tts:color='white' tts:backgroundColor='black' tts:textAlign='left'/> <style id='defaultCaption' tts:fontSize='12px' tts:fontFamily='SansSerif' tts:fontWeight='normal' tts:fontStyle='normal' tts:textDecoration='none' tts:color='white' tts:backgroundColor='black' tts:textAlign='left'/> Use of Personal Protective Equipment when Caring for a Person Under Investigation for Ebola Virus Disease in a First Nations or other Community Health Facility. This training video is based on advice from the Public Health Agency of Canada's Infection Prevention and Control Expert Working Group. […] Fin du code Source: Health Canada video, Personal protective equipment against potential Ebola virus exposure: higher risk Bon exemple : Sous-titres pour une vidéo préenregistrée avec l'audio de YouTube Le lecteur YouTube offre un soutien intégré à l’accessibilité pour les utilisateurs sourds ou malentendants. La majorité des vidéos de la galerie de vidéos liées à la santé du site Canada.ca utilisent YouTube comme source de la vidéo. Des sous-titres peuvent être ajoutés et modifiés directement sur la plateforme YouTube. Utilisez l’élément pour préciser la source pour la vidéo YouTube. HTML Début du code Fin du code Source:Vaccins contre la COVID-19 (5 à 11 ans) ",
 href: '../module9/captions-fr.html#pre-recordedvideo'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Sous-titres pour vidéo préenregistrée avec audio"
},{
 categories: 'module9',
 content: "  Utilisation de l’élément track L’élément vous permet de spécifier des pistes de texte chronométrées pour un élément ou . HTML Début du code <track default kind='captions' srclang='en' src='/videos/tracks/compliance.vtt'/> Fin du code Attributs default Indique que les pistes doivent être activées, à moins que l’utilisateur ait indiqué dans ses préférences qu’une autre piste est plus appropriée. kind Indique comment la piste textuelle sera utilisée. Valeurs possibles : subtitles Traduction textuelle du contenu. captions Version textuelle du contenu audio pour les utilisateurs sourds. descriptions Description textuelle du contenu visuel pour les utilisateurs aveugles. chapters Utilisé lorsque l’utilisateur navigue dans la ressource média. metadata Pistes utilisées par des scripts. Non visibles par les utilisateurs. label Indique le titre de la piste de texte. Le titre est lisible par l’utilisateur et répertorié par le navigateur avec toutes les pistes de textes disponibles. src Indique l’adresse du fichier texte chronométré. srclang Indique la langue des données de la piste de texte sous forme d’une étiquette de langue BCP 47 valide, p. ex. : Anglais : en Français :: fr ",
 href: '../module9/captions-fr.html#track'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Utilisation de l’élément track"
},{
 categories: 'module9',
 content: "  Ajout de sous-titres sur la plateforme YouTube Vous pouvez ajouter des sous-titres à des vidéos YouTube en téléversant un fichier de sous-titrage : Ouvrez une session dans YouTube Studio. Dans le menu de gauche, sélectionnez Subtitles. Cliquez sur la vidéo que vous souhaitez modifier. Cliquez sur Add Language et sélectionnez votre langue. À la section Sous-titres, cliquez sur Add. Cliquez sur Upload file. Sélectionnez l’option With timing ou Without timing, puis cliquez sur Continue. Choisissez un fichier à téléverser. Cliquez sur Save. YouTube prend en charge de nombreux formats de sous-titres et de sous-titres codés, notamment SRT, SBV, SUB, MPSUB, LRC, CAP, SAMT, RT, VTT, TTML et DFXP. YouTube vous permet également de synchroniser automatiquement des transcriptions, de saisir manuellement des sous-titres et de créer automatiquement des sous-titres à l’aide de la technologie de reconnaissance vocale. ",
 href: '../module9/captions-fr.html#ajout-de-sous-titres-sur-la-plateforme-YouTube'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ajout de sous-titres sur la plateforme YouTube"
},{
 categories: 'module9',
 content: "  Ajout de sous-titres sur la plateforme Microsoft Stream Vous pouvez ajouter des sous-titres aux vidéos MS Stream en téléversant un fichier de sous-titrage : Dans Stream, trouvez la vidéo que vous voulez modifier. Cliquez sur l’icône du crayon pour Update video details Dans le panneauOptions, cliquez sur Upload a caption file. Seul le format de fichier VTT est pris en charge. ",
 href: '../module9/captions-fr.html#ajout-de-sous-titres-sur-la-plateforme-Microsoft-Stream'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ajout de sous-titres sur la plateforme Microsoft Stream"
},{
 categories: 'module9',
 content: "  Sous-titres de présentation et de style Les exigences relatives aux sous-titres de présentation et de style sont principalement des pratiques exemplaires de la communauté plutôt que des critères de succès ou techniques des directives WCAG. Seul le rapport de contraste de 3:1 est requis pour satisfaire aux critères de succès des directives WCAG. Voici une brève liste des exigences. Le site Légende du sous-titrage offre davantage des pratiques exemplaires pour les sous-titres de présentation et de style. Les sous-titres sont synchronisés avec l’audio. Les sous-titres sont affichés en lettres minuscules et majuscules. Les sous-titres ne comportent pas plus de trois lignes à la fois. Placez une nouvelle phrase sur une nouvelle ligne. Le nombre maximal de caractères par ligne est de 32 caractères. Insérez les sauts de ligne des sous-titres à des points logiques plutôt qu’au milieu d’une phrase. Les couleurs par défaut sont le texte blanc sur fond noir. Le rapport de contraste par défaut entre la couleur de police et la couleur de fond est d’au moins 3:1 (taille de police d’au moins 18 points). La taille de la police par défaut est d’au moins 22 points. Placez les sous-titres de manière à ne pas masquer le texte à l’écran, le visage des gens et d’autres informations visuelles importantes. Assurez-vous que l’intervalle entre les sous-titres est d’au moins 1,5 seconde. Supprimez les sous-titres des longs intervalles silencieux. Les sous-titres ont une durée maximale de 6 secondes. ",
 href: '../module9/captions-fr.html#styling-captions'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Sous-titres de présentation et de style"
},{
 categories: 'module9',
 content: "  Personnalisation des sous-titres Les utilisateurs peuvent personnaliser l’apparence visuelle des sous-titres dans le système d’exploitation. Certains lecteurs multimédias prennent également en charge la personnalisation. Bon exemple : Style de sous-titres dans Windows L'exemple commence L'exemple finit Bon exemple : Style des sous-titres dans MacOS L'exemple commence L'exemple finit ",
 href: '../module9/captions-fr.html#personnalisation-des-sous-titres'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Personnalisation des sous-titres"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.2.2 : Sous-titres (pré-enregistrés) 1.2.4 : Sous-titres (en direct) Techniques G93 : Fournir des sous-titres ouverts (toujours visibles) (en anglais) G87 : Fournir des sous-titres fermés (à la demande) (en anglais) H95 : Utiliser l’élément track pour fournir des sous-titres (en anglais) Échecs F8 : Échec du critère de succès 1.2.2 consistant à omettre certains dialogues ou effets sonores importants dans les sous-titres (en anglais) F75 : Échec du critère de succès 1.2.2 consistant à fournir un média synchronisé sans sous-titres quand ce média présente plus d'information que celle présente sur la page (en anglais) ",
 href: '../module9/captions-fr.html#captions-wcag'  ,
 title: "Sous-titres - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Aperçu: Description de l’information visuelle Une piste audio ou une transcription descriptive décrit l’information visuelle nécessaire pour comprendre un contenu vidéo, y compris les actions, les personnages, les changements de scène et le texte à l’écran qui sont importants mais qui ne sont pas décrits ou parlés dans la piste audio principale. Par exemple, « David passe une enveloppe à Éric. Éric l’ouvre et fronce les sourcils. » La description de l’information visuelle aide les utilisateurs aveugles et les autres utilisateurs qui ne peuvent pas visualiser la vidéo adéquatement. ",
 href: '../module9/description-visual-fr.html#description-of-visual-information'  ,
 title: "Description de l’information visuelle - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu: Description de l’information visuelle"
},{
 categories: 'module9',
 content: "  Avez-vous besoin d’une description de la vidéo? Audio description Pour les contenus pré-enregistrés : Les contenus vidéo avec de l’audio nécessitent une audio description. Les contenus vidéo seulement nécessitent une audio description ou une transcription descriptive. Pour les diffusions en direct sur le Web : Les contenus vidéo avec de l’audio ne nécessitent pas d’audio description. Les contenus vidéo seulement ne nécessitent pas d’audio description. Remarque : Il n’est pas nécessaire d’inclure une audio description si la vidéo est conçue avec des descriptions intégrées (voir les méthodes ci-dessous). Transcription descriptive Pour les contenus pré-enregistrés : Les contenus vidéo avec de l’audio nécessitent une transcription descriptive. Les contenus vidéo seulement nécessitent une transcription descriptive ou une audio description. Les contenus audios seulement nécessitent une transcription de base. Pour les diffusions en direct sur le Web : Les transcriptions pour le contenu vidéo avec de l’ audio ne s’appliquent pas aux vidéos en direct (sous-titrage en direct requis). Les contenus vidéo seulement peuvent comporter une transcription descriptive (facultatif). Les contenus audios seulement exigent soit des sous-titres, soit une transcription de base. ",
 href: '../module9/description-visual-fr.html#avez-vous-besoin-desc-video'  ,
 title: "Description de l’information visuelle - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Avez-vous besoin d’une description de la vidéo?"
},{
 categories: 'module9',
 content: "  Quatre méthodes pour inclure une audio description Par ordre de préférence, voici les quatre méthodes permettant d’inclure une audio description : Description intégrée Les nouvelles vidéos sont écrites de manière à ce que la personne qui parle décrive l’information visuelle. Aucune description distincte n’est requise. Lorsque vous rédigez le script, assurez-vous que toutes les informations visuelles pertinentes sont incluses. Par exemple, une personne présente un graphique qui précise de l’information essentielle : « Le graphique compare l’activité physique avant et après la COVID-19 pour trois groupes d’âge. Les jeunes âgés de 12 à 17 ans ont déclaré faire moins d’activité physique; les adultes âgés de 18 à 64 ans ont déclaré faire la même quantité d’activité physique; les adultes âgés de 65 ans et plus ont déclaré faire plus d’activité physique. » Fichier texte chronométré Si le lecteur multimédia prend en charge les descriptions extraites d’un fichier texte, ajoutez un fichier texte chronométré. La description doit être insérée dans les intervalles du contenu audio principal, ou le lecteur doit proposer une fonctionnalité permettant de faire une pause pendant la description. Rédigez les descriptions et ajoutez des estampilles temporelles en respectant le format de fichier utilisé par le lecteur (voir l’exemple de format VTT ci-dessous). Fichier audio distinct Si le lecteur multimédia prend en charge une piste audio distincte pour la description et s’il y a suffisamment d’intervalles libres dans la piste audio principale pour la description, ajoutez la description dans un fichier audio distinct. Assurez-vous que les descriptions sont jouées dans les intervalles audio libres de la vidéo principale. Ajoutez un fichier de sous-titrage pour la description. Vidéo description distincte Sinon, ajoutez une vidéo description distincte. Rédigez et enregistrez les descriptions, puis créer un nouveau fichier audio en combinant la piste audio d’origine avec le nouveau fichier d’audio description. S’il est possible d’intégrer les descriptions dans les intervalles libres et si votre lecteur multimédia utilise des pistes vidéo et audio distinctes, vous avez terminé. Si votre lecteur utilise une piste vidéo unique qui intègre l’audio, générez une nouvelle vidéo en y intégrant l’audio description que vous venez de créer. S’il n’est pas possible d’intégrer les descriptions dans les intervalles libres : Si vous pouvez prolonger les scènes avec des séquences supplémentaires du tournage original, redécoupez la vidéo pour remplir l’espace visuel là où vous avez besoin de temps pour la description. Si vous ne pouvez pas prolonger les scènes, laissez une image statique dans la vidéo pendant que la description est affichée dans l’audio (« vidéo description étendue »). Bon exemple : audio description avec vidéo description distincte (scène prolongée) The vidéos sur les perspectives de l’utilisateur IAW-W3C proposent des vidéos audiodescriptives de rechange comportant des séquences supplémentaires dans lesquelles on peut intégrer les audio descriptions. Bon exemple : audio description étendue avec vidéo description distincte (image statique) Cet exemple comporte deux versions, l’original d’une durée de 1:53 et l’audio description d’une durée de 4:29. La version plus longue affiche une image statique pour laisser suffisamment de temps pour l’audio description des éléments visuels. Maladie de Lyme vidéo: Conseils pour éloigner les tiques de votre maison Bon exemple : Lien vers un fichier VTT à partir de l’élément Utilisez l’attributs kind='descriptions' et src de l’élément pour désigner un fichier de descriptions à charger avec la vidéo. HTML Début du code Fin du code Bon exemple : Format VTT pour l’audio description L'exemple commence WEBVTT 00:00:03.000 --> 00:00:06.880 Un homme assis sur un banc de parc sort des friandises pour son chien. 00:00:16.160 --> 00:00:19.680 Une femme promenant son chien sourit à l’homme et s’arrête devant le banc. 00:00:19.680 --> 00:00:22.040 Elle sort ses propres friandises pour chien. 00:00:25.780 --> 00:00:28.120 L’homme consulte son téléphone et le montre à la femme. ",
 href: '../module9/description-visual-fr.html#quatre-methodes-pour-inclure-une-audio-description'  ,
 title: "Description de l’information visuelle - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Quatre méthodes pour inclure une audio description"
},{
 categories: 'module9',
 content: "  Rédaction des descriptions De nombreuses organisations choisissent d’externaliser la rédaction des descriptions. Si vous préférez le faire vous-même, gardez ces conseils à l’esprit : Décrivez les éléments visuels importants pour comprendre ce que la vidéo communique. Décrivez les éléments objectivement. Évitez d’interpréter, de censurer ou de commenter. Écrivez au temps présent en utilisant une voix active et un style narratif à la troisième personne. Incluez l’ensemble du texte, p. ex. le texte du titre au début, les liens et adresses courriel, le nom de la personne qui parle et le texte affiché dans une présentation. Les transcriptions peuvent être soit statiques, soit interactives avec estampilles temporelles, tout dépendant de la conception : Contrairement aux audio descriptions, il n’est pas nécessaire pour les transcriptions statiques d’intégrer les descriptions dans les intervalles libres de la piste audio. Les descriptions statiques peuvent utiliser autant de mots que nécessaires pour faciliter la compréhension. Les transcriptions interactives utilisent des estampilles temporelles dans les sous-titres et les descriptions des fichiers texte chronométrés pour intégrer les descriptions dans les intervalles libres de la piste audio dans la vidéo principale. Ces descriptions sont limitées par le temps disponible et contiennent moins de détails que les descriptions dans les transcriptions statiques. Autrement, le lecteur multimédia pourrait offrir la possibilité de mettre la vidéo en pause pendant que les descriptions sont affichées, auquel cas il n’est pas nécessaire que les descriptions soient intégrées aux intervalles libres de la piste audio dans la vidéo principale. Voici une brève liste des exigences. Le site Web Descriptions Key (en Anglais seulement) propose d’autres pratiques exemplaires pour la rédaction des descriptions. ",
 href: '../module9/description-visual-fr.html#writing-descriptions'  ,
 title: "Description de l’information visuelle - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Rédaction des descriptions"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.2.1 : Contenu seulement audio ou vidéo (pré-enregistré) 1.2.3 : Audio-description ou version de remplacement pour un média temporel (pré-enregistré) 1.2.5 : Audio-description (pré-enregistrée) 1.2.7 : Audio-description étendue (pré-enregistrée) Techniques G78 : Fournir une seconde piste audio sélectionnable par l'utilisateur qui inclut une audio-description (en anglais) H96 : Utiliser l’élément track pour fournir des descriptions auditives (en anglais) ",
 href: '../module9/description-visual-fr.html#description-visual-wcag'  ,
 title: "Description de l’information visuelle - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Utilisation de contenu clignotant Des lumières qui clignotent rapidement ou des effets stroboscopiques dans la vidéo, les graphiques ou l’animation peuvent causer des crises photo épileptiques chez les utilisateurs atteints d’épilepsie photosensible. Ces crises, aussi appelées convulsions, sont des perturbations électriques soudaines et non contrôlées du cerveau qui peuvent causer des préjudices physiques. Les lumières clignotantes peuvent déclencher une crise si: Les lumières clignotent plus de 3 fois par seconde; Le contenu clignotant est suffisamment large à l’écran. Les Directives WCAG décrivent une formule complexe ici, mais la règle générale est qu’un contenu clignotant dépassant 21 824 pixels carrés pose problème. En tant que carré, cela correspond à 148 pixels par 148 pixels : Le contenu clignotant présente un contraste élevé. Les Directives WCAG décrivent une autre formule complexe ici, mais il est recommandé d’évaluer le contenu clignotant à l’aide d’un outil comme le Photosensitive Epilepsy Analysis Tool (PEAT) (en Anglais seulement). Comme les utilisateurs peuvent agrandir la page et ainsi agrandir la zone clignotante, il est plus sécuritaire de limiter le clignotement de n’importe quelle taille de contenu à un maximum de trois clignotements par période de 1 seconde (Critère de succès 2.3.2 : Trois clignotements, niveau AAA). Si vous ne pouvez pas modifier la source du contenu clignotant, ne l’utilisez pas. Permettre à l’utilisateur de désactiver le contenu clignotant n’est pas une option viable, car une crise épileptique peut se produire avant que l’utilisateur ait la possibilité d’agir. ",
 href: '../module9/flashing-content-fr.html#designing-with-flashing-content'  ,
 title: "Contenu clignotant - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Utilisation de contenu clignotant"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.3.1 : Pas plus de trois flashs ou sous le seuil critique 2.3.2 : Trois flashs (Niveau AAA) Techniques G19 : S'assurer qu'aucun composant du contenu ne flashe plus de 3 fois dans une même période d'une seconde (en anglais) G176 : Garder la zone de flash suffisamment petite (en anglais) G15 : Utiliser un outil pour s'assurer que le contenu ne viole pas le seuil de flash générique ou le seuil de flash rouge (en anglais) ",
 href: '../module9/flashing-content-fr.html#flashing-content-wcag'  ,
 title: "Contenu clignotant - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Quatre méthodes L’accessibilité audio et vidéo repose sur quatre méthodes : Sous-titres Les sous-titres sont une version texte des paroles et d’autres éléments audio nécessaires pour comprendre un contenu. Ils sont synchronisés avec l’audio et généralement affichés dans un lecteur multimédia lorsque l’utilisateur active cette fonctionnalité. Les sous-titres aident les utilisateurs sourds, les utilisateurs malentendants et les utilisateurs qui éprouvent des difficultés à traiter l’information auditive. Transcriptions Les transcriptions de base sont une version texte de l’information audio parlé et non parlé nécessaire pour comprendre un contenu. Les « transcriptions descriptives » comprennent également une description textuelle de l’information visuelle nécessaire pour comprendre un contenu. Les transcriptions de base aident les utilisateurs sourds et les utilisateurs qui éprouvent des difficultés à traiter l’information auditive. Les transcriptions descriptives aident les utilisateurs sourds-aveugles et les utilisateurs qui ne peuvent pas se concentrer sur l’information auditive ou visuelle et la comprendre lorsqu’il y a un changement de l’information visuelle. Description de l’information visuelle Une piste audio ou une transcription descriptive décrit l’information visuelle nécessaire pour comprendre le contenu vidéo (texte affiché dans la vidéo, expressions faciales, actions, etc.). La description de l’information visuelle aide les utilisateurs aveugles et les autres utilisateurs qui ne peuvent pas visualiser la vidéo adéquatement. Langue des signes La langue des signes utilise les mouvements des mains et des bras, les expressions faciales et les positions du corps pour transmettre un sens. La langue des signes aide les utilisateurs sourds. Certaines personnes sourdes préfèrent la langue des signes au texte. EDSC dispose d’une équipe, les Services créatifs, qui offre ces services. ",
 href: '../module9/introduction-fr.html#methods'  ,
 title: "Introduction - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Quatre méthodes"
},{
 categories: 'module9',
 content: "  Préoccupations supplémentaires Au-delà de ces quatre méthodes, il existe des préoccupations supplémentaires concernant l’audio et la vidéo : Prévention des crises épileptiques La suppression des effets visuels clignotants dans les vidéos peut prévenir les crises épileptiques chez certains utilisateurs. Prévention des étourdissements La suppression des mouvements excessifs dans les vidéos ou le contenu animé peut prévenir les étourdissements, les nausées ou la désorientation chez les utilisateurs présentant des troubles vestibulaires. Prévention des interférences entre la lecture automatique des pistes audio et les lecteurs d’écran La suppression de la fonctionnalité de lecture automatique des lecteurs multimédias permet d’éviter le chaos pour les utilisateurs de lecteurs d’écran. Le son de la lecture automatique est superposé au son du lecteur d’écran, ce qui rend difficile de localiser et d’arrêter le lecteur multimédia. Utilisation d’un lecteur multimédia accessible Il importe de choisir un lecteur multimédia accessible par le clavier qui communique le nom, le rôle et les valeurs de chaque commande. ",
 href: '../module9/introduction-fr.html#concerns'  ,
 title: "Introduction - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Préoccupations supplémentaires"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.2.1 : Contenu seulement audio ou vidéo (pré-enregistré) 1.2.2 : Sous-titres (pré-enregistrés) 1.2.3 : Audio-description ou version de remplacement pour un média temporel (pré-enregistré) 1.2.4 : Sous-titres (en direct) 1.2.5 : Audio-description (pré-enregistrée) 1.2.7 : Audio-description étendue (pré-enregistrée) 1.4.2 : Contrôle du son ",
 href: '../module9/introduction-fr.html#wcag'  ,
 title: "Introduction - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Aperçu: Accessibilité du lecteur multimédia Le lecteur multimédia doit être accessible par le clavier et compatible avec les lecteurs d’écran. Le lecteur multimédia HTML5 intégré par défaut aux navigateurs est insuffisant, car les navigateurs et les lecteurs d’écran prennent en charge différemment les fonctionnalités d’accessibilité. La solution consiste à adopter un lecteur multimédia qui a été conçu et testé pour assurer l’accessibilité. Les lecteurs multimédias accessibles comprennent Able Player, OzPlayer, Nomensa media player, PayPal media player, et YouTube. ",
 href: '../module9/media-player-fr.html#media-player-accessibility'  ,
 title: "Accessibilité du lecteur multimédia - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu: Accessibilité du lecteur multimédia"
},{
 categories: 'module9',
 content: "  Accessibilité par le clavier Toutes les commandes peuvent être focalisées au moyen de la touche de tabulation : Si vous utilisez un bouton HTML natif, la commande sera focalisée automatiquement. Si vous utilisez un bouton personnalisé (comportant un élément ou ), vous devez utiliser l’attribut tabindex='0'. Les commandes comportent un indicateur visible de focus du clavier. L’ordre des commandes activées par la touche de tabulation correspond à l’ordre visuel, de gauche à droite. Les commandes peuvent être activées par le clavier : Les commandes Lecture/Pause sont activées par la touche Entrée ou la barre d’espacement. Le contrôle du volume est activé par les touches fléchées, généralement la flèche haut et la flèche du bas. Les commandes Avancer/Reculer sont activées par les touches fléchées, généralement la flèche gauche et la flèche droite. D’autres commandes comme Sous-titres et Plein écran sont activées par la touche Entrée ou la barre d’espacement. Le texte, les commandes et les arrière-plans présentent un contraste suffisant entre les couleurs. ",
 href: '../module9/media-player-fr.html#keyboard-accessibility'  ,
 title: "Accessibilité du lecteur multimédia - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Accessibilité par le clavier"
},{
 categories: 'module9',
 content: "  Accessibilité des lecteurs d’écran Chaque commande présente aux lecteurs d’écran son nom, son rôle et sa valeur (si une ou plusieurs sont définies). Name: l’étiquette de la commande, p. ex. « Lecture », « Pause » ou « Volume ». Le nom est extrait soit du nœud enfant du bouton (Lecture) soit de l’attribut aria-label ou aria-labelledby. Role: la fonctionnalité contrôlée par la commande, p. ex. « Bouton », « Curseur ». Un élément natif déclare automatiquement son rôle comme « boutton ». Une commande personnalisée utilise généralement l’attribut role='button'. La commande de volume est une exception : elle utilise l’attribut role='slider'. Value: les attributs ou l’état actuel d’un élément, p. ex. « 50 % » pour le volume. Le curseur de volume comporte une valeur en pourcentage qui, une fois modifiée, est déclaré par les lecteurs d’écran. Consultez le Module 12 > Curseurs pour en savoir plus sur la façon de procéder. ",
 href: '../module9/media-player-fr.html#screen-reader-accessibility'  ,
 title: "Accessibilité du lecteur multimédia - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Accessibilité des lecteurs d’écran"
},{
 categories: 'module9',
 content: "  Prise en charge des sous-titres, des audiodescriptions et des transcriptions Le lecteur multimédia idéal offre la prise en charge intégrée des sous-titres, des audiodescriptions et des transcriptions. Certains lecteurs multimédias ajoutent toutes les fonctionnalités d’accessibilité à un menu accessible au moyen du bouton de sous-titrage codé. De préférence, le lecteur fournit un bouton distinct pour chaque fonction, avec son icône normalisée : icône pour sous-titres icône pour transcription icône pour audio description icône pour langue des signes Il existe des solutions de rechange si le lecteur multimédia ne permet pas l’intégration aisée des fonctions d’accessibilité : Ajoutez des sous-titres visibles gravés dans la vidéo plutôt que des sous-titres codés (l’utilisateur ne peut pas personnaliser leur apparence). Ajoutez la transcription directement ou par un lien à côté de la vidéo. Ajoutez l’audiodescription dans une vidéo distincte (plus longue) facilement accessible pour l’utilisateur. ",
 href: '../module9/media-player-fr.html#support-for-captions-audio-descriptions-transcripts'  ,
 title: "Accessibilité du lecteur multimédia - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Prise en charge des sous-titres, des audiodescriptions et des transcriptions"
},{
 categories: 'module9',
 content: "  Activation des fonctions de mise en pause, d’arrêt ou de masquage Les contenus qui se déplacent, clignotent ou défilent ou l’actualisation automatique de certaines informations peut interrompre les lecteurs d’écran. Ils peuvent également compliquer les choses pour certaines personnes qui doivent interagir avec le reste de la page Web, y compris les personnes ayant un faible niveau d’alphabétisation, des capacités de lecture moindres ou une déficience intellectuelle et les personnes ayant un trouble déficitaire de l’attention. Pour tous les contenus en mouvement, clignotant et défilant qui démarrent automatiquement, durent plus de cinq secondes et sont présentées en parallèle avec d’autres contenus, offrez à l’utilisateur un moyen de le mettre en pause, de l’arrêter ou de le masquer. Exemples : films, médias, animations, jeux en temps réel et afficheurs boursiers en défilement. Pour gérer l’actualisation automatique de différentes informations, offrez à l’utilisateur un moyen de mettre en pause, d’arrêter ou de masquer le contenu ou encore, offrez à l’utilisateur un moyen de contrôler la fréquence des actualisations. Exemples d’actualisation automatique d’informations : les informations météorologiques, les actualités ou les cours des actions. Un « bouton pause » accessible par clavier ou d’autres mécanismes peuvent être utilisés pour mettre le contenu en pause. Bon exemple Une page Web contient un lien intitulé « Comment faire un nœud » qui renvoie à une animation. Le texte qui précède immédiatement le lien informe l’utilisateur qu’en appuyant sur la barre d’espacement, il pourra mettre en pause et redémarrer l’animation. Un bouton « Pause » est visible dans le coin inférieur droit de l’animation. ",
 href: '../module9/pause-stop-hide-fr.html#enabling-pause-stop-hide'  ,
 title: "Mettre en pause, arrêter ou masquer - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Activation des fonctions de mise en pause, d’arrêt ou de masquage"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 2.2.2 : Mettre en pause, arrêter, masquer Techniques G4 : Permettre de mettre le contenu en pause et de redémarrer là où il a été mis en pause (en anglais) SCR33 : Utiliser un script pour faire défiler le contenu et fournir un mécanisme pour le mettre en pause (en anglais) G11 : Créer du contenu qui clignote moins de 5 secondes (en anglais) G187 : Utiliser une technologie pour inclure du contenu clignotant qui peut être arrêté via l'agent utilisateur (en anglais) G152 : Configurer les gifs animés pour qu'ils s'arrêtent de clignoter après n cycles (pendant 5 secondes) (en anglais) SCR22 : Utiliser des scripts pour contrôler le clignotement et l'arrêter en 5 secondes ou moins (en anglais) G186 : Placer un élément d'interface dans la page pour arrêter le contenu en mouvement, clignotant ou mis à jour automatiquement (en anglais) G191 : Fournir un lien, un bouton ou un autre mécanisme pour recharger la page sans aucun contenu clignotant (en anglais) Échecs F16 : Échec du critère de succès 2.2.2 consistant à inclure un contenu défilant lorsque le mouvement n'est pas essentiel à l'activité sans inclure aussi un mécanisme pour mettre ce contenu en pause et pour le redémarrer (en anglais) F47 : Échec du critère de succès 2.2.2 consistant à utiliser l'élément blink (en anglais) ",
 href: '../module9/pause-stop-hide-fr.html#pause-stop-hide-wcag'  ,
 title: "Mettre en pause, arrêter ou masquer - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Aperçu: Langue des signes La langue des signes utilise les mouvements des mains et des bras, les expressions faciales et les positions du corps pour transmettre un sens. La langue des signes aide les utilisateurs sourds. De nombreuses personnes sourdes préfèrent la langue des signes aux sous-titres et, dans certains cas, c’est leur langue première et celle qu’elles maîtrisent le mieux. L’inclusion de la langue des signes est facultative : elle n’est pas exigée par le gouvernement du Canada. Elle pourrait toutefois être utilisée dans le contexte d’interactions avec des citoyens canadiens, comme une consultation publique. Bien que ce ne soit pas nécessaire, son utilisation est recommandée, tout dépendant de votre public cible et de votre sujet. ",
 href: '../module9/sign-language-fr.html#langue-des-signes'  ,
 title: "Langue des signes - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu: Langue des signes"
},{
 categories: 'module9',
 content: "  Service de doublage dans la langue des signes offert par le Bureau de la traduction Le Bureau de la traduction du gouvernement du Canada offre un service de doublage dans la langue des signes, habituellement mais pas nécessairement pour les grands événements comme les conférences. Veuillez consulter ces deux documents et communiquer Bureau de la traduction (intranet) pour en savoir plus: Interprétation en langage gestuel et translittération orale (intranet) Pratiques exemplaires pour vos demandes d’interprétation en langage gestuel et de translittération orale (intranet) L'exemple commence Langue des signes dans les deux langues officielles ",
 href: '../module9/sign-language-fr.html#sign-language-via-the-translation-bureau'  ,
 title: "Langue des signes - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Service de doublage dans la langue des signes offert par le Bureau de la traduction"
},{
 categories: 'module9',
 content: "  Aperçu – Transcription de l’audio en texte La transcription de l’audio en texte pour les sous-titres et les transcriptions nécessite plus que la saisie de la parole. Les sous-titres et transcriptions de bonne qualité présentent des informations audios non vocales pertinentes. L’art, c’est de savoir ce qui est pertinent et comment le communiquer en texte, deux compétences qui bénéficient de l’expérience. Si vous avez le budget approprié, songez à confier la transcription à des professionnels. Sinon, vous pouvez le faire vous-même en suivant les directives sur cette page. ",
 href: '../module9/transcribing-audio-fr.html#audio-text'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu – Transcription de l’audio en texte"
},{
 categories: 'module9',
 content: "  Comment transcrire Vous avez deux options en matière de transcription: Tapez le contenu audio au fur et à mesure que vous l’écoutez, en arrêtant et redémarrant au besoin. Cette approche peut être moins fastidieuse avec un logiciel de transcription qui ralentit le contenu audio et facilite les pauses. Commencez par un fichier texte généré automatiquement et corrigez les erreurs. Vous trouverez plus de détails sur les options et les outils de transcription Comment obtenir ou faire des transcriptions sur le site. ",
 href: '../module9/transcribing-audio-fr.html#comment-transcrire'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Comment transcrire"
},{
 categories: 'module9',
 content: "  Ce qu’il faut transcrire Vous transcrivez tous les sons parlés et non parlés (rires, grognements, soupirs, cris, ratés d’un moteur de voiture, bruits de pas, grands cris au loin). Dans la plupart des cas, les pratiques exemplaires quant à ce qu’il faut inclure dans les sous-titres et les transcriptions sont identiques. Les différences sont notées dans les sections suivantes. Identifier les personnes qui parlent. Utiliser le nom complet la première fois et le nom simple par la suite. Si une personne qui parle n’est pas identifiée, utiliser Personne + numéro (p. ex. Personne 1, Personne 2) ou utiliser un rôle ou untitre sans numéro (p. ex. intervieweur, médecin). Inclure des renseignements pertinents sur ce qui est dit. Par exemple : (chuchotement) Alan : Toi en premier. (silencieusement) Ellen : Oh non! Placer les sons non parlés entre parenthèses, en italiques, en minuscules et avec un espace avant et après. Par exemple : ( bavardage au loin ) ( reniflage ) Lorsqu’une personne qui parle n’est pas présente à l’écran, mettre son discours en italique. Par exemple : Doug : Tu viens? Annie : Je descends dans une minute. Utiliser la ponctuation pour exprimer l’emphase. Pour une question empreinte d’incrédulité, utiliser un point d’interrogation et un point d’exclamation : Ted : Alors il faudrait tout recommencer ?! Pour les pauses dans la conversation, utiliser une ellipse : Sheila : Nous… Oui, on commence ce soir. Pour des paroles interrompues, utiliser un tiret au bout de la ligne. Tout texte qui suit l’interruption doit apparaître sur une nouvelle ligne : Ted : Nous n’arriverons jamais -- Utiliser des mots en majuscules pour indiquer un cri. Par exemple : Ellen : ATTENTION! Lorsque les paroles sont inintelligibles ou inaudibles, transcrire : [inaudible] Indiquer les longues périodes de silence ainsi : (silence) Ne pas divulguer les informations qui sont intentionnellement masquées avant le moment opportun. Exclure les paroles non pertinentes et les bruits de fond non pertinents. Inclure la musique de fond si elle est importante pour comprendre le contenu. Identifier la musique avec l’étiquette en majuscule MUSIQUE (ou un verbe laissant entendre de la musique), suivie d’un deux-points et du titre entre guillemets suivi de l’artiste. Par exemple : MUSIQUE : « Rocket Man » d’Elton John CAROL CHANTONNE : « Joyeux anniversaire » BOB SIFFLE : « Take Me Out to the Ball Game » Transcrire les paroles et les mettre en italiques si elles sont importantes. Dans les sous-titres, ajouter une note musicale au début et à la fin. ♪ Il y a très, très longtemps ♪ Décrire toute musique qui ne fait pas partie de l’action, mais qui contribue à l’ambiance : ♪ musique effrayante ♪ ",
 href: '../module9/transcribing-audio-fr.html#trans-what'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ce qu’il faut transcrire"
},{
 categories: 'module9',
 content: "  Transcrire avec exactitude Lors de la transcription, l’objectif est d’être le plus exact possible : Ne paraphrasez pas et n’omettez jamais de mots (et ne censurez pas). Ne remplacez jamais des mots. Ne réorganisez jamais l’ordre des paroles. Ne corrigez ni ne modifiez jamais la grammaire. Ne fournissez jamais de précisions dans les sous-titres (vous pouvez le faire dans la transcription). ",
 href: '../module9/transcribing-audio-fr.html#transcrire-avec-exactitude'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Transcrire avec exactitude"
},{
 categories: 'module9',
 content: "  Points à considérer pour une transcription et différences par rapport aux sous-titres Les transcriptions descriptives décrivent également des informations visuelles importantes (animation, texte ou graphiques, contexte, actions et expressions des personnes, des animaux, etc.). Respectez les meilleures pratiques de rédaction des descriptions (voir la section Description de l’information visuelle). Des transcriptions descriptives peuvent être produites en combinant les fichiers texte chronométrés de sous-titrage et de description (p. ex. WebVTT). Cette approche est nécessaire pour les transcriptions interactives. Si votre transcription est générée à partir de fichiers textes chronométrés, les descriptions doivent correspondre à des intervalles libres dans le contenu audio principal, ou le lecteur doit proposer une fonctionnalité permettant de faire une pause pendant la description (voir la section Description de l’information visuelle). Si votre transcription est statique, il n’est pas nécessaire de faire correspondre vos descriptions à des intervalles libres dans le contenu audio, et vous pouvez utiliser autant de mots que nécessaires pour faciliter la compréhension. Les transcriptions affichent du texte à l’écran dans les vidéos. Les sous-titres n’affichent pas de texte à l’écran. Les transcriptions indiquent également la source des sons, plutôt que de simplement les décrire. Dans certains cas, comme les dépositions judiciaires, la transcription doit être rendue intégralement, y compris les « ums », les « ahs » et les pauses. L’utilisation d’en-têtes, de sujets et de liens peut rendre la transcription plus facile à utiliser. Voici un exemple de transcription avec en-têtes. Voici un exemple de transcription organisée par sujets entre crochets. Incluez des estampilles temporelles seulement lorsque cela est utile. Si vous les incluez, il n’est pas nécessaire qu’elles soient aussi granulaires que les sous-titres et il n’est pas nécessaire d’inclure des indications de fin. Cet exemple TED Talk transcript: How technology allowed me to read ajoute une estampille temporelle à chaque paragraphe dans une transcription interactive où l’estampille est aussi un lien vidéo. Ajoutez une estampille temporelle au contenu audio inaudible. Par exemple : Rebecca : Vous avez un délai de deux semaines et [inaudible 1:20:33] pour vous préparer. ",
 href: '../module9/transcribing-audio-fr.html#points-pour-une-transcription'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Points à considérer pour une transcription et différences par rapport aux sous-titres"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.2.1 : Contenu seulement audio ou vidéo (pré-enregistré) 1.2.2 : Sous-titres (pré-enregistrés) 1.2.8 : Version de remplacement pour un média temporel (pré-enregistrée) Techniques G158 : Fournir une version de remplacement pour un média temporel seulement audio (en anglais) G159 : Fournir une version de remplacement pour un média temporel seulement vidéo (en anglais) Échecs F8 : Échec du critère de succès 1.2.2 consistant à omettre certains dialogues ou effets sonores importants dans les sous-titres (en anglais) ",
 href: '../module9/transcribing-audio-fr.html#transcribing-audio-wcag'  ,
 title: "Transcription de l’audio en texte - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
},{
 categories: 'module9',
 content: "  Aperçu – Transcriptions Les transcriptions de base sont une version texte de l’information audio parlée et non parlée nécessaire pour comprendre un contenu. Les transcriptions descriptives comprennent également une description textuelle de l’information visuelle nécessaire pour comprendre un contenu. Les transcriptions de base aident les utilisateurs sourds et les utilisateurs qui éprouvent des difficultés à traiter l’information auditive. Les transcriptions descriptives aident les utilisateurs aveugles ou sourds-aveugles et les utilisateurs qui traitent mieux l’information textuelle que l’information audio et visuelle/graphique. Les transcriptions sont également utilisées par des personnes sans incapacités dans diverses situations: Comme solution de rechange à regarder ou à écouter. Pour de nombreux utilisateurs, cela est beaucoup plus facile et plus rapide. Certains utilisateurs voudront prendre connaissance rapidement de la transcription avant de faire jouer le fichier multimédia. D’autres utilisateurs voudront sauvegarder les données sur leur appareil mobile. Utilisées hors ligne, imprimées ou converties en braille. Pour faciliter la recherche d’un document. Les transcriptions sont indexées par les moteurs de recherche, ce qui rend la page plus facile à trouver. ",
 href: '../module9/transcripts-fr.html#trans-overview'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Aperçu – Transcriptions"
},{
 categories: 'module9',
 content: "  Avez-vous besoin d’une transcription? Pour les contenus pré-enregistrés : Les contenus vidéo avec de l’audio nécessitent une transcription descriptive. Les contenus vidéo seulement nécessitent une transcription descriptive ou une audiodescription. Les contenus audios seulement nécessitent une transcription de base. Pour les diffusions en direct sur le Web : Les transcriptions pour le contenu vidéo avec de l’ audio ne s’appliquent pas aux vidéos en direct (sous-titrage en direct requis). Les contenus vidéo seulement peuvent comporter une transcription descriptive (facultatif). Les contenus audio seulement exigent soit des sous-titres, soit une transcription de base. ",
 href: '../module9/transcripts-fr.html#trans-need'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Avez-vous besoin d’une transcription?"
},{
 categories: 'module9',
 content: "  Que comprend une transcription? Pour déterminer ce qu’il faut inclure dans une transcription de base, consultez Transcription de l’audio en texte pour obtenir des conseils sur l’information audio parlée et non parlée. Les transcriptions descriptives exigent également une description de l’information importante; consultez la section Description de l’information visuelle pour obtenir des conseils. ",
 href: '../module9/transcripts-fr.html#que-comprend-une-transcription'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Que comprend une transcription?"
},{
 categories: 'module9',
 content: "  Trouver la transcription Placez la transcription ou un lien vers celle-ci directement en dessous ou à côté du lecteur multimédia. Bon exemple - Vidéo avec transcription descriptive sur la même page Dans cet exemple, la transcription est stockée dans une balise situé sous la vidéo. La balise enfant est nommé 'Transcript'. S'il y avait plusieurs transcriptions sur la même page, chacune devrait être nommée 'Transcription pour [titre]'. HTML Début du code […] Transcript Fin du code ",
 href: '../module9/transcripts-fr.html#trouver-la-transcription'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Trouver la transcription"
},{
 categories: 'module9',
 content: "  Transcriptions de présentation et de style Structurez l’information en paragraphes, listes et sections logiques. Si vous commencez par un fichier de sous-titrage, combinez plusieurs lignes en paragraphes. Si la transcription se trouve sur une autre page, fournissez un lien vers le fichier audio ou vidéo. Bon exemple : Transcription descriptive tirée des pistes de sous-titrages et de description Dans cet exemple, les fragments de phrase estampillés dans les pistes de sous-titrages et de description sont combinés en paragraphes sensés pour une transcription descriptive. Une deuxième variante de transcription présente les informations audio et la description visuelle côte à côte dans des colonnes de tableau. Exemple de fichier de sous-titrage VTT d’information audio L'exemple commence WEBVTT 00:00:07.261 --> 00:00:13.040 Certaines incapacités physiques rendent l’utilisation d’une souris difficile ou impossible. 00:00:20.160 --> 00:00:26.280 Pour inclure tout le monde, assurez-vous que votre site Web ou votre application peut être utilisé au moyen d’un clavier seulement. 00:00:27.140 --> 00:00:30.730 Y compris sur les appareils mobiles. 00:00:34.731 --> 00:00:40.880 Une grande variété de technologies d’assistance intègrent des émulateurs de clavier 00:00:41.620 --> 00:00:45.840pour offrir une fonctionnalité équivalente à une souris. L'exemple finit Exemple de fichier VTT d’audiodescription d’information visuelle L'exemple commence WEBVTT 00:00:02.120 --> 00:00:06.240 Accessibilité des sites Web : Conception pour le clavier. 00:00:14.500 --> 00:00:19.510 Un homme en fauteuil roulant utilise une baguette buccale pour taper. 00:00:31.518 --> 00:00:34.520 Une femme branche son téléphone sur un clavier portable. 00:00:46.521 --> 00:00:49.142 Une femme utilise un clavier virtuel. L'exemple finit Exemple de transcription descriptive en format texte L'exemple commence [Accessibilité du site Web : Conception pour le clavier] Narratrice : Certaines incapacités physiques rendent l’utilisation d’une souris difficile ou impossible. [Un homme en fauteuil roulant utilise une baguette buccale pour taper.] Pour inclure tout le monde, assurez-vous que votre site Web ou votre application peut être utilisé au moyen d’un clavier seulement. Y compris sur les appareils mobiles. [Une femme branche son téléphone sur un clavier portable.] Une grande variété de technologies d’assistance intègrent des émulateurs de clavier pour offrir une fonctionnalité équivalente à une souris. [Une femme utilise un clavier virtuel.] L'exemple finit Exemple de transcription descriptive sous forme de tableau L'exemple commence Transcription descriptive Audio Visuel - Accessibilité du site Web : Conception pour le clavier Certaines incapacités physiques rendent l’utilisation d’une souris difficile ou impossible. Un homme en fauteuil roulant utilise une baguette buccale pour taper. Pour inclure tout le monde, assurez-vous que votre site Web ou votre application peut être utilisé au moyen d’un clavier seulement. Y compris sur les appareils mobiles. Une femme branche son téléphone sur un clavier portable. Une grande variété de technologies d’assistance intègrent des émulateurs de clavier pour offrir une fonctionnalité équivalente à une souris. Une femme utilise un clavier virtuel. L'exemple finit ",
 href: '../module9/transcripts-fr.html#trans-style'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Transcriptions de présentation et de style"
},{
 categories: 'module9',
 content: "  Transcriptions interactives Les transcriptions interactives sont placées à côté du lecteur multimédia. À mesure que les mots sont prononcés, les mots correspondants dans la transcription sont mis en surbrillance. Les utilisateurs peuvent cliquer sur une phrase n’importe où dans la transcription pour se rendre à ce point précis dans la vidéo (ou l’audio). Les transcriptions interactives sont produites à partir de fichiers textes chronométrés spécifiés dans l’élément . Bon exemple : Transcription interactive L'application Able Player comporte une fonctionnalité de transcription interactive, élaborée à partir du chapitre, des fichiers de sous-titrage et des fichiers de description WebVTT à mesure que la page est chargée. Les utilisateurs de clavier peuvent choisir d’activer la transcription au clavier, de manière à pouvoir utiliser la touche de tabulation pour progresser dans le contenu un sous-titre à la fois, et appuyer sur la touche Entrée pour faire jouer le contenu au point désiré. L'exemple commence L'exemple finit Source: Able Player Video Demo #5: Video player with interactive transcript, subtitles, and chapters ",
 href: '../module9/transcripts-fr.html#transcriptions-interactives'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Transcriptions interactives"
},{
 categories: 'module9',
 content: "  Ressources WCAG connexes Ressources WCAG connexes Critères de succès 1.2.1 : Contenu seulement audio ou vidéo (pré-enregistré) 1.2.8 : Version de remplacement pour un média temporel (pré-enregistrée) Techniques G158 : Fournir une version de remplacement pour un média temporel seulement audio (en anglais) G159 : Fournir une version de remplacement pour un média temporel seulement vidéo (en anglais) ",
 href: '../module9/transcripts-fr.html#transcripts-wcag'  ,
 title: "Transcriptions - Module 9 - Audio, vidéo, animations et mouvement" ,
 heading: " Ressources WCAG connexes"
}]